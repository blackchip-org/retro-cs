// Code generated by gen/z80/fuse/fuse.go. DO NOT EDIT.

package z80

import "github.com/blackchip-org/retro-cs/mock"

var fuseIn = []fuseTest{
	fuseTest{
		name:    "00",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "01",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x01, 0x12, 0x34}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "02",
		af:      0x5600,
		bc:      0x0001,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x02}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "03",
		af:      0x0000,
		bc:      0x789a,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x03}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "04",
		af:      0x0000,
		bc:      0xff00,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x04}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "05",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x05}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "06",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x06, 0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "07",
		af:      0x8800,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x07}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "08",
		af:      0xdef0,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x1234,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x08}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "09",
		af:      0x0000,
		bc:      0x5678,
		de:      0x0000,
		hl:      0x9abc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x09}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "0a",
		af:      0x0000,
		bc:      0x0001,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x0a, 0xde}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "0b",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x0b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "0c",
		af:      0x0000,
		bc:      0x007f,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x0c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "0d",
		af:      0x0000,
		bc:      0x0080,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x0d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "0e",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x0e, 0xf0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "0f",
		af:      0x4100,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x0f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "10",
		af:      0x0000,
		bc:      0x0800,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 132,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x00, 0x10, 0xfd, 0x0c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "11",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x11, 0x9a, 0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "12",
		af:      0x5600,
		bc:      0x0000,
		de:      0x8000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x12}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "13",
		af:      0x0000,
		bc:      0x0000,
		de:      0xdef0,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x13}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "14",
		af:      0x0000,
		bc:      0x0000,
		de:      0x2700,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x14}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "15",
		af:      0x0000,
		bc:      0x0000,
		de:      0x1000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x15}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "16",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x16, 0x12}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "17",
		af:      0x0801,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x17}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "18",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x18, 0x40}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "19",
		af:      0x0000,
		bc:      0x0000,
		de:      0x3456,
		hl:      0x789a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x19}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "1a",
		af:      0x0000,
		bc:      0x0000,
		de:      0x8000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x1a}},
			mock.Slice{Addr: 0x8000, Values: []uint8{0x13}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "1b",
		af:      0x0000,
		bc:      0x0000,
		de:      0xe5d4,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x1b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "1c",
		af:      0x0000,
		bc:      0x0000,
		de:      0x00aa,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "1d",
		af:      0x0000,
		bc:      0x0000,
		de:      0x00aa,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x1d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "1e",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x1e, 0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "1f",
		af:      0x01c4,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x1f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "20_1",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x20, 0x40}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "20_2",
		af:      0x0040,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x20, 0x40}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "21",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x21, 0x28, 0xed}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "22",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0xc64c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x22, 0xb0, 0xc3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "23",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x9c4e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x23}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "24",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x7200,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x24}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "25",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0xa500,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x25}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "26",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x26, 0x3a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "27_1",
		af:      0x9a02,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "27",
		af:      0x1f00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "28_1",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x28, 0x8e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "28_2",
		af:      0x0040,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x28, 0x8e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "29",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0xcdfa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x29}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "2a",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x2a, 0x45, 0xac}},
			mock.Slice{Addr: 0xac45, Values: []uint8{0xc4, 0xde}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "2b",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x9e66,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x2b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "2c",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0026,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x2c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "2d",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0032,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x2d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "2e",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x2e, 0x18}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "2f",
		af:      0x8900,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x2f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "30_1",
		af:      0x0036,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x30, 0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "30_2",
		af:      0x0037,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x30, 0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "31",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x31, 0xd4, 0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "32",
		af:      0x0e00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x32, 0xac, 0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "33",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xa55a,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x33}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "34",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0xfe1d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x34}},
			mock.Slice{Addr: 0xfe1d, Values: []uint8{0xfd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "35",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x470c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x35}},
			mock.Slice{Addr: 0x470c, Values: []uint8{0x82}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "36",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x7d29,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x36, 0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "37_1",
		af:      0x00ff,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "37_2",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "37_3",
		af:      0xffff,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "37",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "38_1",
		af:      0x00b2,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x38, 0x66}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "38_2",
		af:      0x00b3,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x38, 0x66}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "39",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x1aef,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xc534,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x29}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "3a",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x3a, 0x52, 0x99}},
			mock.Slice{Addr: 0x9952, Values: []uint8{0x28}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "3b",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x9d36,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x3b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "3c",
		af:      0xcf00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x3c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "3d",
		af:      0xea00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x3d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "3e",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x3e, 0xd6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "3f",
		af:      0x005b,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x3f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "40",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x40}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "41",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x41}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "42",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x42}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "43",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x43}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "44",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x44}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "45",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x45}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "46",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x46}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "47",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x47}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "48",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x48}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "49",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x49}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "4a",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x4a}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "4b",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x4b}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "4c",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x4c}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "4d",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x4d}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "4e",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x4e}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "4f",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x4f}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "50",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x50}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "51",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x51}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "52",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x52}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "53",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x53}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "54",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x54}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "55",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x55}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "56",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x56}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "57",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x57}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "58",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x58}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "59",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x59}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "5a",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x5a}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "5b",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x5b}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "5c",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x5c}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "5d",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x5d}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "5e",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x5e}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "5f",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x5f}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "60",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x60}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "61",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x61}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "62",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x62}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "63",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x63}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "64",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x64}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "65",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x65}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "66",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x66}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "67",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x67}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "68",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x68}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "69",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x69}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "6a",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x6a}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "6b",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x6b}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "6c",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x6c}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "6d",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x6d}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "6e",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x6e}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "6f",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x6f}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "70",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x70}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "71",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x71}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "72",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x72}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "73",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x73}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "74",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x74}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "75",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x75}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "76",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x76}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "77",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x77}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "78",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x78}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "79",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x79}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "7a",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x7a}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "7b",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x7b}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "7c",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x7c}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "7d",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x7d}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "7e",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x7e}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "7f",
		af:      0x0200,
		bc:      0xcf98,
		de:      0x90d8,
		hl:      0xa169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x7f}},
			mock.Slice{Addr: 0xa169, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "80",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x80}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "81",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x81}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "82",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x82}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "83",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x83}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "84",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x84}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "85",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x85}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "86",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x86}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "87",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x87}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "88",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x88}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "89",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x89}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "8a",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x8a}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "8b",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x8b}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "8c",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x8c}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "8d",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x8d}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "8e",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x8e}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "8f",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x8f}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "90",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x90}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "91",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x91}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "92",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x92}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "93",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x93}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "94",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x94}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "95",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x95}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "96",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x96}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "97",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x97}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "98",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x98}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "99",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x99}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "9a",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x9a}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "9b",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x9b}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "9c",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x9c}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "9d",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x9d}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "9e",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x9e}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "9f",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0x9f}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a0",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa0}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a1",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa1}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a2",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa2}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a3",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa3}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a4",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa4}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a5",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa5}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a6",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa6}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a7",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa7}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a8",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa8}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "a9",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xa9}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "aa",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xaa}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ab",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xab}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ac",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xac}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ad",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xad}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ae",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xae}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "af",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xaf}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b0",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb0}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b1",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb1}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b2",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb2}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b3",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb3}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b4",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb4}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b5",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb5}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b6",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb6}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b7",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb7}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b8",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb8}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "b9",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xb9}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ba",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xba}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "bb",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xbb}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "bc",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xbc}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "bd",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xbd}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "be",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xbe}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "bf",
		af:      0xf500,
		bc:      0x0f3b,
		de:      0x200d,
		hl:      0xdca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xbf}},
			mock.Slice{Addr: 0xdca6, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c0_1",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c0_2",
		af:      0x00d8,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c1",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x4143,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc1}},
			mock.Slice{Addr: 0x4143, Values: []uint8{0xce, 0xe8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c2_1",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c2_2",
		af:      0x00c7,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c3",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc3, 0xed, 0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c4_1",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c4_2",
		af:      0x004e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c5",
		af:      0x53e3,
		bc:      0x1459,
		de:      0x775f,
		hl:      0x1a2f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xec12,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c6",
		af:      0xca00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc6, 0x6f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c7",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xc7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c8_1",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c8_2",
		af:      0x00d8,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "c9",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x887e,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xc9}},
			mock.Slice{Addr: 0x887e, Values: []uint8{0x36, 0x11}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ca_1",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xca, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ca_2",
		af:      0x00c7,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xca, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb00",
		af:      0xda00,
		bc:      0xe479,
		de:      0x552e,
		hl:      0xa806,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x00}},
			mock.Slice{Addr: 0xa806, Values: []uint8{0x76}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb01",
		af:      0x1000,
		bc:      0xb379,
		de:      0xb480,
		hl:      0xef65,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x01}},
			mock.Slice{Addr: 0xef65, Values: []uint8{0xfb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb02",
		af:      0x2e00,
		bc:      0x9adf,
		de:      0xae6e,
		hl:      0xa7f2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x02}},
			mock.Slice{Addr: 0xa7f2, Values: []uint8{0x4a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb03",
		af:      0x6800,
		bc:      0x9995,
		de:      0xde3f,
		hl:      0xca71,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x03}},
			mock.Slice{Addr: 0xca71, Values: []uint8{0xe7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb04",
		af:      0x8c00,
		bc:      0xbeea,
		de:      0x0ce4,
		hl:      0x67b0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x04}},
			mock.Slice{Addr: 0x67b0, Values: []uint8{0xcd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb05",
		af:      0x3600,
		bc:      0xe19f,
		de:      0x78c9,
		hl:      0xcb32,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x05}},
			mock.Slice{Addr: 0xcb32, Values: []uint8{0x1b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb06",
		af:      0x8a00,
		bc:      0xdb02,
		de:      0x8fb1,
		hl:      0x5b04,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x06}},
			mock.Slice{Addr: 0x5b04, Values: []uint8{0xd4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb07",
		af:      0x6d00,
		bc:      0x19cf,
		de:      0x7259,
		hl:      0xdcaa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x07}},
			mock.Slice{Addr: 0xdcaa, Values: []uint8{0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb08",
		af:      0x8000,
		bc:      0xcdb5,
		de:      0x818e,
		hl:      0x2ee2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x08}},
			mock.Slice{Addr: 0x2ee2, Values: []uint8{0x53}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb09",
		af:      0x1800,
		bc:      0x125c,
		de:      0xdd97,
		hl:      0x59c6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x09}},
			mock.Slice{Addr: 0x59c6, Values: []uint8{0x9e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb0a",
		af:      0x1200,
		bc:      0x3ba1,
		de:      0x7724,
		hl:      0x63ad,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x0a}},
			mock.Slice{Addr: 0x63ad, Values: []uint8{0x96}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb0b",
		af:      0x7600,
		bc:      0x2abf,
		de:      0xb626,
		hl:      0x0289,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x0b}},
			mock.Slice{Addr: 0x0289, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb0c",
		af:      0x0e00,
		bc:      0x6fc5,
		de:      0x2f12,
		hl:      0x34d9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x0c}},
			mock.Slice{Addr: 0x34d9, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb0d",
		af:      0x6300,
		bc:      0x95a3,
		de:      0xfcd2,
		hl:      0x519a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x0d}},
			mock.Slice{Addr: 0x519a, Values: []uint8{0x7a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb0e",
		af:      0xfc00,
		bc:      0xadf9,
		de:      0x4925,
		hl:      0x543e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x0e}},
			mock.Slice{Addr: 0x543e, Values: []uint8{0xd2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb0f",
		af:      0xc300,
		bc:      0x18f3,
		de:      0x41b8,
		hl:      0x070b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x0f}},
			mock.Slice{Addr: 0x070b, Values: []uint8{0x86}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb10",
		af:      0xf800,
		bc:      0xdc25,
		de:      0x33b3,
		hl:      0x0d74,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x10}},
			mock.Slice{Addr: 0x0d74, Values: []uint8{0x3d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb11",
		af:      0x6500,
		bc:      0xe25c,
		de:      0x4b8a,
		hl:      0xed42,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x11}},
			mock.Slice{Addr: 0xed42, Values: []uint8{0xb7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb12",
		af:      0x7700,
		bc:      0x1384,
		de:      0x0f50,
		hl:      0x29c6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x12}},
			mock.Slice{Addr: 0x29c6, Values: []uint8{0x88}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb13",
		af:      0xce00,
		bc:      0x9f17,
		de:      0xe128,
		hl:      0x3ed7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x13}},
			mock.Slice{Addr: 0x3ed7, Values: []uint8{0xea}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb14",
		af:      0xb200,
		bc:      0x541a,
		de:      0x60c7,
		hl:      0x7c9a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x14}},
			mock.Slice{Addr: 0x7c9a, Values: []uint8{0x0f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb15",
		af:      0x2d00,
		bc:      0xc1df,
		de:      0x6eab,
		hl:      0x03e2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x15}},
			mock.Slice{Addr: 0x03e2, Values: []uint8{0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb16",
		af:      0x3600,
		bc:      0x3b53,
		de:      0x1a4a,
		hl:      0x684e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x16}},
			mock.Slice{Addr: 0x684e, Values: []uint8{0xc3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb17",
		af:      0x5400,
		bc:      0xd090,
		de:      0xf60d,
		hl:      0x0fa2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x17}},
			mock.Slice{Addr: 0x0fa2, Values: []uint8{0x23}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb18",
		af:      0x8600,
		bc:      0xc658,
		de:      0x755f,
		hl:      0x9596,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x18}},
			mock.Slice{Addr: 0x9596, Values: []uint8{0xb6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb19",
		af:      0x9600,
		bc:      0xbeb3,
		de:      0x7c22,
		hl:      0x71c8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x19}},
			mock.Slice{Addr: 0x71c8, Values: []uint8{0x85}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb1a",
		af:      0x3900,
		bc:      0x882f,
		de:      0x543b,
		hl:      0x5279,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x1a}},
			mock.Slice{Addr: 0x5279, Values: []uint8{0x26}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb1b",
		af:      0x9e00,
		bc:      0xb338,
		de:      0x876c,
		hl:      0xe8b4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x1b}},
			mock.Slice{Addr: 0xe8b4, Values: []uint8{0xb9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb1c",
		af:      0x4b00,
		bc:      0xb555,
		de:      0x238f,
		hl:      0x311d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x1c}},
			mock.Slice{Addr: 0x311d, Values: []uint8{0x11}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb1d",
		af:      0x2100,
		bc:      0x3d7e,
		de:      0x5e39,
		hl:      0xe451,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x1d}},
			mock.Slice{Addr: 0xe451, Values: []uint8{0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb1e",
		af:      0x5e00,
		bc:      0x66b9,
		de:      0x80dc,
		hl:      0x00ef,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x1e}},
			mock.Slice{Addr: 0x00ef, Values: []uint8{0x91}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb1f",
		af:      0xed00,
		bc:      0xb838,
		de:      0x8e18,
		hl:      0xace7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x1f}},
			mock.Slice{Addr: 0xace7, Values: []uint8{0x82}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb20",
		af:      0xc700,
		bc:      0x0497,
		de:      0xd72b,
		hl:      0xccb6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x20}},
			mock.Slice{Addr: 0xccb6, Values: []uint8{0x1a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb21",
		af:      0x2200,
		bc:      0x5cf4,
		de:      0x938e,
		hl:      0x37a8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x21}},
			mock.Slice{Addr: 0x37a8, Values: []uint8{0xdd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb22",
		af:      0x8500,
		bc:      0x0950,
		de:      0xe7e8,
		hl:      0x0641,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x22}},
			mock.Slice{Addr: 0x0641, Values: []uint8{0x4d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb23",
		af:      0x2100,
		bc:      0x2a7c,
		de:      0x37d0,
		hl:      0xaa59,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x23}},
			mock.Slice{Addr: 0xaa59, Values: []uint8{0xc1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb24",
		af:      0xfb00,
		bc:      0xb9de,
		de:      0x7014,
		hl:      0x84b6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x24}},
			mock.Slice{Addr: 0x84b6, Values: []uint8{0x80}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb25",
		af:      0x1500,
		bc:      0x6bbc,
		de:      0x894e,
		hl:      0x85bc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x25}},
			mock.Slice{Addr: 0x85bc, Values: []uint8{0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb26",
		af:      0x0a00,
		bc:      0x372e,
		de:      0xe315,
		hl:      0x283a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x26}},
			mock.Slice{Addr: 0x283a, Values: []uint8{0xee}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb27",
		af:      0xbf00,
		bc:      0xbdba,
		de:      0x67ab,
		hl:      0x5ea2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x27}},
			mock.Slice{Addr: 0x5ea2, Values: []uint8{0xbd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb28",
		af:      0xc000,
		bc:      0x0435,
		de:      0x3e0f,
		hl:      0x021b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x28}},
			mock.Slice{Addr: 0x021b, Values: []uint8{0x90}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb29",
		af:      0x0600,
		bc:      0xf142,
		de:      0x6ada,
		hl:      0xc306,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x29}},
			mock.Slice{Addr: 0xc306, Values: []uint8{0x5c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb2a",
		af:      0x3000,
		bc:      0xec3a,
		de:      0x7f7d,
		hl:      0x3473,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x2a}},
			mock.Slice{Addr: 0x3473, Values: []uint8{0x34}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb2b",
		af:      0xe000,
		bc:      0xccf0,
		de:      0xbbda,
		hl:      0xb78a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x2b}},
			mock.Slice{Addr: 0xb78a, Values: []uint8{0xab}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb2c",
		af:      0x5b00,
		bc:      0x25c0,
		de:      0x996d,
		hl:      0x1e7b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x2c}},
			mock.Slice{Addr: 0x1e7b, Values: []uint8{0x2c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb2d",
		af:      0x5e00,
		bc:      0xc51b,
		de:      0x58e3,
		hl:      0x78ea,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x2d}},
			mock.Slice{Addr: 0x78ea, Values: []uint8{0x85}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb2e",
		af:      0x3900,
		bc:      0xa2cd,
		de:      0x0629,
		hl:      0x24bf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x2e}},
			mock.Slice{Addr: 0x24bf, Values: []uint8{0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb2f",
		af:      0xaa00,
		bc:      0xa194,
		de:      0xd0e3,
		hl:      0x5c65,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x2f}},
			mock.Slice{Addr: 0x5c65, Values: []uint8{0xc9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb30",
		af:      0xcd00,
		bc:      0x7a81,
		de:      0xd67b,
		hl:      0x656b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x30}},
			mock.Slice{Addr: 0x656b, Values: []uint8{0x32}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb31",
		af:      0x2800,
		bc:      0xe7fa,
		de:      0x6d8c,
		hl:      0x75a4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x31}},
			mock.Slice{Addr: 0x75a4, Values: []uint8{0x0c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb32",
		af:      0x1300,
		bc:      0x3f36,
		de:      0xf608,
		hl:      0x5e56,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x32}},
			mock.Slice{Addr: 0x5e56, Values: []uint8{0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb33",
		af:      0xd500,
		bc:      0x9720,
		de:      0x7644,
		hl:      0x038f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x33}},
			mock.Slice{Addr: 0x038f, Values: []uint8{0xba}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb34",
		af:      0x1200,
		bc:      0x77f6,
		de:      0x0206,
		hl:      0xfb38,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x34}},
			mock.Slice{Addr: 0xfb38, Values: []uint8{0x07}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb35",
		af:      0x3c00,
		bc:      0xfd68,
		de:      0xea91,
		hl:      0x7861,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x35}},
			mock.Slice{Addr: 0x7861, Values: []uint8{0x72}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb36",
		af:      0x8a00,
		bc:      0x1185,
		de:      0x1dde,
		hl:      0x6d38,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x36}},
			mock.Slice{Addr: 0x6d38, Values: []uint8{0xf1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb37",
		af:      0x4300,
		bc:      0xd7bc,
		de:      0x9133,
		hl:      0x6e56,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x37}},
			mock.Slice{Addr: 0x6e56, Values: []uint8{0xf8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb38",
		af:      0xdf00,
		bc:      0x7c1b,
		de:      0x9f9f,
		hl:      0x4ff2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x38}},
			mock.Slice{Addr: 0x4ff2, Values: []uint8{0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb39",
		af:      0x6600,
		bc:      0xb702,
		de:      0x14f5,
		hl:      0x3c17,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x39}},
			mock.Slice{Addr: 0x3c17, Values: []uint8{0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb3a",
		af:      0xd100,
		bc:      0x5c5f,
		de:      0xe42e,
		hl:      0xf1b1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x3a}},
			mock.Slice{Addr: 0xf1b1, Values: []uint8{0x6e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb3b",
		af:      0xb200,
		bc:      0x38c8,
		de:      0xa560,
		hl:      0x7419,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x3b}},
			mock.Slice{Addr: 0x7419, Values: []uint8{0x11}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb3c",
		af:      0x7800,
		bc:      0xcfae,
		de:      0x66d8,
		hl:      0x2ad8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x3c}},
			mock.Slice{Addr: 0x2ad8, Values: []uint8{0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb3d",
		af:      0xe600,
		bc:      0xdcda,
		de:      0x06aa,
		hl:      0x46cd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x3d}},
			mock.Slice{Addr: 0x46cd, Values: []uint8{0xf9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb3e",
		af:      0xa900,
		bc:      0x6a34,
		de:      0xe8d0,
		hl:      0xa96c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x3e}},
			mock.Slice{Addr: 0xa96c, Values: []uint8{0xa0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb3f",
		af:      0xf100,
		bc:      0xceea,
		de:      0x721e,
		hl:      0x77f0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x3f}},
			mock.Slice{Addr: 0x77f0, Values: []uint8{0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb40",
		af:      0x9e00,
		bc:      0xbcb2,
		de:      0xefaa,
		hl:      0x505f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x40}},
			mock.Slice{Addr: 0x505f, Values: []uint8{0x59}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb41",
		af:      0x9e00,
		bc:      0x1b43,
		de:      0x954e,
		hl:      0x7be9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x41}},
			mock.Slice{Addr: 0x7be9, Values: []uint8{0xf7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb42",
		af:      0xf200,
		bc:      0xdd12,
		de:      0x7d4f,
		hl:      0x551f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x42}},
			mock.Slice{Addr: 0x551f, Values: []uint8{0xc9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb43",
		af:      0xad00,
		bc:      0xc3b3,
		de:      0xf1d0,
		hl:      0xbab4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x43}},
			mock.Slice{Addr: 0xbab4, Values: []uint8{0x76}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb44",
		af:      0xb700,
		bc:      0xc829,
		de:      0x27e3,
		hl:      0x5b92,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x44}},
			mock.Slice{Addr: 0x5b92, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb45",
		af:      0x7700,
		bc:      0x68ee,
		de:      0x0c77,
		hl:      0x409b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x45}},
			mock.Slice{Addr: 0x409b, Values: []uint8{0x64}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb46",
		af:      0x7200,
		bc:      0x7ae3,
		de:      0xa11e,
		hl:      0x6131,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x46}},
			mock.Slice{Addr: 0x6131, Values: []uint8{0xd5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb47_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb47",
		af:      0x1000,
		bc:      0xd8ca,
		de:      0xe2c4,
		hl:      0x8a8c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x47}},
			mock.Slice{Addr: 0x8a8c, Values: []uint8{0x0e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb48",
		af:      0xa900,
		bc:      0x6264,
		de:      0xe833,
		hl:      0x6de0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x48}},
			mock.Slice{Addr: 0x6de0, Values: []uint8{0x8c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb49",
		af:      0x6c00,
		bc:      0xd0f7,
		de:      0x1db7,
		hl:      0xa040,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x49}},
			mock.Slice{Addr: 0xa040, Values: []uint8{0x5f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb4a",
		af:      0x4f00,
		bc:      0xf04c,
		de:      0x5b29,
		hl:      0x77a4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x4a}},
			mock.Slice{Addr: 0x77a4, Values: []uint8{0x96}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb4b",
		af:      0x5500,
		bc:      0x9848,
		de:      0x095f,
		hl:      0x40ca,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x4b}},
			mock.Slice{Addr: 0x40ca, Values: []uint8{0x8a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb4c",
		af:      0x8800,
		bc:      0x0521,
		de:      0xbf31,
		hl:      0x6d5d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x4c}},
			mock.Slice{Addr: 0x6d5d, Values: []uint8{0xe7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb4d",
		af:      0xf900,
		bc:      0x27d0,
		de:      0x0f7e,
		hl:      0x158d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x4d}},
			mock.Slice{Addr: 0x158d, Values: []uint8{0xe0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb4e",
		af:      0x2600,
		bc:      0x9207,
		de:      0x459a,
		hl:      0xada3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x4e}},
			mock.Slice{Addr: 0xada3, Values: []uint8{0x5b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb4f_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb4f",
		af:      0x1700,
		bc:      0x2dc1,
		de:      0xaca2,
		hl:      0x0bcc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x4f}},
			mock.Slice{Addr: 0x0bcc, Values: []uint8{0xa3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb50",
		af:      0x2300,
		bc:      0x2749,
		de:      0x1012,
		hl:      0x84d2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x50}},
			mock.Slice{Addr: 0x84d2, Values: []uint8{0x6a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb51",
		af:      0x2200,
		bc:      0xb7db,
		de:      0xe19d,
		hl:      0xaafc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x51}},
			mock.Slice{Addr: 0xaafc, Values: []uint8{0xa6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb52",
		af:      0x8b00,
		bc:      0xff7a,
		de:      0xb0ff,
		hl:      0xac44,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x52}},
			mock.Slice{Addr: 0xac44, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb53",
		af:      0x6000,
		bc:      0x31a1,
		de:      0xa4f4,
		hl:      0x7c75,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x53}},
			mock.Slice{Addr: 0x7c75, Values: []uint8{0xab}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb54",
		af:      0x3800,
		bc:      0x7ccc,
		de:      0x89cc,
		hl:      0x1999,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x54}},
			mock.Slice{Addr: 0x1999, Values: []uint8{0x98}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb55",
		af:      0xf900,
		bc:      0x1f79,
		de:      0x19cd,
		hl:      0xfb4b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x55}},
			mock.Slice{Addr: 0xfb4b, Values: []uint8{0x0b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb56",
		af:      0x1500,
		bc:      0x2bfe,
		de:      0xe3b5,
		hl:      0xbbf9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x56}},
			mock.Slice{Addr: 0xbbf9, Values: []uint8{0x10}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb57_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x57}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb57",
		af:      0x6600,
		bc:      0xaf32,
		de:      0x532a,
		hl:      0xda50,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x57}},
			mock.Slice{Addr: 0xda50, Values: []uint8{0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb58",
		af:      0x5000,
		bc:      0x1aee,
		de:      0x2e47,
		hl:      0x1479,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x58}},
			mock.Slice{Addr: 0x1479, Values: []uint8{0xa0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb59",
		af:      0x7200,
		bc:      0x5e68,
		de:      0xff28,
		hl:      0x2075,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x59}},
			mock.Slice{Addr: 0x2075, Values: []uint8{0xc1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb5a",
		af:      0xeb00,
		bc:      0xfea7,
		de:      0x17d1,
		hl:      0xd99b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x5a}},
			mock.Slice{Addr: 0xd99b, Values: []uint8{0xe8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb5b",
		af:      0x6b00,
		bc:      0x6f2c,
		de:      0x3fe3,
		hl:      0x1691,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x5b}},
			mock.Slice{Addr: 0x1691, Values: []uint8{0xc7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb5c",
		af:      0x3300,
		bc:      0xa7e7,
		de:      0x2077,
		hl:      0x13e9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x5c}},
			mock.Slice{Addr: 0x13e9, Values: []uint8{0xae}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb5d",
		af:      0xc100,
		bc:      0xafcc,
		de:      0xc8b1,
		hl:      0xee49,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x5d}},
			mock.Slice{Addr: 0xee49, Values: []uint8{0xa6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb5e",
		af:      0x3000,
		bc:      0xad43,
		de:      0x16c1,
		hl:      0x349a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x5e}},
			mock.Slice{Addr: 0x349a, Values: []uint8{0x3c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb5f_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x5f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb5f",
		af:      0x8c00,
		bc:      0x1b67,
		de:      0x2314,
		hl:      0x6133,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x5f}},
			mock.Slice{Addr: 0x6133, Values: []uint8{0x90}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb60",
		af:      0x9900,
		bc:      0x34b5,
		de:      0x0fd8,
		hl:      0x5273,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x60}},
			mock.Slice{Addr: 0x5273, Values: []uint8{0x0a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb61",
		af:      0xd100,
		bc:      0x219f,
		de:      0x3bb4,
		hl:      0x7c44,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x61}},
			mock.Slice{Addr: 0x7c44, Values: []uint8{0x77}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb62",
		af:      0xaf00,
		bc:      0xbdf8,
		de:      0xc536,
		hl:      0x8cc5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x62}},
			mock.Slice{Addr: 0x8cc5, Values: []uint8{0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb63",
		af:      0x2a00,
		bc:      0x5e16,
		de:      0xf627,
		hl:      0x84ca,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x63}},
			mock.Slice{Addr: 0x84ca, Values: []uint8{0xe6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb64",
		af:      0xa900,
		bc:      0xa365,
		de:      0xc00b,
		hl:      0xea94,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x64}},
			mock.Slice{Addr: 0xea94, Values: []uint8{0x0c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb65",
		af:      0x1800,
		bc:      0x8d58,
		de:      0x4256,
		hl:      0x427a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x65}},
			mock.Slice{Addr: 0x427a, Values: []uint8{0xee}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb66",
		af:      0x4c00,
		bc:      0x3ef7,
		de:      0xe544,
		hl:      0xa44f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x66}},
			mock.Slice{Addr: 0xa44f, Values: []uint8{0xd2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb67_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x67}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb67",
		af:      0x8600,
		bc:      0x5e92,
		de:      0x2986,
		hl:      0x394d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x67}},
			mock.Slice{Addr: 0x394d, Values: []uint8{0x10}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb68",
		af:      0xd700,
		bc:      0x0f6a,
		de:      0x18a6,
		hl:      0xddd2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x68}},
			mock.Slice{Addr: 0xddd2, Values: []uint8{0x16}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb69",
		af:      0xda00,
		bc:      0x691b,
		de:      0x7c79,
		hl:      0x1dba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x69}},
			mock.Slice{Addr: 0x1dba, Values: []uint8{0x8a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb6a",
		af:      0x2200,
		bc:      0x13e8,
		de:      0x86d4,
		hl:      0x4e09,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x6a}},
			mock.Slice{Addr: 0x4e09, Values: []uint8{0xd5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb6b",
		af:      0xaf00,
		bc:      0x5123,
		de:      0x7635,
		hl:      0x1ca9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x6b}},
			mock.Slice{Addr: 0x1ca9, Values: []uint8{0x86}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb6c",
		af:      0x4300,
		bc:      0xfaa6,
		de:      0xabc2,
		hl:      0x5605,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x6c}},
			mock.Slice{Addr: 0x5605, Values: []uint8{0x2b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb6d",
		af:      0x7f00,
		bc:      0xf099,
		de:      0xd435,
		hl:      0xd9ad,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x6d}},
			mock.Slice{Addr: 0xd9ad, Values: []uint8{0x4e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb6e",
		af:      0x4a00,
		bc:      0x08c9,
		de:      0x8177,
		hl:      0xd8ba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x6e}},
			mock.Slice{Addr: 0xd8ba, Values: []uint8{0x31}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb6f_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x6f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb6f",
		af:      0xa100,
		bc:      0x8c80,
		de:      0x4678,
		hl:      0x4d34,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x6f}},
			mock.Slice{Addr: 0x4d34, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb70",
		af:      0x1900,
		bc:      0x958a,
		de:      0x5dab,
		hl:      0xf913,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x70}},
			mock.Slice{Addr: 0xf913, Values: []uint8{0xcf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb71",
		af:      0x3d00,
		bc:      0x095e,
		de:      0xd6df,
		hl:      0x42fe,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x71}},
			mock.Slice{Addr: 0x42fe, Values: []uint8{0x24}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb72",
		af:      0xa500,
		bc:      0xc0bf,
		de:      0x4c8d,
		hl:      0xad11,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x72}},
			mock.Slice{Addr: 0xad11, Values: []uint8{0x3b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb73",
		af:      0xf200,
		bc:      0x49a6,
		de:      0xb279,
		hl:      0x2ecc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x73}},
			mock.Slice{Addr: 0x2ecc, Values: []uint8{0xe0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb74",
		af:      0x0500,
		bc:      0x445e,
		de:      0x05e9,
		hl:      0x983d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x74}},
			mock.Slice{Addr: 0x983d, Values: []uint8{0xfa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb75",
		af:      0x6b00,
		bc:      0x83c6,
		de:      0x635a,
		hl:      0xd18d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x75}},
			mock.Slice{Addr: 0xd18d, Values: []uint8{0x11}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb76",
		af:      0xf800,
		bc:      0x3057,
		de:      0x3629,
		hl:      0xbc71,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x76}},
			mock.Slice{Addr: 0xbc71, Values: []uint8{0x18}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb77_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x77}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb77",
		af:      0x9200,
		bc:      0xd6f8,
		de:      0x5100,
		hl:      0x736d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x77}},
			mock.Slice{Addr: 0x736d, Values: []uint8{0x36}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb78",
		af:      0x7200,
		bc:      0x1cf8,
		de:      0x8d2b,
		hl:      0xc76a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x78}},
			mock.Slice{Addr: 0xc76a, Values: []uint8{0x1f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb79",
		af:      0xa800,
		bc:      0x809e,
		de:      0x1124,
		hl:      0x39e8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x79}},
			mock.Slice{Addr: 0x39e8, Values: []uint8{0x98}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb7a",
		af:      0x5800,
		bc:      0x7d24,
		de:      0x63e1,
		hl:      0xd9af,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x7a}},
			mock.Slice{Addr: 0xd9af, Values: []uint8{0xed}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb7b",
		af:      0x0300,
		bc:      0x50ab,
		de:      0x05bd,
		hl:      0x6bd0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x7b}},
			mock.Slice{Addr: 0x6bd0, Values: []uint8{0xa5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb7c",
		af:      0xad00,
		bc:      0xf77b,
		de:      0x55ae,
		hl:      0x063b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x7c}},
			mock.Slice{Addr: 0x063b, Values: []uint8{0x34}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb7d",
		af:      0x8200,
		bc:      0xb792,
		de:      0x38cb,
		hl:      0x5f9b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x7d}},
			mock.Slice{Addr: 0x5f9b, Values: []uint8{0x97}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb7e",
		af:      0x4200,
		bc:      0x3b91,
		de:      0xf59c,
		hl:      0xa25e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x7e}},
			mock.Slice{Addr: 0xa25e, Values: []uint8{0xd7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb7f_1",
		af:      0xff00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x7f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb7f",
		af:      0x6a00,
		bc:      0x84ec,
		de:      0xcf4e,
		hl:      0x185b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x7f}},
			mock.Slice{Addr: 0x185b, Values: []uint8{0xf1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb80",
		af:      0x8f00,
		bc:      0x702f,
		de:      0x17bd,
		hl:      0xa706,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x80}},
			mock.Slice{Addr: 0xa706, Values: []uint8{0x0a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb81",
		af:      0xae00,
		bc:      0x947f,
		de:      0x7153,
		hl:      0x6616,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x81}},
			mock.Slice{Addr: 0x6616, Values: []uint8{0x74}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb82",
		af:      0x8100,
		bc:      0xbed2,
		de:      0xc719,
		hl:      0x4572,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x82}},
			mock.Slice{Addr: 0x4572, Values: []uint8{0x2f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb83",
		af:      0xe600,
		bc:      0x63a2,
		de:      0xccf7,
		hl:      0xae9a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x83}},
			mock.Slice{Addr: 0xae9a, Values: []uint8{0x16}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb84",
		af:      0xce00,
		bc:      0xe0cc,
		de:      0xd305,
		hl:      0xd6c0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x84}},
			mock.Slice{Addr: 0xd6c0, Values: []uint8{0x72}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb85",
		af:      0xf300,
		bc:      0xed79,
		de:      0x9db7,
		hl:      0xdda0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x85}},
			mock.Slice{Addr: 0xdda0, Values: []uint8{0x8a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb86",
		af:      0x2a00,
		bc:      0xb0b9,
		de:      0x9426,
		hl:      0x1b48,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x86}},
			mock.Slice{Addr: 0x1b48, Values: []uint8{0x62}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb87",
		af:      0x1100,
		bc:      0x86dc,
		de:      0x1798,
		hl:      0xdfc5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x87}},
			mock.Slice{Addr: 0xdfc5, Values: []uint8{0xde}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb88",
		af:      0xe300,
		bc:      0x8a21,
		de:      0xe33e,
		hl:      0x674d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x88}},
			mock.Slice{Addr: 0x674d, Values: []uint8{0x5f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb89",
		af:      0x6000,
		bc:      0xd186,
		de:      0xc5b6,
		hl:      0x1bd7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x89}},
			mock.Slice{Addr: 0x1bd7, Values: []uint8{0xf2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb8a",
		af:      0x3e00,
		bc:      0x5fcd,
		de:      0x0b38,
		hl:      0xb98e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x8a}},
			mock.Slice{Addr: 0xb98e, Values: []uint8{0x2f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb8b",
		af:      0x6500,
		bc:      0x040e,
		de:      0x103f,
		hl:      0x4a07,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x8b}},
			mock.Slice{Addr: 0x4a07, Values: []uint8{0x3f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb8c",
		af:      0xf800,
		bc:      0x6d27,
		de:      0x9bdf,
		hl:      0xdaef,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x8c}},
			mock.Slice{Addr: 0xdaef, Values: []uint8{0x0c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb8d",
		af:      0x3e00,
		bc:      0x5469,
		de:      0x2c28,
		hl:      0xbd72,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x8d}},
			mock.Slice{Addr: 0xbd72, Values: []uint8{0x13}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb8e",
		af:      0x1f00,
		bc:      0x140b,
		de:      0xb492,
		hl:      0x63a7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x8e}},
			mock.Slice{Addr: 0x63a7, Values: []uint8{0xd4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb8f",
		af:      0x2500,
		bc:      0xc522,
		de:      0xca46,
		hl:      0x1c1a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x8f}},
			mock.Slice{Addr: 0x1c1a, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb90",
		af:      0x5700,
		bc:      0x595c,
		de:      0x4f0a,
		hl:      0xc73c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x90}},
			mock.Slice{Addr: 0xc73c, Values: []uint8{0xa2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb91",
		af:      0x5e00,
		bc:      0x8f26,
		de:      0xa735,
		hl:      0x97e0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x91}},
			mock.Slice{Addr: 0x97e0, Values: []uint8{0x5e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb92",
		af:      0x3300,
		bc:      0x7d9f,
		de:      0x87d0,
		hl:      0x83d0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x92}},
			mock.Slice{Addr: 0x83d0, Values: []uint8{0x2b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb93",
		af:      0xc200,
		bc:      0x4e05,
		de:      0xb3f8,
		hl:      0x2234,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x93}},
			mock.Slice{Addr: 0x2234, Values: []uint8{0xa0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb94",
		af:      0xee00,
		bc:      0x8f4b,
		de:      0x2831,
		hl:      0xd6a6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x94}},
			mock.Slice{Addr: 0xd6a6, Values: []uint8{0xd0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb95",
		af:      0x3c00,
		bc:      0x6af2,
		de:      0xb25d,
		hl:      0x36ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x95}},
			mock.Slice{Addr: 0x36ff, Values: []uint8{0xcd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb96",
		af:      0x7600,
		bc:      0xb027,
		de:      0xd0a5,
		hl:      0x3324,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x96}},
			mock.Slice{Addr: 0x3324, Values: []uint8{0x21}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb97",
		af:      0x1600,
		bc:      0xad09,
		de:      0x7902,
		hl:      0x97bc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x97}},
			mock.Slice{Addr: 0x97bc, Values: []uint8{0x75}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb98",
		af:      0x3400,
		bc:      0xb61c,
		de:      0x771d,
		hl:      0x5d5e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x98}},
			mock.Slice{Addr: 0x5d5e, Values: []uint8{0xa4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb99",
		af:      0x5100,
		bc:      0x65be,
		de:      0x1359,
		hl:      0x8bec,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x99}},
			mock.Slice{Addr: 0x8bec, Values: []uint8{0x0b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb9a",
		af:      0x6400,
		bc:      0x976d,
		de:      0x4c25,
		hl:      0xdcb2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x9a}},
			mock.Slice{Addr: 0xdcb2, Values: []uint8{0x09}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb9b",
		af:      0xa100,
		bc:      0xb58a,
		de:      0xd264,
		hl:      0x2bd6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x9b}},
			mock.Slice{Addr: 0x2bd6, Values: []uint8{0xd3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb9c",
		af:      0xd800,
		bc:      0x63d6,
		de:      0xac7b,
		hl:      0xc7a0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x9c}},
			mock.Slice{Addr: 0xc7a0, Values: []uint8{0x75}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb9d",
		af:      0x0d00,
		bc:      0xd840,
		de:      0x0810,
		hl:      0x0800,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x9d}},
			mock.Slice{Addr: 0x0800, Values: []uint8{0xcd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb9e",
		af:      0x3b00,
		bc:      0xebbf,
		de:      0x9434,
		hl:      0x3a65,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x9e}},
			mock.Slice{Addr: 0x3a65, Values: []uint8{0x2a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cb9f",
		af:      0xb200,
		bc:      0xd1de,
		de:      0xf991,
		hl:      0x72f6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0x9f}},
			mock.Slice{Addr: 0x72f6, Values: []uint8{0x72}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba0",
		af:      0xfa00,
		bc:      0xd669,
		de:      0x71e1,
		hl:      0xc80d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa0}},
			mock.Slice{Addr: 0xc80d, Values: []uint8{0xc0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba1",
		af:      0x8200,
		bc:      0x75e4,
		de:      0xa0de,
		hl:      0xd0ba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa1}},
			mock.Slice{Addr: 0xd0ba, Values: []uint8{0xbd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba2",
		af:      0xdd00,
		bc:      0x2b0d,
		de:      0x5554,
		hl:      0x6fc0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa2}},
			mock.Slice{Addr: 0x6fc0, Values: []uint8{0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba3",
		af:      0x2200,
		bc:      0x2f0d,
		de:      0x4d2c,
		hl:      0x6666,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa3}},
			mock.Slice{Addr: 0x6666, Values: []uint8{0x8e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba4",
		af:      0xd600,
		bc:      0xd8ed,
		de:      0x9cd4,
		hl:      0x8bb1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa4}},
			mock.Slice{Addr: 0x8bb1, Values: []uint8{0xbb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba5",
		af:      0xb400,
		bc:      0xb393,
		de:      0x3e42,
		hl:      0x88ca,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa5}},
			mock.Slice{Addr: 0x88ca, Values: []uint8{0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba6",
		af:      0x0a00,
		bc:      0x4c34,
		de:      0xf5a7,
		hl:      0xe70d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa6}},
			mock.Slice{Addr: 0xe70d, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba7",
		af:      0x4500,
		bc:      0xaf61,
		de:      0x569a,
		hl:      0xc77b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa7}},
			mock.Slice{Addr: 0xc77b, Values: []uint8{0xff}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba8",
		af:      0x6400,
		bc:      0xf269,
		de:      0xbae4,
		hl:      0xc9e7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa8}},
			mock.Slice{Addr: 0xc9e7, Values: []uint8{0x46}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cba9",
		af:      0xe400,
		bc:      0x7ad4,
		de:      0xbf0a,
		hl:      0xce0b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xa9}},
			mock.Slice{Addr: 0xce0b, Values: []uint8{0x39}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbaa",
		af:      0xcd00,
		bc:      0xd249,
		de:      0x4159,
		hl:      0xfed5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xaa}},
			mock.Slice{Addr: 0xfed5, Values: []uint8{0xb0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbab",
		af:      0xac00,
		bc:      0x939a,
		de:      0x5d9b,
		hl:      0x0812,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xab}},
			mock.Slice{Addr: 0x0812, Values: []uint8{0xf2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbac",
		af:      0x2400,
		bc:      0x8a7d,
		de:      0x2cac,
		hl:      0xffaa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xac}},
			mock.Slice{Addr: 0xffaa, Values: []uint8{0x09}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbad",
		af:      0x6f00,
		bc:      0x5ffb,
		de:      0x2360,
		hl:      0xae15,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xad}},
			mock.Slice{Addr: 0xae15, Values: []uint8{0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbae",
		af:      0x5a00,
		bc:      0xaa17,
		de:      0x12f3,
		hl:      0x190e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xae}},
			mock.Slice{Addr: 0x190e, Values: []uint8{0x66}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbaf",
		af:      0xfc00,
		bc:      0xbb3f,
		de:      0x8bb6,
		hl:      0x5877,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xaf}},
			mock.Slice{Addr: 0x5877, Values: []uint8{0x62}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb0",
		af:      0xb900,
		bc:      0x7a79,
		de:      0x1aaa,
		hl:      0xc3ba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb0}},
			mock.Slice{Addr: 0xc3ba, Values: []uint8{0x4c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb1",
		af:      0x4900,
		bc:      0x63e4,
		de:      0xa544,
		hl:      0x1190,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb1}},
			mock.Slice{Addr: 0x1190, Values: []uint8{0xe3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb2",
		af:      0x4d00,
		bc:      0x2b03,
		de:      0x6b23,
		hl:      0x6ff5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb2}},
			mock.Slice{Addr: 0x6ff5, Values: []uint8{0x04}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb3",
		af:      0x8700,
		bc:      0x857a,
		de:      0xe98b,
		hl:      0x5cb1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb3}},
			mock.Slice{Addr: 0x5cb1, Values: []uint8{0x43}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb4",
		af:      0x2b00,
		bc:      0xb73e,
		de:      0x79c9,
		hl:      0xe1bb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb4}},
			mock.Slice{Addr: 0xe1bb, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb5",
		af:      0x9b00,
		bc:      0xd879,
		de:      0x2ec9,
		hl:      0x4bba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb5}},
			mock.Slice{Addr: 0x4bba, Values: []uint8{0x70}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb6",
		af:      0x8600,
		bc:      0x89bf,
		de:      0xde4a,
		hl:      0x4fab,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb6}},
			mock.Slice{Addr: 0x4fab, Values: []uint8{0xa5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb7",
		af:      0x2200,
		bc:      0xfb8a,
		de:      0x3d6e,
		hl:      0xd4a2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb7}},
			mock.Slice{Addr: 0xd4a2, Values: []uint8{0xf2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb8",
		af:      0xd000,
		bc:      0x37c6,
		de:      0x225a,
		hl:      0xd249,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb8}},
			mock.Slice{Addr: 0xd249, Values: []uint8{0xc4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbb9",
		af:      0xa500,
		bc:      0x1b4a,
		de:      0xd584,
		hl:      0x5dee,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xb9}},
			mock.Slice{Addr: 0x5dee, Values: []uint8{0xcc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbba",
		af:      0x6300,
		bc:      0xa5fe,
		de:      0xf42b,
		hl:      0x34c9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xba}},
			mock.Slice{Addr: 0x34c9, Values: []uint8{0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbbb",
		af:      0x1200,
		bc:      0xf661,
		de:      0xaa4f,
		hl:      0xcb30,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xbb}},
			mock.Slice{Addr: 0xcb30, Values: []uint8{0xf4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbbc",
		af:      0x9800,
		bc:      0xadc3,
		de:      0x0b29,
		hl:      0x7b6e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xbc}},
			mock.Slice{Addr: 0x7b6e, Values: []uint8{0x45}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbbd",
		af:      0xd600,
		bc:      0xa6e1,
		de:      0x8813,
		hl:      0x10b8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xbd}},
			mock.Slice{Addr: 0x10b8, Values: []uint8{0x35}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbbe",
		af:      0xca00,
		bc:      0xff64,
		de:      0x1218,
		hl:      0x77d5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xbe}},
			mock.Slice{Addr: 0x77d5, Values: []uint8{0xea}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbbf",
		af:      0x6800,
		bc:      0x4845,
		de:      0x690a,
		hl:      0x15de,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xbf}},
			mock.Slice{Addr: 0x15de, Values: []uint8{0x1d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc0",
		af:      0xe300,
		bc:      0xef71,
		de:      0xbffb,
		hl:      0xb3a1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc0}},
			mock.Slice{Addr: 0xb3a1, Values: []uint8{0x5c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc1",
		af:      0x3200,
		bc:      0x32a1,
		de:      0x59ab,
		hl:      0x3343,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc1}},
			mock.Slice{Addr: 0x3343, Values: []uint8{0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc2",
		af:      0xc700,
		bc:      0xb159,
		de:      0xc023,
		hl:      0xe1f3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc2}},
			mock.Slice{Addr: 0xe1f3, Values: []uint8{0x14}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc3",
		af:      0x0400,
		bc:      0xb463,
		de:      0xc211,
		hl:      0x8f3a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc3}},
			mock.Slice{Addr: 0x8f3a, Values: []uint8{0x81}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc4",
		af:      0x7e00,
		bc:      0x545a,
		de:      0x6ecf,
		hl:      0x5876,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc4}},
			mock.Slice{Addr: 0x5876, Values: []uint8{0x9d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc5",
		af:      0x4000,
		bc:      0xc617,
		de:      0x079c,
		hl:      0x4107,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc5}},
			mock.Slice{Addr: 0x4107, Values: []uint8{0xcc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc6",
		af:      0xb800,
		bc:      0x0373,
		de:      0xb807,
		hl:      0xf0be,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc6}},
			mock.Slice{Addr: 0xf0be, Values: []uint8{0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc7",
		af:      0x7700,
		bc:      0x3681,
		de:      0x9b55,
		hl:      0x583f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc7}},
			mock.Slice{Addr: 0x583f, Values: []uint8{0x58}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc8",
		af:      0x7d00,
		bc:      0xa772,
		de:      0x8682,
		hl:      0x7cf3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc8}},
			mock.Slice{Addr: 0x7cf3, Values: []uint8{0x75}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbc9",
		af:      0x0b00,
		bc:      0x67ee,
		de:      0x30e0,
		hl:      0x72db,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xc9}},
			mock.Slice{Addr: 0x72db, Values: []uint8{0x87}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbca",
		af:      0x9c00,
		bc:      0x9517,
		de:      0xcfbb,
		hl:      0xfbc7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xca}},
			mock.Slice{Addr: 0xfbc7, Values: []uint8{0x1a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbcb",
		af:      0xe800,
		bc:      0x0f3d,
		de:      0x336f,
		hl:      0xf70d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xcb}},
			mock.Slice{Addr: 0xf70d, Values: []uint8{0xa1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbcc",
		af:      0xfb00,
		bc:      0x7981,
		de:      0x0bbb,
		hl:      0x18fd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xcc}},
			mock.Slice{Addr: 0x18fd, Values: []uint8{0xfe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbcd",
		af:      0x5500,
		bc:      0x5e78,
		de:      0xbf34,
		hl:      0x2602,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xcd}},
			mock.Slice{Addr: 0x2602, Values: []uint8{0x2d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbce",
		af:      0xd500,
		bc:      0xa111,
		de:      0xcb2a,
		hl:      0x8ec6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xce}},
			mock.Slice{Addr: 0x8ec6, Values: []uint8{0xbf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbcf",
		af:      0xa200,
		bc:      0x6baf,
		de:      0x98b2,
		hl:      0x98a0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xcf}},
			mock.Slice{Addr: 0x98a0, Values: []uint8{0xd4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd0",
		af:      0x2300,
		bc:      0x7bcb,
		de:      0x02e7,
		hl:      0x1724,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd0}},
			mock.Slice{Addr: 0x1724, Values: []uint8{0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd1",
		af:      0x5300,
		bc:      0x581f,
		de:      0xb775,
		hl:      0x47f4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd1}},
			mock.Slice{Addr: 0x47f4, Values: []uint8{0xc7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd2",
		af:      0x6900,
		bc:      0xc147,
		de:      0xb79c,
		hl:      0x7528,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd2}},
			mock.Slice{Addr: 0x7528, Values: []uint8{0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd3",
		af:      0xae00,
		bc:      0xbbc4,
		de:      0xce52,
		hl:      0x5fba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd3}},
			mock.Slice{Addr: 0x5fba, Values: []uint8{0x3a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd4",
		af:      0xd800,
		bc:      0x6e1e,
		de:      0xaf6f,
		hl:      0xbf2e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd4}},
			mock.Slice{Addr: 0xbf2e, Values: []uint8{0x71}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd5",
		af:      0x8400,
		bc:      0xa19a,
		de:      0xd2fd,
		hl:      0x8a77,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd5}},
			mock.Slice{Addr: 0x8a77, Values: []uint8{0x52}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd6",
		af:      0xa900,
		bc:      0xf5f3,
		de:      0x2180,
		hl:      0x6029,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd6}},
			mock.Slice{Addr: 0x6029, Values: []uint8{0xb7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd7",
		af:      0xb100,
		bc:      0xc008,
		de:      0x8425,
		hl:      0x290a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd7}},
			mock.Slice{Addr: 0x290a, Values: []uint8{0x42}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd8",
		af:      0x8b00,
		bc:      0x09c4,
		de:      0xddf3,
		hl:      0x6d7e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd8}},
			mock.Slice{Addr: 0x6d7e, Values: []uint8{0x6e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbd9",
		af:      0x3e00,
		bc:      0x3e36,
		de:      0x30ec,
		hl:      0xefc6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xd9}},
			mock.Slice{Addr: 0xefc6, Values: []uint8{0x5b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbda",
		af:      0xd000,
		bc:      0x3e8f,
		de:      0x28fe,
		hl:      0x1c87,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xda}},
			mock.Slice{Addr: 0x1c87, Values: []uint8{0xb9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbdb",
		af:      0x1200,
		bc:      0x977a,
		de:      0x8c49,
		hl:      0xbc48,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xdb}},
			mock.Slice{Addr: 0xbc48, Values: []uint8{0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbdc",
		af:      0x8d00,
		bc:      0x05de,
		de:      0xf8d3,
		hl:      0xb125,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xdc}},
			mock.Slice{Addr: 0xb125, Values: []uint8{0x0e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbdd",
		af:      0xc300,
		bc:      0x08a9,
		de:      0x2bc8,
		hl:      0x5b9f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xdd}},
			mock.Slice{Addr: 0x5b9f, Values: []uint8{0x94}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbde",
		af:      0x1900,
		bc:      0x900f,
		de:      0xd572,
		hl:      0xba03,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xde}},
			mock.Slice{Addr: 0xba03, Values: []uint8{0x93}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbdf",
		af:      0x6700,
		bc:      0x2745,
		de:      0x7e3d,
		hl:      0x0fa1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xdf}},
			mock.Slice{Addr: 0x0fa1, Values: []uint8{0xc5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe0",
		af:      0x3e00,
		bc:      0xd633,
		de:      0x9897,
		hl:      0x3744,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe0}},
			mock.Slice{Addr: 0x3744, Values: []uint8{0x54}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe1",
		af:      0x7d00,
		bc:      0x50a6,
		de:      0x0136,
		hl:      0x5334,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe1}},
			mock.Slice{Addr: 0x5334, Values: []uint8{0x85}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe2",
		af:      0xd400,
		bc:      0x6b45,
		de:      0xa192,
		hl:      0x3a4c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe2}},
			mock.Slice{Addr: 0x3a4c, Values: []uint8{0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe3",
		af:      0x3b00,
		bc:      0xd29c,
		de:      0x05e0,
		hl:      0x2e78,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe3}},
			mock.Slice{Addr: 0x2e78, Values: []uint8{0x48}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe4",
		af:      0x1e00,
		bc:      0x7d5e,
		de:      0x846d,
		hl:      0x0978,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe4}},
			mock.Slice{Addr: 0x0978, Values: []uint8{0x84}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe5",
		af:      0xca00,
		bc:      0xdf0d,
		de:      0xd588,
		hl:      0xb48f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe5}},
			mock.Slice{Addr: 0xb48f, Values: []uint8{0xcf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe6",
		af:      0xb300,
		bc:      0x52c2,
		de:      0xdbfe,
		hl:      0x9f9b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe6}},
			mock.Slice{Addr: 0x9f9b, Values: []uint8{0xf6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe7",
		af:      0x8e00,
		bc:      0xcf02,
		de:      0x67ef,
		hl:      0xf2e0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe7}},
			mock.Slice{Addr: 0xf2e0, Values: []uint8{0xcf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe8",
		af:      0x7100,
		bc:      0xbb18,
		de:      0x66ec,
		hl:      0x4a05,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe8}},
			mock.Slice{Addr: 0x4a05, Values: []uint8{0xe6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbe9",
		af:      0x5700,
		bc:      0x2897,
		de:      0x8f2f,
		hl:      0xa4d0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xe9}},
			mock.Slice{Addr: 0xa4d0, Values: []uint8{0xb2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbea",
		af:      0xec00,
		bc:      0x304a,
		de:      0x60a1,
		hl:      0xf32a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xea}},
			mock.Slice{Addr: 0xf32a, Values: []uint8{0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbeb",
		af:      0xf000,
		bc:      0x532b,
		de:      0xa1be,
		hl:      0x1a1a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xeb}},
			mock.Slice{Addr: 0x1a1a, Values: []uint8{0x21}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbec",
		af:      0xf200,
		bc:      0xf0f3,
		de:      0xa816,
		hl:      0xba08,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xec}},
			mock.Slice{Addr: 0xba08, Values: []uint8{0x82}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbed",
		af:      0x1300,
		bc:      0x5127,
		de:      0xadab,
		hl:      0x2dec,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xed}},
			mock.Slice{Addr: 0x2dec, Values: []uint8{0xcb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbee",
		af:      0x9000,
		bc:      0xb273,
		de:      0x50ae,
		hl:      0xe90d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xee}},
			mock.Slice{Addr: 0xe90d, Values: []uint8{0xf1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbef",
		af:      0x2500,
		bc:      0x4281,
		de:      0xf0d4,
		hl:      0x2c39,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xef}},
			mock.Slice{Addr: 0x2c39, Values: []uint8{0xc8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf0",
		af:      0xfb00,
		bc:      0x5802,
		de:      0x0c27,
		hl:      0x6ff5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf0}},
			mock.Slice{Addr: 0x6ff5, Values: []uint8{0xf6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf1",
		af:      0x5500,
		bc:      0xa103,
		de:      0x3ff5,
		hl:      0x5e1c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf1}},
			mock.Slice{Addr: 0x5e1c, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf2",
		af:      0xf000,
		bc:      0x625a,
		de:      0xaf82,
		hl:      0x9819,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf2}},
			mock.Slice{Addr: 0x9819, Values: []uint8{0xe4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf3",
		af:      0x8600,
		bc:      0xd7bd,
		de:      0x5d86,
		hl:      0x263f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf3}},
			mock.Slice{Addr: 0x263f, Values: []uint8{0xa1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf4",
		af:      0x9400,
		bc:      0x0243,
		de:      0x9ec1,
		hl:      0x75d9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf4}},
			mock.Slice{Addr: 0x75d9, Values: []uint8{0x3f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf5",
		af:      0xce00,
		bc:      0x2d42,
		de:      0x5e6a,
		hl:      0x47e6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf5}},
			mock.Slice{Addr: 0x47e6, Values: []uint8{0xce}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf6",
		af:      0x7b00,
		bc:      0xc2d7,
		de:      0x4492,
		hl:      0xa9bc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf6}},
			mock.Slice{Addr: 0xa9bc, Values: []uint8{0xb1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf7",
		af:      0x6d00,
		bc:      0xabaf,
		de:      0x5b5d,
		hl:      0x188c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf7}},
			mock.Slice{Addr: 0x188c, Values: []uint8{0x6c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf8",
		af:      0xc600,
		bc:      0xb812,
		de:      0xa037,
		hl:      0xd2b0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf8}},
			mock.Slice{Addr: 0xd2b0, Values: []uint8{0xcb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbf9",
		af:      0xef00,
		bc:      0xc5f2,
		de:      0x77a8,
		hl:      0x0730,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xf9}},
			mock.Slice{Addr: 0x0730, Values: []uint8{0xae}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbfa",
		af:      0x8700,
		bc:      0x1581,
		de:      0x63e3,
		hl:      0xed03,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xfa}},
			mock.Slice{Addr: 0xed03, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbfb",
		af:      0xa300,
		bc:      0x7d27,
		de:      0x97c3,
		hl:      0xd1ae,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xfb}},
			mock.Slice{Addr: 0xd1ae, Values: []uint8{0xf2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbfc",
		af:      0xec00,
		bc:      0x060a,
		de:      0x3ef6,
		hl:      0x500f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xfc}},
			mock.Slice{Addr: 0x500f, Values: []uint8{0x94}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbfd",
		af:      0x1100,
		bc:      0x231a,
		de:      0x8563,
		hl:      0x28c5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xfd}},
			mock.Slice{Addr: 0x28c5, Values: []uint8{0xab}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbfe",
		af:      0x5300,
		bc:      0x4948,
		de:      0x89dd,
		hl:      0x3a24,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xfe}},
			mock.Slice{Addr: 0x3a24, Values: []uint8{0xc3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cbff",
		af:      0x7900,
		bc:      0x799b,
		de:      0x6cf7,
		hl:      0xe3f2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcb, 0xff}},
			mock.Slice{Addr: 0xe3f2, Values: []uint8{0x25}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cc_1",
		af:      0x004e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcc, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cc_2",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcc, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cd",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xb07d,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xcd, 0x5d, 0x3a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ce",
		af:      0x60f5,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xce, 0xb2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "cf",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xcf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d0_1",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d0_2",
		af:      0x0099,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d1",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x4143,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd1}},
			mock.Slice{Addr: 0x4143, Values: []uint8{0xce, 0xe8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d2_1",
		af:      0x0086,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d2_2",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d3_1",
		af:      0xa200,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd3, 0xed}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d3_2",
		af:      0x4200,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd3, 0xec}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d3_3",
		af:      0x4200,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd3, 0xed}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d3",
		af:      0xa200,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd3, 0xec}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d4_1",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d4_2",
		af:      0x000f,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d5",
		af:      0x53e3,
		bc:      0x1459,
		de:      0x775f,
		hl:      0x1a2f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xec12,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d6",
		af:      0x3900,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd6, 0xdf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d7",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xd7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d8_1",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d8_2",
		af:      0x0099,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "d9",
		af:      0x4d94,
		bc:      0xe07a,
		de:      0xe35b,
		hl:      0x9d64,
		af1:     0x1a64,
		bc1:     0xc930,
		de1:     0x3d01,
		hl1:     0x7d02,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xd9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "da_1",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xda, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "da_2",
		af:      0x0086,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xda, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "db_1",
		af:      0xc100,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdb, 0xe3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "db_2",
		af:      0x7100,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdb, 0xe2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "db_3",
		af:      0x7100,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdb, 0xe3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "db",
		af:      0xc100,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdb, 0xe2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dc_1",
		af:      0x000f,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdc, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dc_2",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdc, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd00",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 9,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x00, 0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd09",
		af:      0x0d05,
		bc:      0x1426,
		de:      0x53ce,
		hl:      0x41e3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9ec0,
		iy:      0x5c89,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x09}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd19",
		af:      0x1911,
		bc:      0x0e0b,
		de:      0x2724,
		hl:      0xbe62,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x824f,
		iy:      0x760b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x19}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd21",
		af:      0xc935,
		bc:      0x4353,
		de:      0xbd22,
		hl:      0x94d5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdade,
		iy:      0xaad6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x21, 0xf2, 0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd22",
		af:      0x5b1d,
		bc:      0x45a1,
		de:      0x6de8,
		hl:      0x39d3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xebe7,
		iy:      0x05b0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x22, 0x4f, 0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd23",
		af:      0x9095,
		bc:      0xac3c,
		de:      0x4d90,
		hl:      0x379b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd50b,
		iy:      0xa157,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x23}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd24",
		af:      0x0698,
		bc:      0xdcd0,
		de:      0xa31b,
		hl:      0xd527,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8cda,
		iy:      0xb096,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x24}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd25",
		af:      0x5acc,
		bc:      0x206b,
		de:      0xed10,
		hl:      0x6eab,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbb3c,
		iy:      0x5ebd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x25}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd26",
		af:      0x9522,
		bc:      0xede0,
		de:      0xa352,
		hl:      0xadea,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5f40,
		iy:      0x82e1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x26, 0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd29",
		af:      0xac80,
		bc:      0x0f0e,
		de:      0x72c8,
		hl:      0x1f2a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5195,
		iy:      0x7d8a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x29}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd2a",
		af:      0x3d36,
		bc:      0xb24e,
		de:      0xbdbc,
		hl:      0xca4e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xba65,
		iy:      0xe7ce,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x2a, 0xbc, 0x40}},
			mock.Slice{Addr: 0x40bc, Values: []uint8{0xb5, 0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd2b",
		af:      0xad4b,
		bc:      0xd5e6,
		de:      0x9377,
		hl:      0xf132,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7a17,
		iy:      0x2188,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x2b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd2c",
		af:      0x8838,
		bc:      0xf2f3,
		de:      0xd277,
		hl:      0x9153,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc62f,
		iy:      0xb002,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x2c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd2d",
		af:      0x39bc,
		bc:      0xb23c,
		de:      0x6e11,
		hl:      0x5a49,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0267,
		iy:      0xab03,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x2d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd2e",
		af:      0x9aca,
		bc:      0xa04a,
		de:      0xb49f,
		hl:      0xa4a6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbd90,
		iy:      0x38a1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x2e, 0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd34",
		af:      0x8304,
		bc:      0xd1fc,
		de:      0xb80b,
		hl:      0x8082,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdea9,
		iy:      0x6fd8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x34, 0xe6}},
			mock.Slice{Addr: 0xde8f, Values: []uint8{0x57}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd35",
		af:      0x8681,
		bc:      0x4641,
		de:      0x1ef6,
		hl:      0x10ab,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc733,
		iy:      0x8ec4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x35, 0x60}},
			mock.Slice{Addr: 0xc793, Values: []uint8{0xf7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd36",
		af:      0x76dc,
		bc:      0x2530,
		de:      0x5158,
		hl:      0x877d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb5c6,
		iy:      0x8d3c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x36, 0x35, 0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd39",
		af:      0x875b,
		bc:      0xa334,
		de:      0xd79d,
		hl:      0x59e4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb11a,
		iy:      0x4c88,
		sp:      0xfa4a,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x39}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd44",
		af:      0xb37e,
		bc:      0xcbb0,
		de:      0x36e8,
		hl:      0x3f45,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2702,
		iy:      0xb3b9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd45",
		af:      0x4e10,
		bc:      0x5c6d,
		de:      0xd11d,
		hl:      0x1736,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7298,
		iy:      0x2d10,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x45}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd46",
		af:      0xc758,
		bc:      0xbf29,
		de:      0x66f2,
		hl:      0x29ef,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5cc7,
		iy:      0x407d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x46, 0x68}},
			mock.Slice{Addr: 0x5d2f, Values: []uint8{0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd4c",
		af:      0xe15c,
		bc:      0x75ec,
		de:      0x7531,
		hl:      0xae9e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3ed8,
		iy:      0x03b7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x4c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd4d",
		af:      0x469e,
		bc:      0x7864,
		de:      0x6a5a,
		hl:      0x00e2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa1aa,
		iy:      0x0d6f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x4d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd4e",
		af:      0x7bf7,
		bc:      0x6605,
		de:      0x8d55,
		hl:      0xdef2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd94b,
		iy:      0x17fb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x4e, 0x2e}},
			mock.Slice{Addr: 0xd979, Values: []uint8{0x76}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd54",
		af:      0x8376,
		bc:      0x0d13,
		de:      0xc767,
		hl:      0x3119,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4b6d,
		iy:      0x030b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x54}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd55",
		af:      0xff78,
		bc:      0x85e3,
		de:      0x566b,
		hl:      0x8f3a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd7d7,
		iy:      0x4e0b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x55}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd56",
		af:      0x97b3,
		bc:      0xb617,
		de:      0xbb50,
		hl:      0x81d1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa306,
		iy:      0x7a49,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x56, 0xf4}},
			mock.Slice{Addr: 0xa2fa, Values: []uint8{0xde}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd5c",
		af:      0xaf82,
		bc:      0x24bf,
		de:      0x2793,
		hl:      0xf925,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf9a3,
		iy:      0x0b82,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x5c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd5d",
		af:      0x36cb,
		bc:      0x97a9,
		de:      0x400d,
		hl:      0x30fe,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3340,
		iy:      0xb3ed,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x5d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd5e",
		af:      0xa220,
		bc:      0x389d,
		de:      0x2ff8,
		hl:      0x368c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8d32,
		iy:      0x3512,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x5e, 0x8f}},
			mock.Slice{Addr: 0x8cc1, Values: []uint8{0xce}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd60",
		af:      0x2392,
		bc:      0x7f6a,
		de:      0x3dc0,
		hl:      0xcefb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x44a0,
		iy:      0xc424,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x60}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd61",
		af:      0x76ed,
		bc:      0x268c,
		de:      0xd5c8,
		hl:      0xbab0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb650,
		iy:      0x0a93,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd62",
		af:      0x4c6f,
		bc:      0xb482,
		de:      0xfef4,
		hl:      0x62e7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6e25,
		iy:      0x9655,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x62}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd63",
		af:      0x6e9a,
		bc:      0x5499,
		de:      0x3c8f,
		hl:      0x1f64,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbf35,
		iy:      0x0df7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x63}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd64",
		af:      0x47f6,
		bc:      0x1b7a,
		de:      0xa55e,
		hl:      0x2fc2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xefc7,
		iy:      0xaca0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x64}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd65",
		af:      0xd786,
		bc:      0x7d1d,
		de:      0xb659,
		hl:      0x77e8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x58fa,
		iy:      0x006d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x65}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd66",
		af:      0x84c2,
		bc:      0x79b1,
		de:      0xca4a,
		hl:      0xaaa0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xce5d,
		iy:      0xdd2d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x66, 0xb5}},
			mock.Slice{Addr: 0xce12, Values: []uint8{0x03}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd67",
		af:      0x967c,
		bc:      0x511e,
		de:      0x336d,
		hl:      0x40f6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x66e7,
		iy:      0x5be2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x67}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd68",
		af:      0x4a9d,
		bc:      0xefa8,
		de:      0xfebd,
		hl:      0x07e4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5fd8,
		iy:      0xb23f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x68}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd69",
		af:      0x6466,
		bc:      0x2142,
		de:      0x2523,
		hl:      0x82b3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6479,
		iy:      0x04a7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x69}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd6a",
		af:      0x401f,
		bc:      0x61f1,
		de:      0x4b08,
		hl:      0xfa88,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc37f,
		iy:      0xd8f6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x6a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd6b",
		af:      0x6dc7,
		bc:      0xe2ae,
		de:      0x40bd,
		hl:      0xf3c0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2290,
		iy:      0x2749,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x6b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd6c",
		af:      0x3939,
		bc:      0x90da,
		de:      0x62dc,
		hl:      0x7c31,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x412f,
		iy:      0x7211,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x6c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd6d",
		af:      0x3964,
		bc:      0xff3f,
		de:      0x23d4,
		hl:      0xc7c7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9b70,
		iy:      0x20c6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x6d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd6e",
		af:      0x223f,
		bc:      0xf661,
		de:      0xb61c,
		hl:      0x0f53,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc648,
		iy:      0xfae8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x6e, 0x2c}},
			mock.Slice{Addr: 0xc674, Values: []uint8{0x6b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd6f",
		af:      0x6e84,
		bc:      0x9cd4,
		de:      0xa293,
		hl:      0x647d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0d0b,
		iy:      0x4a56,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x6f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd70",
		af:      0xd09f,
		bc:      0xfe00,
		de:      0x231e,
		hl:      0x31ec,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x05fa,
		iy:      0xea92,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x70, 0xf6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd71",
		af:      0xebee,
		bc:      0x151c,
		de:      0x05c7,
		hl:      0xee08,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3722,
		iy:      0x2ec6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x71, 0x23}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd72",
		af:      0x80c9,
		bc:      0xac1e,
		de:      0x63bd,
		hl:      0x828b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8dff,
		iy:      0x94ef,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x72, 0x93}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd73",
		af:      0x8f3e,
		bc:      0xb5a3,
		de:      0x07de,
		hl:      0x0b0c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x79c6,
		iy:      0xae79,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x73, 0x57}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd74",
		af:      0x4ae0,
		bc:      0x49c5,
		de:      0x3deb,
		hl:      0x0125,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5910,
		iy:      0x429a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x74, 0xb9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd75",
		af:      0x5772,
		bc:      0xe833,
		de:      0xb63e,
		hl:      0x734f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xae4c,
		iy:      0xe8c2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x75, 0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd77",
		af:      0xdc56,
		bc:      0xd893,
		de:      0x4116,
		hl:      0xf2d2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa181,
		iy:      0x3157,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x77, 0x8c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd7c",
		af:      0x7558,
		bc:      0x7705,
		de:      0xac92,
		hl:      0xa6a1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8cde,
		iy:      0x7507,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd7d",
		af:      0x6c18,
		bc:      0x93fb,
		de:      0x6bdd,
		hl:      0x3a10,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd7cb,
		iy:      0xc0f6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x7d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd7e",
		af:      0x6a66,
		bc:      0x1f77,
		de:      0x6220,
		hl:      0x0c40,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1cf4,
		iy:      0x1a1f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x7e, 0xbc}},
			mock.Slice{Addr: 0x1cb0, Values: []uint8{0x57}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd84",
		af:      0x2e47,
		bc:      0x1de8,
		de:      0xb8b9,
		hl:      0x78a6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9f1d,
		iy:      0xb11f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x84}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd85",
		af:      0xb27a,
		bc:      0xb1ff,
		de:      0x8d7b,
		hl:      0x40c0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb513,
		iy:      0x0688,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x85}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd86",
		af:      0x4efa,
		bc:      0xd085,
		de:      0x5bac,
		hl:      0xe364,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb5b5,
		iy:      0xfe3a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x86, 0xc1}},
			mock.Slice{Addr: 0xb576, Values: []uint8{0x5b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd8c",
		af:      0xbc63,
		bc:      0x8fdc,
		de:      0xea8f,
		hl:      0x9734,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0eb3,
		iy:      0x1b54,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x8c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd8d",
		af:      0xb61f,
		bc:      0x1c81,
		de:      0xb6fb,
		hl:      0xd6e5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x09be,
		iy:      0xa736,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd8e",
		af:      0x4ed4,
		bc:      0x182d,
		de:      0xab17,
		hl:      0x94ae,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbb97,
		iy:      0x87da,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x8e, 0x25}},
			mock.Slice{Addr: 0xbbbc, Values: []uint8{0x32}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd94",
		af:      0x7ef1,
		bc:      0x9efe,
		de:      0x6ea1,
		hl:      0xfc55,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0a09,
		iy:      0x89c5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x94}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd95",
		af:      0x2920,
		bc:      0x59ab,
		de:      0x428c,
		hl:      0x3a94,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x44fd,
		iy:      0xf243,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x95}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd96",
		af:      0x9b76,
		bc:      0x461f,
		de:      0xced7,
		hl:      0xdb3f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2c66,
		iy:      0x9dbf,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x96, 0x5f}},
			mock.Slice{Addr: 0x2cc5, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd9c",
		af:      0xfaf4,
		bc:      0x670e,
		de:      0xafcc,
		hl:      0x8b34,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x285f,
		iy:      0x1caa,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd9d",
		af:      0xf827,
		bc:      0x0cdb,
		de:      0xdf32,
		hl:      0xd0e4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9b12,
		iy:      0x7d07,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x9d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dd9e",
		af:      0x938e,
		bc:      0xf9c5,
		de:      0xcbc4,
		hl:      0xca21,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb4cc,
		iy:      0x46fa,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0x9e, 0x14}},
			mock.Slice{Addr: 0xb4e0, Values: []uint8{0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dda4",
		af:      0x52f5,
		bc:      0xba53,
		de:      0xacfc,
		hl:      0x9481,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2f8b,
		iy:      0xedf6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xa4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dda5",
		af:      0xbaaf,
		bc:      0xa675,
		de:      0xd757,
		hl:      0xf1db,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfdef,
		iy:      0xd8ce,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xa5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dda6",
		af:      0x1da4,
		bc:      0x20c4,
		de:      0xebc3,
		hl:      0xda8d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7e95,
		iy:      0x5e8a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xa6, 0x41}},
			mock.Slice{Addr: 0x7ed6, Values: []uint8{0xc7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddac",
		af:      0xef15,
		bc:      0x2a7c,
		de:      0x17e5,
		hl:      0x3f6e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xaffa,
		iy:      0xa0b5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xac}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddad",
		af:      0xba2e,
		bc:      0x6ba1,
		de:      0xef1b,
		hl:      0x5713,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xba38,
		iy:      0xa708,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddae",
		af:      0x8009,
		bc:      0x3ad6,
		de:      0xa721,
		hl:      0x2100,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe909,
		iy:      0x87b4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xae, 0x72}},
			mock.Slice{Addr: 0xe97b, Values: []uint8{0xc3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddb4",
		af:      0x1ccd,
		bc:      0x29aa,
		de:      0x2e82,
		hl:      0x4dc8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9c04,
		iy:      0x8be3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xb4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddb5",
		af:      0x46b4,
		bc:      0xfc93,
		de:      0x7a06,
		hl:      0x0518,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0ac5,
		iy:      0x4150,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddb6",
		af:      0x5017,
		bc:      0xab81,
		de:      0x4287,
		hl:      0x5ee1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc66f,
		iy:      0xd6cc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xb6, 0x31}},
			mock.Slice{Addr: 0xc6a0, Values: []uint8{0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddbc",
		af:      0x53e0,
		bc:      0xaa98,
		de:      0xf7d7,
		hl:      0xfa0c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbe7a,
		iy:      0xa41f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddbd",
		af:      0xdc83,
		bc:      0x80ce,
		de:      0x5d2f,
		hl:      0xe999,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbb41,
		iy:      0xa24f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xbd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddbe",
		af:      0x9838,
		bc:      0xbfd5,
		de:      0xa299,
		hl:      0xd34b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9332,
		iy:      0xb1d5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xbe, 0x48}},
			mock.Slice{Addr: 0x937a, Values: []uint8{0x5b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb00",
		af:      0x3c65,
		bc:      0xf0e4,
		de:      0x09d1,
		hl:      0x646b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1da1,
		iy:      0xf08f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0d, 0x00}},
			mock.Slice{Addr: 0x1dae, Values: []uint8{0xa1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb01",
		af:      0xf68f,
		bc:      0xe33b,
		de:      0x2d4a,
		hl:      0x7725,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x28fd,
		iy:      0xf31b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb7, 0x01}},
			mock.Slice{Addr: 0x28b4, Values: []uint8{0xe3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb02",
		af:      0xe20c,
		bc:      0x836e,
		de:      0x513a,
		hl:      0xf840,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc796,
		iy:      0xae9b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x91, 0x02}},
			mock.Slice{Addr: 0xc727, Values: []uint8{0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb03",
		af:      0x6224,
		bc:      0x3571,
		de:      0xc519,
		hl:      0x48dc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x041e,
		iy:      0xc07b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x48, 0x03}},
			mock.Slice{Addr: 0x0466, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb04",
		af:      0xb310,
		bc:      0xbfc4,
		de:      0x64af,
		hl:      0xd622,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5949,
		iy:      0xa989,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x48, 0x04}},
			mock.Slice{Addr: 0x5991, Values: []uint8{0x68}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb05",
		af:      0x4954,
		bc:      0xbb04,
		de:      0x56ec,
		hl:      0x9d58,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0077,
		iy:      0x1349,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xff, 0x05}},
			mock.Slice{Addr: 0x0076, Values: []uint8{0x95}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb06",
		af:      0x0cf4,
		bc:      0xf636,
		de:      0x90a6,
		hl:      0x6117,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5421,
		iy:      0x90ee,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x07, 0x06}},
			mock.Slice{Addr: 0x5428, Values: []uint8{0x97}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb07",
		af:      0x6f4d,
		bc:      0x9ca3,
		de:      0xbdf6,
		hl:      0xed50,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9803,
		iy:      0x55f9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x42, 0x07}},
			mock.Slice{Addr: 0x9845, Values: []uint8{0xae}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb08",
		af:      0x02f4,
		bc:      0x1c66,
		de:      0x6023,
		hl:      0xae06,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xef40,
		iy:      0xb006,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0a, 0x08}},
			mock.Slice{Addr: 0xef4a, Values: []uint8{0xda}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb09",
		af:      0x9825,
		bc:      0x9258,
		de:      0x54d5,
		hl:      0x5e1e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9d0b,
		iy:      0x6e58,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x3b, 0x09}},
			mock.Slice{Addr: 0x9d46, Values: []uint8{0x6f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb0a",
		af:      0xd2dd,
		bc:      0x6aac,
		de:      0xe789,
		hl:      0x9293,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1fb4,
		iy:      0x2498,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x83, 0x0a}},
			mock.Slice{Addr: 0x1f37, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb0b",
		af:      0xb82c,
		bc:      0xb284,
		de:      0x23f8,
		hl:      0x7e7d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcd09,
		iy:      0x6a03,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xfa, 0x0b}},
			mock.Slice{Addr: 0xcd03, Values: []uint8{0x92}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb0c",
		af:      0xdf8b,
		bc:      0xb6cc,
		de:      0xee8d,
		hl:      0x855a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbf6b,
		iy:      0x9b7d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x79, 0x0c}},
			mock.Slice{Addr: 0xbfe4, Values: []uint8{0x0d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb0d",
		af:      0xbae3,
		bc:      0xceec,
		de:      0xbbaa,
		hl:      0xb65e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x88bd,
		iy:      0x503e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe4, 0x0d}},
			mock.Slice{Addr: 0x88a1, Values: []uint8{0x1f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb0e",
		af:      0x1c36,
		bc:      0x890b,
		de:      0x7830,
		hl:      0x060c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfd49,
		iy:      0x5d07,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc6, 0x0e}},
			mock.Slice{Addr: 0xfd0f, Values: []uint8{0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb0f",
		af:      0xf5a7,
		bc:      0xfad4,
		de:      0xfa4b,
		hl:      0x9c53,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7447,
		iy:      0x2267,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x57, 0x0f}},
			mock.Slice{Addr: 0x749e, Values: []uint8{0xf8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb10",
		af:      0xf3af,
		bc:      0xba1f,
		de:      0x5387,
		hl:      0x926e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbba2,
		iy:      0xca47,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x4f, 0x10}},
			mock.Slice{Addr: 0xbbf1, Values: []uint8{0x45}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb11",
		af:      0x2a69,
		bc:      0xd604,
		de:      0xa9aa,
		hl:      0x5b52,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1809,
		iy:      0xd275,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xeb, 0x11}},
			mock.Slice{Addr: 0x17f4, Values: []uint8{0xd9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb12",
		af:      0x9287,
		bc:      0xc479,
		de:      0x26d1,
		hl:      0x10ce,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc0fb,
		iy:      0x2777,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xa6, 0x12}},
			mock.Slice{Addr: 0xc0a1, Values: []uint8{0xe2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb13",
		af:      0xa507,
		bc:      0x580a,
		de:      0xa48f,
		hl:      0x11cd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5ac4,
		iy:      0xccc7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xff, 0x13}},
			mock.Slice{Addr: 0x5ac3, Values: []uint8{0xa7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb14",
		af:      0x294b,
		bc:      0x5b89,
		de:      0x8467,
		hl:      0x0430,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0977,
		iy:      0xc4e8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xdd, 0x14}},
			mock.Slice{Addr: 0x0954, Values: []uint8{0x85}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb15",
		af:      0x1fd1,
		bc:      0x6d53,
		de:      0x5b7c,
		hl:      0xa134,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xede9,
		iy:      0xa85c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x07, 0x15}},
			mock.Slice{Addr: 0xedf0, Values: []uint8{0x0e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb16",
		af:      0xda70,
		bc:      0xa1e4,
		de:      0x00b0,
		hl:      0x92c8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x16be,
		iy:      0x2c95,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x45, 0x16}},
			mock.Slice{Addr: 0x1703, Values: []uint8{0x5b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb17",
		af:      0x3300,
		bc:      0xcbd1,
		de:      0x4e1a,
		hl:      0xcd27,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb8c9,
		iy:      0xe6d4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x1c, 0x17}},
			mock.Slice{Addr: 0xb8e5, Values: []uint8{0x7e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb18",
		af:      0xd980,
		bc:      0x4eb5,
		de:      0x9cf9,
		hl:      0xb9f1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa189,
		iy:      0xbd7c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0e, 0x18}},
			mock.Slice{Addr: 0xa197, Values: []uint8{0x90}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb19",
		af:      0x23b7,
		bc:      0x595a,
		de:      0xa756,
		hl:      0xcf2e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf0e7,
		iy:      0x26e4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xa3, 0x19}},
			mock.Slice{Addr: 0xf08a, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb1a",
		af:      0x8b52,
		bc:      0x7e45,
		de:      0xbd0f,
		hl:      0x37a6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xde61,
		iy:      0x9cd9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xac, 0x1a}},
			mock.Slice{Addr: 0xde0d, Values: []uint8{0xcc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb1b",
		af:      0x5c79,
		bc:      0x1414,
		de:      0x811c,
		hl:      0x5881,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb7c3,
		iy:      0xd14f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x05, 0x1b}},
			mock.Slice{Addr: 0xb7c8, Values: []uint8{0x91}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb1c",
		af:      0xfafc,
		bc:      0x6277,
		de:      0x8b67,
		hl:      0xd423,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfef9,
		iy:      0x4a66,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xff, 0x1c}},
			mock.Slice{Addr: 0xfef8, Values: []uint8{0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb1d",
		af:      0x76a5,
		bc:      0x324e,
		de:      0xe641,
		hl:      0x58f9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5b63,
		iy:      0xe18b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x3a, 0x1d}},
			mock.Slice{Addr: 0x5b9d, Values: []uint8{0xf3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb1e",
		af:      0xc5d9,
		bc:      0xcd58,
		de:      0x8967,
		hl:      0xf074,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x75b4,
		iy:      0x693a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xce, 0x1e}},
			mock.Slice{Addr: 0x7582, Values: []uint8{0x91}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb1f",
		af:      0xd28f,
		bc:      0x7f6d,
		de:      0x2058,
		hl:      0x63e3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1d9b,
		iy:      0xbaba,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xa8, 0x1f}},
			mock.Slice{Addr: 0x1d43, Values: []uint8{0xb4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb20",
		af:      0x4ce5,
		bc:      0x739e,
		de:      0xdc6c,
		hl:      0x18f4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdc39,
		iy:      0x8b0c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe8, 0x20}},
			mock.Slice{Addr: 0xdc21, Values: []uint8{0x0e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb21",
		af:      0xd29d,
		bc:      0x66dd,
		de:      0x23ef,
		hl:      0x9096,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3494,
		iy:      0xb6c3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9e, 0x21}},
			mock.Slice{Addr: 0x3432, Values: []uint8{0xf7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb22",
		af:      0xfb5d,
		bc:      0xe0d0,
		de:      0x7c02,
		hl:      0xb4b7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbd3f,
		iy:      0x385b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x43, 0x22}},
			mock.Slice{Addr: 0xbd82, Values: []uint8{0x9f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb23",
		af:      0xc359,
		bc:      0x68b6,
		de:      0xda84,
		hl:      0xb990,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x22dd,
		iy:      0xbd27,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc1, 0x23}},
			mock.Slice{Addr: 0x229e, Values: []uint8{0xe0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb24",
		af:      0xbaf5,
		bc:      0x7b0b,
		de:      0x560b,
		hl:      0x7c33,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x31f1,
		iy:      0xddbd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe8, 0x24}},
			mock.Slice{Addr: 0x31d9, Values: []uint8{0xc3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb25",
		af:      0x43bb,
		bc:      0xa21b,
		de:      0x2347,
		hl:      0xae4a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcc63,
		iy:      0xfc94,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc1, 0x25}},
			mock.Slice{Addr: 0xcc24, Values: []uint8{0xeb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb26",
		af:      0x2065,
		bc:      0xff37,
		de:      0xe41f,
		hl:      0x70e7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6528,
		iy:      0xa0d5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf7, 0x26}},
			mock.Slice{Addr: 0x651f, Values: []uint8{0x89}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb27",
		af:      0xa806,
		bc:      0x5669,
		de:      0x1bee,
		hl:      0xf62c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1f69,
		iy:      0x3418,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc3, 0x27}},
			mock.Slice{Addr: 0x1f2c, Values: []uint8{0xac}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb28",
		af:      0x7afd,
		bc:      0x64b8,
		de:      0x51f7,
		hl:      0x7164,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x999b,
		iy:      0x8857,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb6, 0x28}},
			mock.Slice{Addr: 0x9951, Values: []uint8{0x24}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb29",
		af:      0x0404,
		bc:      0xb794,
		de:      0x323f,
		hl:      0xfd34,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x20e7,
		iy:      0xc753,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9c, 0x29}},
			mock.Slice{Addr: 0x2083, Values: []uint8{0x82}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb2a",
		af:      0x4524,
		bc:      0xafde,
		de:      0x0c08,
		hl:      0x75d7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9505,
		iy:      0xb624,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd8, 0x2a}},
			mock.Slice{Addr: 0x94dd, Values: []uint8{0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb2b",
		af:      0x8324,
		bc:      0xe290,
		de:      0x26be,
		hl:      0x7ddd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb484,
		iy:      0x571c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbd, 0x2b}},
			mock.Slice{Addr: 0xb441, Values: []uint8{0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb2c",
		af:      0xc688,
		bc:      0x0c94,
		de:      0x6e4b,
		hl:      0x7dc7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfe28,
		iy:      0xdc80,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x2c, 0x2c}},
			mock.Slice{Addr: 0xfe54, Values: []uint8{0x81}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb2d",
		af:      0xce28,
		bc:      0xd2ae,
		de:      0xc9be,
		hl:      0x4236,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb4ed,
		iy:      0x6de3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9b, 0x2d}},
			mock.Slice{Addr: 0xb488, Values: []uint8{0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb2e",
		af:      0x50b0,
		bc:      0xde74,
		de:      0xeca8,
		hl:      0x83ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x69d8,
		iy:      0x75c7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x3d, 0x2e}},
			mock.Slice{Addr: 0x6a15, Values: []uint8{0x05}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb2f",
		af:      0xaec6,
		bc:      0x759b,
		de:      0x3059,
		hl:      0x01b9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7a30,
		iy:      0xdd56,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd3, 0x2f}},
			mock.Slice{Addr: 0x7a03, Values: []uint8{0xf2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb30",
		af:      0x3c89,
		bc:      0x96ad,
		de:      0x9cc7,
		hl:      0xa68c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xeee8,
		iy:      0x5a80,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xdf, 0x30}},
			mock.Slice{Addr: 0xeec7, Values: []uint8{0x32}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb31",
		af:      0xebf5,
		bc:      0x41e9,
		de:      0x929b,
		hl:      0x7d47,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf22d,
		iy:      0x8943,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x49, 0x31}},
			mock.Slice{Addr: 0xf276, Values: []uint8{0xcd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb32",
		af:      0x9a1b,
		bc:      0xaa64,
		de:      0x4209,
		hl:      0x01ad,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x579f,
		iy:      0xec4c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe0, 0x32}},
			mock.Slice{Addr: 0x577f, Values: []uint8{0xe2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb33",
		af:      0xb8b1,
		bc:      0xb854,
		de:      0x524f,
		hl:      0x9599,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xefac,
		iy:      0xd9ec,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc9, 0x33}},
			mock.Slice{Addr: 0xef75, Values: []uint8{0x0b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb34",
		af:      0xcd3c,
		bc:      0x4432,
		de:      0x20d4,
		hl:      0x0b3e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xab48,
		iy:      0xc95f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x49, 0x34}},
			mock.Slice{Addr: 0xab91, Values: []uint8{0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb35",
		af:      0xdeb1,
		bc:      0xc6fc,
		de:      0x696d,
		hl:      0x150d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xeb1a,
		iy:      0x4a12,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb9, 0x35}},
			mock.Slice{Addr: 0xead3, Values: []uint8{0x8f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb36",
		af:      0x3d81,
		bc:      0x443b,
		de:      0xff21,
		hl:      0x63e3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x132e,
		iy:      0xfb39,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb4, 0x36}},
			mock.Slice{Addr: 0x12e2, Values: []uint8{0x02}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb37",
		af:      0x72d9,
		bc:      0xbfc9,
		de:      0xa69a,
		hl:      0xec0b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5077,
		iy:      0x4e3e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc6, 0x37}},
			mock.Slice{Addr: 0x503d, Values: []uint8{0x3d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb38",
		af:      0x3c64,
		bc:      0xb1ee,
		de:      0x38e1,
		hl:      0xae9f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf695,
		iy:      0x44b3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x8e, 0x38}},
			mock.Slice{Addr: 0xf623, Values: []uint8{0x5e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb39",
		af:      0x05d6,
		bc:      0x9aad,
		de:      0xa2db,
		hl:      0xdf75,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa895,
		iy:      0xe243,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xdc, 0x39}},
			mock.Slice{Addr: 0xa871, Values: []uint8{0x83}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb3a",
		af:      0x0e22,
		bc:      0x0b9f,
		de:      0x873b,
		hl:      0xc01d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2591,
		iy:      0x49c3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0d, 0x3a}},
			mock.Slice{Addr: 0x259e, Values: []uint8{0x89}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb3b",
		af:      0x1bd9,
		bc:      0xc795,
		de:      0xd8ae,
		hl:      0x7ccf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6fed,
		iy:      0x09dc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x20, 0x3b}},
			mock.Slice{Addr: 0x700d, Values: []uint8{0xa9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb3c",
		af:      0xb651,
		bc:      0xbdf7,
		de:      0xfca3,
		hl:      0x7529,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf53b,
		iy:      0x018b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe1, 0x3c}},
			mock.Slice{Addr: 0xf51c, Values: []uint8{0xd0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb3d",
		af:      0x2a2d,
		bc:      0x6e6e,
		de:      0xcfbd,
		hl:      0x1db5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0320,
		iy:      0x6ab0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbe, 0x3d}},
			mock.Slice{Addr: 0x02de, Values: []uint8{0x58}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb3e",
		af:      0x39b8,
		bc:      0xb26e,
		de:      0xb670,
		hl:      0xb8a2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x784a,
		iy:      0x7840,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0a, 0x3e}},
			mock.Slice{Addr: 0x7854, Values: []uint8{0x5d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb3f",
		af:      0x2a17,
		bc:      0x429d,
		de:      0xd8c0,
		hl:      0xe069,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3488,
		iy:      0x7150,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x31, 0x3f}},
			mock.Slice{Addr: 0x34b9, Values: []uint8{0x04}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb40",
		af:      0x119b,
		bc:      0xf6ba,
		de:      0x079e,
		hl:      0x0e41,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8c01,
		iy:      0xcd21,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbd, 0x40}},
			mock.Slice{Addr: 0x8bbe, Values: []uint8{0xe7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb41",
		af:      0x22b3,
		bc:      0xc4b0,
		de:      0x575b,
		hl:      0x66b4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcdcf,
		iy:      0xa25c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x52, 0x41}},
			mock.Slice{Addr: 0xce21, Values: []uint8{0x75}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb42",
		af:      0xaf5e,
		bc:      0x7720,
		de:      0xaa95,
		hl:      0x3b0a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf03a,
		iy:      0x856a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x1e, 0x42}},
			mock.Slice{Addr: 0xf058, Values: []uint8{0x90}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb43",
		af:      0x7fa6,
		bc:      0xb699,
		de:      0x5e71,
		hl:      0x1827,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe8b6,
		iy:      0x96a8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbc, 0x43}},
			mock.Slice{Addr: 0xe872, Values: []uint8{0x6b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb44",
		af:      0x5faa,
		bc:      0xde05,
		de:      0x12fd,
		hl:      0xf73b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xee0a,
		iy:      0x6634,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe8, 0x44}},
			mock.Slice{Addr: 0xedf2, Values: []uint8{0x62}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb45",
		af:      0xeac7,
		bc:      0x699c,
		de:      0x47d3,
		hl:      0x89c3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa2be,
		iy:      0xd81e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x02, 0x45}},
			mock.Slice{Addr: 0xa2c0, Values: []uint8{0x55}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb46",
		af:      0x60de,
		bc:      0xac1d,
		de:      0x4173,
		hl:      0xf92a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa39f,
		iy:      0x12e5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe2, 0x46}},
			mock.Slice{Addr: 0xa381, Values: []uint8{0xd5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb47",
		af:      0x1b1a,
		bc:      0xf7c0,
		de:      0x22f6,
		hl:      0x5253,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5227,
		iy:      0x919d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x7a, 0x47}},
			mock.Slice{Addr: 0x52a1, Values: []uint8{0x6a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb48",
		af:      0x721a,
		bc:      0x4509,
		de:      0xd68f,
		hl:      0x3b3d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2746,
		iy:      0x7f97,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x13, 0x48}},
			mock.Slice{Addr: 0x2759, Values: []uint8{0xa8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb49",
		af:      0x7fe9,
		bc:      0xda22,
		de:      0xea9c,
		hl:      0xf480,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x41c6,
		iy:      0x75a9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x94, 0x49}},
			mock.Slice{Addr: 0x415a, Values: []uint8{0x26}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb4a",
		af:      0xf16d,
		bc:      0xe6c3,
		de:      0x5a42,
		hl:      0x8b21,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbfeb,
		iy:      0xe383,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x3b, 0x4a}},
			mock.Slice{Addr: 0xc026, Values: []uint8{0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb4b",
		af:      0x1050,
		bc:      0x880a,
		de:      0x52b2,
		hl:      0xfb1b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc239,
		iy:      0x6b40,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb0, 0x4b}},
			mock.Slice{Addr: 0xc1e9, Values: []uint8{0x18}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb4c",
		af:      0x0538,
		bc:      0xbc63,
		de:      0xf081,
		hl:      0x0a55,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x874c,
		iy:      0x80a3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x97, 0x4c}},
			mock.Slice{Addr: 0x86e3, Values: []uint8{0x63}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb4d",
		af:      0x7f8c,
		bc:      0x32b4,
		de:      0x03d5,
		hl:      0xef66,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7d2a,
		iy:      0x03bc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x15, 0x4d}},
			mock.Slice{Addr: 0x7d3f, Values: []uint8{0x60}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb4e",
		af:      0x7c67,
		bc:      0xfa92,
		de:      0xb4d0,
		hl:      0x9f23,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xeade,
		iy:      0x1785,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb0, 0x4e}},
			mock.Slice{Addr: 0xea8e, Values: []uint8{0x3b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb4f",
		af:      0x725c,
		bc:      0x257b,
		de:      0xdb73,
		hl:      0x2478,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x88c0,
		iy:      0xf151,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x8b, 0x4f}},
			mock.Slice{Addr: 0x884b, Values: []uint8{0x4c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb50",
		af:      0x35f4,
		bc:      0x8e51,
		de:      0x406c,
		hl:      0x2e3c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdaf2,
		iy:      0x413c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x12, 0x50}},
			mock.Slice{Addr: 0xdb04, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb51",
		af:      0xa630,
		bc:      0xba85,
		de:      0xc88c,
		hl:      0xe86c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x84b2,
		iy:      0xcd8e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x18, 0x51}},
			mock.Slice{Addr: 0x84ca, Values: []uint8{0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb52",
		af:      0xcb88,
		bc:      0x1220,
		de:      0x1103,
		hl:      0xa868,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6156,
		iy:      0xcfac,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x42, 0x52}},
			mock.Slice{Addr: 0x6198, Values: []uint8{0x53}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb53",
		af:      0x5eb3,
		bc:      0x569e,
		de:      0xf76d,
		hl:      0x88c6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xae45,
		iy:      0x623e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe3, 0x53}},
			mock.Slice{Addr: 0xae28, Values: []uint8{0xd6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb54",
		af:      0xc3c9,
		bc:      0x76fe,
		de:      0xf1ff,
		hl:      0x416e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xefd5,
		iy:      0x7576,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x7d, 0x54}},
			mock.Slice{Addr: 0xf052, Values: []uint8{0x5d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb55",
		af:      0x7068,
		bc:      0xdcd0,
		de:      0x8345,
		hl:      0xd498,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf352,
		iy:      0xa88b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x88, 0x55}},
			mock.Slice{Addr: 0xf2da, Values: []uint8{0x03}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb56",
		af:      0x9128,
		bc:      0x2cb8,
		de:      0x571c,
		hl:      0xf4fd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6d30,
		iy:      0xaec2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x57, 0x56}},
			mock.Slice{Addr: 0x6d87, Values: []uint8{0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb57",
		af:      0x3ca7,
		bc:      0x541a,
		de:      0x027c,
		hl:      0xc0b4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5833,
		iy:      0x160a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x06, 0x57}},
			mock.Slice{Addr: 0x5839, Values: []uint8{0x1d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb58",
		af:      0xc650,
		bc:      0xe1a8,
		de:      0x9d6c,
		hl:      0xbec3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6a46,
		iy:      0xb66c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x83, 0x58}},
			mock.Slice{Addr: 0x69c9, Values: []uint8{0x0f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb59",
		af:      0xad07,
		bc:      0x9bda,
		de:      0xb7ee,
		hl:      0x63c4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9195,
		iy:      0x9703,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xdb, 0x59}},
			mock.Slice{Addr: 0x9170, Values: []uint8{0x10}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb5a",
		af:      0x80c0,
		bc:      0x5105,
		de:      0x36b0,
		hl:      0xa37c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0de0,
		iy:      0xce7f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd1, 0x5a}},
			mock.Slice{Addr: 0x0db1, Values: []uint8{0xbe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb5b",
		af:      0x2a8d,
		bc:      0x083d,
		de:      0x1409,
		hl:      0x06ba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x62ad,
		iy:      0xbaff,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd5, 0x5b}},
			mock.Slice{Addr: 0x6282, Values: []uint8{0x67}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb5c",
		af:      0x4ca4,
		bc:      0xe502,
		de:      0xd23c,
		hl:      0x6da8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9dc6,
		iy:      0x6f04,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x5c, 0x5c}},
			mock.Slice{Addr: 0x9e22, Values: []uint8{0xc9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb5d",
		af:      0x7e39,
		bc:      0x511b,
		de:      0x3cfa,
		hl:      0x60d3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd193,
		iy:      0x3fe9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xff, 0x5d}},
			mock.Slice{Addr: 0xd192, Values: []uint8{0x0d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb5e",
		af:      0xcef1,
		bc:      0x0235,
		de:      0xe2b1,
		hl:      0x7a4c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xed14,
		iy:      0xd0d6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x62, 0x5e}},
			mock.Slice{Addr: 0xed76, Values: []uint8{0xa7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb5f",
		af:      0x094f,
		bc:      0x20a8,
		de:      0x52e1,
		hl:      0xd783,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdf46,
		iy:      0xda41,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x3f, 0x5f}},
			mock.Slice{Addr: 0xdf85, Values: []uint8{0x9e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb60",
		af:      0x42ce,
		bc:      0x0713,
		de:      0xdc90,
		hl:      0x2c89,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x32a2,
		iy:      0xc4d4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x65, 0x60}},
			mock.Slice{Addr: 0x3307, Values: []uint8{0x2e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb61",
		af:      0x1b36,
		bc:      0x1403,
		de:      0x8b9b,
		hl:      0xc221,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x36cb,
		iy:      0x93d4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xa8, 0x61}},
			mock.Slice{Addr: 0x3673, Values: []uint8{0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb62",
		af:      0x361b,
		bc:      0x4055,
		de:      0x650a,
		hl:      0x3f98,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0acc,
		iy:      0xa102,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd9, 0x62}},
			mock.Slice{Addr: 0x0aa5, Values: []uint8{0xea}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb63",
		af:      0x6548,
		bc:      0x08df,
		de:      0x3ceb,
		hl:      0x6d24,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe679,
		iy:      0xf98e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x79, 0x63}},
			mock.Slice{Addr: 0xe6f2, Values: []uint8{0x83}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb64",
		af:      0x3c22,
		bc:      0xe2a7,
		de:      0x6da9,
		hl:      0xc346,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xecfb,
		iy:      0x85b6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x71, 0x64}},
			mock.Slice{Addr: 0xed6c, Values: []uint8{0x52}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb65",
		af:      0x09bd,
		bc:      0x0abb,
		de:      0x3afa,
		hl:      0x91f5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7779,
		iy:      0xaef5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x67, 0x65}},
			mock.Slice{Addr: 0x77e0, Values: []uint8{0xf5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb66",
		af:      0xccbc,
		bc:      0xd301,
		de:      0x9b66,
		hl:      0x40fb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xee15,
		iy:      0x0d23,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x63, 0x66}},
			mock.Slice{Addr: 0xee78, Values: []uint8{0x70}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb67",
		af:      0xeccb,
		bc:      0x342f,
		de:      0xbe3e,
		hl:      0xa79b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xeea1,
		iy:      0xdfae,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd7, 0x67}},
			mock.Slice{Addr: 0xee78, Values: []uint8{0x06}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb68",
		af:      0x8e51,
		bc:      0x0063,
		de:      0x49ad,
		hl:      0xb7d4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe968,
		iy:      0x864e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb1, 0x68}},
			mock.Slice{Addr: 0xe919, Values: []uint8{0x20}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb69",
		af:      0x9f11,
		bc:      0x42b5,
		de:      0x74fe,
		hl:      0x1116,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x33f4,
		iy:      0x46c2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe8, 0x69}},
			mock.Slice{Addr: 0x33dc, Values: []uint8{0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb6a",
		af:      0x4632,
		bc:      0x0bd8,
		de:      0x0018,
		hl:      0x1ac3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x86b6,
		iy:      0x1dd2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x33, 0x6a}},
			mock.Slice{Addr: 0x86e9, Values: []uint8{0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb6b",
		af:      0x7a76,
		bc:      0xf79f,
		de:      0xa78e,
		hl:      0xf867,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x187b,
		iy:      0x0023,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x11, 0x6b}},
			mock.Slice{Addr: 0x188c, Values: []uint8{0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb6c",
		af:      0xdd91,
		bc:      0x1f1e,
		de:      0xc1e1,
		hl:      0x0ea7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3e21,
		iy:      0xf544,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x5e, 0x6c}},
			mock.Slice{Addr: 0x3e7f, Values: []uint8{0x2a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb6d",
		af:      0xdebf,
		bc:      0x9ae4,
		de:      0xfd24,
		hl:      0xb3c2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe314,
		iy:      0xad84,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xdd, 0x6d}},
			mock.Slice{Addr: 0xe2f1, Values: []uint8{0x41}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb6e",
		af:      0xca75,
		bc:      0x9f16,
		de:      0xc700,
		hl:      0x1dce,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3086,
		iy:      0xd68e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb2, 0x6e}},
			mock.Slice{Addr: 0x3038, Values: []uint8{0x3f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb6f",
		af:      0xd4cd,
		bc:      0x0b39,
		de:      0x3e2e,
		hl:      0xc06e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfc1b,
		iy:      0xd592,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbe, 0x6f}},
			mock.Slice{Addr: 0xfbd9, Values: []uint8{0x56}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb70",
		af:      0xf901,
		bc:      0x09b8,
		de:      0x43f8,
		hl:      0x2a76,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x042c,
		iy:      0x7f2d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb5, 0x70}},
			mock.Slice{Addr: 0x03e1, Values: []uint8{0x74}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb71",
		af:      0xac78,
		bc:      0x36ad,
		de:      0x34cb,
		hl:      0xf950,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1b33,
		iy:      0xaa23,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf7, 0x71}},
			mock.Slice{Addr: 0x1b2a, Values: []uint8{0x08}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb72",
		af:      0xb1b3,
		bc:      0xf1e4,
		de:      0x9984,
		hl:      0xc7fb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xce25,
		iy:      0xc5b6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x22, 0x72}},
			mock.Slice{Addr: 0xce47, Values: []uint8{0x08}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb73",
		af:      0x21ba,
		bc:      0x592d,
		de:      0xf406,
		hl:      0xe21f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6442,
		iy:      0xcf58,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x12, 0x73}},
			mock.Slice{Addr: 0x6454, Values: []uint8{0x3c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb74",
		af:      0x6642,
		bc:      0x64c1,
		de:      0xdbe5,
		hl:      0xeb48,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7dc1,
		iy:      0xc1fb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x08, 0x74}},
			mock.Slice{Addr: 0x7dc9, Values: []uint8{0xbe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb75",
		af:      0x8778,
		bc:      0x580e,
		de:      0x00dd,
		hl:      0xf4c6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x60ad,
		iy:      0x9b60,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x5b, 0x75}},
			mock.Slice{Addr: 0x6108, Values: []uint8{0xcf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb76",
		af:      0x65b8,
		bc:      0x5cc2,
		de:      0x3058,
		hl:      0xe258,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7e8a,
		iy:      0xb296,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x73, 0x76}},
			mock.Slice{Addr: 0x7efd, Values: []uint8{0x1e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb77",
		af:      0xe3a8,
		bc:      0x47a0,
		de:      0xc510,
		hl:      0xcf0a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0537,
		iy:      0xb242,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x7f, 0x77}},
			mock.Slice{Addr: 0x05b6, Values: []uint8{0x97}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb78",
		af:      0x424f,
		bc:      0x24f6,
		de:      0x1632,
		hl:      0x8a4f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9397,
		iy:      0x846c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x70, 0x78}},
			mock.Slice{Addr: 0x9407, Values: []uint8{0x76}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb79",
		af:      0xe6a0,
		bc:      0xeeaa,
		de:      0x41f7,
		hl:      0x5da2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x41de,
		iy:      0x4189,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc3, 0x79}},
			mock.Slice{Addr: 0x41a1, Values: []uint8{0xb8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb7a",
		af:      0xcabf,
		bc:      0x56aa,
		de:      0x6a06,
		hl:      0x6cd7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0aa9,
		iy:      0x9812,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x3f, 0x7a}},
			mock.Slice{Addr: 0x0ae8, Values: []uint8{0xeb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb7b",
		af:      0xae3f,
		bc:      0x0227,
		de:      0x721f,
		hl:      0x52a1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5040,
		iy:      0xb98a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x88, 0x7b}},
			mock.Slice{Addr: 0x4fc8, Values: []uint8{0x22}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb7c",
		af:      0x8a80,
		bc:      0xa2f1,
		de:      0x239a,
		hl:      0xd5cc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6883,
		iy:      0xb050,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9e, 0x7c}},
			mock.Slice{Addr: 0x6821, Values: []uint8{0x3a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb7d",
		af:      0xc37f,
		bc:      0xcf33,
		de:      0x1010,
		hl:      0x98e6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb021,
		iy:      0x0356,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x29, 0x7d}},
			mock.Slice{Addr: 0xb04a, Values: []uint8{0x2c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb7e",
		af:      0x9a25,
		bc:      0x2f6e,
		de:      0x0d0d,
		hl:      0xa83f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcef0,
		iy:      0x8c15,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x4f, 0x7e}},
			mock.Slice{Addr: 0xcf3f, Values: []uint8{0xf2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb7f",
		af:      0x53b9,
		bc:      0x1f4e,
		de:      0x4837,
		hl:      0x21b6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5ec2,
		iy:      0x80c3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x75, 0x7f}},
			mock.Slice{Addr: 0x5f37, Values: []uint8{0xa2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb80",
		af:      0x6319,
		bc:      0xbaf9,
		de:      0xc84b,
		hl:      0xbcf2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xacc5,
		iy:      0xa4ed,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x70, 0x80}},
			mock.Slice{Addr: 0xad35, Values: []uint8{0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb81",
		af:      0xfae1,
		bc:      0x5ae5,
		de:      0x9502,
		hl:      0xdc9b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbdd3,
		iy:      0x1a52,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x2a, 0x81}},
			mock.Slice{Addr: 0xbdfd, Values: []uint8{0x24}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb82",
		af:      0xdaf6,
		bc:      0x3260,
		de:      0xf1ac,
		hl:      0x1d47,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5e74,
		iy:      0x35e2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9a, 0x82}},
			mock.Slice{Addr: 0x5e0e, Values: []uint8{0x51}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb83",
		af:      0x8e7c,
		bc:      0x5586,
		de:      0x8c92,
		hl:      0xfb00,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3441,
		iy:      0xd365,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0e, 0x83}},
			mock.Slice{Addr: 0x344f, Values: []uint8{0x01}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb84",
		af:      0xc1b3,
		bc:      0x4874,
		de:      0xc535,
		hl:      0x0e1c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0123,
		iy:      0xdd28,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x47, 0x84}},
			mock.Slice{Addr: 0x016a, Values: []uint8{0xb0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb85",
		af:      0x0928,
		bc:      0xb0db,
		de:      0x4e07,
		hl:      0xa7b7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0ba3,
		iy:      0xc61c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x6c, 0x85}},
			mock.Slice{Addr: 0x0c0f, Values: []uint8{0xde}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb86",
		af:      0x4515,
		bc:      0xde09,
		de:      0x3ce7,
		hl:      0x1fde,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x10c5,
		iy:      0x33ed,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x5c, 0x86}},
			mock.Slice{Addr: 0x1121, Values: []uint8{0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb87",
		af:      0xd05e,
		bc:      0xa733,
		de:      0xd1dd,
		hl:      0x1603,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xede6,
		iy:      0xe5fb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x02, 0x87}},
			mock.Slice{Addr: 0xede8, Values: []uint8{0xc4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb88",
		af:      0xe4fa,
		bc:      0x3325,
		de:      0xc266,
		hl:      0x1b13,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x878e,
		iy:      0xe695,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9b, 0x88}},
			mock.Slice{Addr: 0x8729, Values: []uint8{0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb89",
		af:      0x933b,
		bc:      0x6fdd,
		de:      0xa3a8,
		hl:      0x2634,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8f3e,
		iy:      0x7727,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x2b, 0x89}},
			mock.Slice{Addr: 0x8f69, Values: []uint8{0xcf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb8a",
		af:      0x6759,
		bc:      0xad1e,
		de:      0x5d71,
		hl:      0xce52,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x39a9,
		iy:      0x38a0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0a, 0x8a}},
			mock.Slice{Addr: 0x39b3, Values: []uint8{0xea}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb8b",
		af:      0x3da2,
		bc:      0x1833,
		de:      0x03c1,
		hl:      0x07e9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1685,
		iy:      0xd790,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x62, 0x8b}},
			mock.Slice{Addr: 0x16e7, Values: []uint8{0x8a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb8c",
		af:      0xa625,
		bc:      0xed31,
		de:      0x3946,
		hl:      0x32dc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc6a2,
		iy:      0x7ad6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe8, 0x8c}},
			mock.Slice{Addr: 0xc68a, Values: []uint8{0x3e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb8d",
		af:      0x016b,
		bc:      0x5802,
		de:      0xa683,
		hl:      0x2549,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x22e6,
		iy:      0x33bb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xcc, 0x8d}},
			mock.Slice{Addr: 0x22b2, Values: []uint8{0x9e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb8e",
		af:      0xf4f4,
		bc:      0xf3a8,
		de:      0x2843,
		hl:      0x82cb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd2e8,
		iy:      0xd367,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0a, 0x8e}},
			mock.Slice{Addr: 0xd2f2, Values: []uint8{0x03}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb8f",
		af:      0x6b1a,
		bc:      0x8ae2,
		de:      0x269b,
		hl:      0xcb2f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3ffe,
		iy:      0x75dd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x7b, 0x8f}},
			mock.Slice{Addr: 0x4079, Values: []uint8{0x96}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb90",
		af:      0xc167,
		bc:      0x3dfc,
		de:      0x42e7,
		hl:      0x9e14,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb501,
		iy:      0x84fe,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x04, 0x90}},
			mock.Slice{Addr: 0xb505, Values: []uint8{0x46}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb91",
		af:      0xe85e,
		bc:      0xcc89,
		de:      0xd249,
		hl:      0xea3b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc987,
		iy:      0xc4d1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x11, 0x91}},
			mock.Slice{Addr: 0xc998, Values: []uint8{0x83}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb92",
		af:      0x28a3,
		bc:      0x85ff,
		de:      0xab28,
		hl:      0x47a5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9166,
		iy:      0xe755,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x4b, 0x92}},
			mock.Slice{Addr: 0x91b1, Values: []uint8{0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb93",
		af:      0x58ac,
		bc:      0xc88b,
		de:      0x6d24,
		hl:      0xdbdd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xac2e,
		iy:      0x5199,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x03, 0x93}},
			mock.Slice{Addr: 0xac31, Values: []uint8{0x93}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb94",
		af:      0xe38d,
		bc:      0x35a5,
		de:      0x8d07,
		hl:      0xbfb8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5e84,
		iy:      0x5f24,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x11, 0x94}},
			mock.Slice{Addr: 0x5e95, Values: []uint8{0xb7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb95",
		af:      0x41f4,
		bc:      0x9536,
		de:      0xdd7d,
		hl:      0x4948,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfb74,
		iy:      0xf17d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe6, 0x95}},
			mock.Slice{Addr: 0xfb5a, Values: []uint8{0xc6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb96",
		af:      0x4a9e,
		bc:      0x42ef,
		de:      0x32d7,
		hl:      0x18cf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7a81,
		iy:      0xbb1d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd5, 0x96}},
			mock.Slice{Addr: 0x7a56, Values: []uint8{0xae}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb97",
		af:      0x9ad3,
		bc:      0x89f0,
		de:      0x73c7,
		hl:      0x0b1a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x847c,
		iy:      0x4b86,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x92, 0x97}},
			mock.Slice{Addr: 0x840e, Values: []uint8{0x23}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb98",
		af:      0x6e22,
		bc:      0xb9fd,
		de:      0x9fdc,
		hl:      0x3aed,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x041e,
		iy:      0xfd79,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xdc, 0x98}},
			mock.Slice{Addr: 0x03fa, Values: []uint8{0x58}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb99",
		af:      0xa132,
		bc:      0x3891,
		de:      0x1515,
		hl:      0x2830,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x09fd,
		iy:      0x0473,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x6d, 0x99}},
			mock.Slice{Addr: 0x0a6a, Values: []uint8{0xce}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb9a",
		af:      0x783d,
		bc:      0x8f69,
		de:      0x91c4,
		hl:      0xe38f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x68a8,
		iy:      0x391d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x8a, 0x9a}},
			mock.Slice{Addr: 0x6832, Values: []uint8{0xa8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb9b",
		af:      0x955a,
		bc:      0xc7b0,
		de:      0x53b3,
		hl:      0xaec6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x06ef,
		iy:      0xe991,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x97, 0x9b}},
			mock.Slice{Addr: 0x0686, Values: []uint8{0x62}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb9c",
		af:      0xaf69,
		bc:      0xf896,
		de:      0xe791,
		hl:      0xa2ee,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x847b,
		iy:      0x59ed,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x54, 0x9c}},
			mock.Slice{Addr: 0x84cf, Values: []uint8{0x1b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb9d",
		af:      0x7d1e,
		bc:      0x5009,
		de:      0x1248,
		hl:      0x380c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe920,
		iy:      0x4fe6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0f, 0x9d}},
			mock.Slice{Addr: 0xe92f, Values: []uint8{0xe8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb9e",
		af:      0xc207,
		bc:      0xb47c,
		de:      0x0e16,
		hl:      0xe17f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd8bb,
		iy:      0xbb99,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb5, 0x9e}},
			mock.Slice{Addr: 0xd870, Values: []uint8{0xee}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcb9f",
		af:      0xc26b,
		bc:      0x7537,
		de:      0x46bb,
		hl:      0x13c0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe63c,
		iy:      0x1d98,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb8, 0x9f}},
			mock.Slice{Addr: 0xe5f4, Values: []uint8{0xa6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba0",
		af:      0x0bbe,
		bc:      0x8500,
		de:      0x8609,
		hl:      0x5352,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa2f0,
		iy:      0xda02,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x02, 0xa0}},
			mock.Slice{Addr: 0xa2f2, Values: []uint8{0x39}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba1",
		af:      0xad0a,
		bc:      0xaa76,
		de:      0x0f2d,
		hl:      0x832c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x45bb,
		iy:      0xa22d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf5, 0xa1}},
			mock.Slice{Addr: 0x45b0, Values: []uint8{0xd2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba2",
		af:      0xf586,
		bc:      0x4a7d,
		de:      0xa5ab,
		hl:      0x26fc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x628b,
		iy:      0x6c4d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0e, 0xa2}},
			mock.Slice{Addr: 0x6299, Values: []uint8{0xa1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba3",
		af:      0xde5b,
		bc:      0xa284,
		de:      0xd40e,
		hl:      0xc92d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x040d,
		iy:      0x12c0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x2e, 0xa3}},
			mock.Slice{Addr: 0x043b, Values: []uint8{0x04}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba4",
		af:      0xdfaa,
		bc:      0xae40,
		de:      0x02c3,
		hl:      0xe0b5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfe4d,
		iy:      0xfaa3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x03, 0xa4}},
			mock.Slice{Addr: 0xfe50, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba5",
		af:      0x1a15,
		bc:      0x04cb,
		de:      0x4352,
		hl:      0xee39,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7b27,
		iy:      0x38a0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf6, 0xa5}},
			mock.Slice{Addr: 0x7b1d, Values: []uint8{0x6b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba6",
		af:      0x5e46,
		bc:      0xb98a,
		de:      0xb822,
		hl:      0x04ca,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xae1b,
		iy:      0x8730,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x27, 0xa6}},
			mock.Slice{Addr: 0xae42, Values: []uint8{0x8f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba7",
		af:      0x0eed,
		bc:      0x7b11,
		de:      0x8cb0,
		hl:      0xeb3d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5ec8,
		iy:      0x97cf,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf2, 0xa7}},
			mock.Slice{Addr: 0x5eba, Values: []uint8{0x87}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba8",
		af:      0x5173,
		bc:      0x3089,
		de:      0x070d,
		hl:      0xe8f9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe84f,
		iy:      0x55f0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd0, 0xa8}},
			mock.Slice{Addr: 0xe81f, Values: []uint8{0x7e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcba9",
		af:      0x4fb8,
		bc:      0xccb5,
		de:      0x3e9a,
		hl:      0x2673,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0fdd,
		iy:      0xaef2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9d, 0xa9}},
			mock.Slice{Addr: 0x0f7a, Values: []uint8{0x1f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbaa",
		af:      0xfe76,
		bc:      0x6f96,
		de:      0x3feb,
		hl:      0x0b21,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6747,
		iy:      0x07ba,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9f, 0xaa}},
			mock.Slice{Addr: 0x66e6, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbab",
		af:      0x2eb4,
		bc:      0x36f1,
		de:      0x8f44,
		hl:      0x36af,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6682,
		iy:      0x9d60,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x16, 0xab}},
			mock.Slice{Addr: 0x6698, Values: []uint8{0xeb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbac",
		af:      0xaf32,
		bc:      0x8ca8,
		de:      0x6558,
		hl:      0x06d9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa4dd,
		iy:      0xcd1f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc4, 0xac}},
			mock.Slice{Addr: 0xa4a1, Values: []uint8{0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbad",
		af:      0xfcc9,
		bc:      0x69a7,
		de:      0x0eed,
		hl:      0xeab5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xeef5,
		iy:      0x3ed2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x49, 0xad}},
			mock.Slice{Addr: 0xef3e, Values: []uint8{0x76}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbae",
		af:      0x5f7a,
		bc:      0x9c20,
		de:      0xf013,
		hl:      0xc4b7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb306,
		iy:      0x15dd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x6e, 0xae}},
			mock.Slice{Addr: 0xb374, Values: []uint8{0x5a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbaf",
		af:      0xb11e,
		bc:      0x2583,
		de:      0x51fa,
		hl:      0xd427,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3619,
		iy:      0x9cef,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc2, 0xaf}},
			mock.Slice{Addr: 0x35db, Values: []uint8{0x15}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb0",
		af:      0xf43e,
		bc:      0xce57,
		de:      0x3bf3,
		hl:      0x0933,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x58d7,
		iy:      0xd89f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x47, 0xb0}},
			mock.Slice{Addr: 0x591e, Values: []uint8{0x1e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb1",
		af:      0x35ef,
		bc:      0xbbbc,
		de:      0xdb46,
		hl:      0x046c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xadd2,
		iy:      0x2b6e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x86, 0xb1}},
			mock.Slice{Addr: 0xad58, Values: []uint8{0x46}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb2",
		af:      0xc26c,
		bc:      0xfd32,
		de:      0x9b7f,
		hl:      0xab6c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe7d0,
		iy:      0x501f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x70, 0xb2}},
			mock.Slice{Addr: 0xe840, Values: []uint8{0x48}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb3",
		af:      0x36ca,
		bc:      0xb434,
		de:      0xe212,
		hl:      0xf805,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x53fb,
		iy:      0xb191,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xde, 0xb3}},
			mock.Slice{Addr: 0x53d9, Values: []uint8{0x06}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb4",
		af:      0x0a1c,
		bc:      0xab67,
		de:      0x9ca1,
		hl:      0x2f98,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5066,
		iy:      0x320c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x6b, 0xb4}},
			mock.Slice{Addr: 0x50d1, Values: []uint8{0xdd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb5",
		af:      0xfd6d,
		bc:      0x51c9,
		de:      0x16d6,
		hl:      0x1373,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x146e,
		iy:      0x2148,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xec, 0xb5}},
			mock.Slice{Addr: 0x145a, Values: []uint8{0xd6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb6",
		af:      0x1d0b,
		bc:      0x04e8,
		de:      0x109e,
		hl:      0x1dde,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8772,
		iy:      0x8661,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x15, 0xb6}},
			mock.Slice{Addr: 0x8787, Values: []uint8{0x8c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb7",
		af:      0xf012,
		bc:      0xb87e,
		de:      0x65ba,
		hl:      0xa5c8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6120,
		iy:      0x789d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd3, 0xb7}},
			mock.Slice{Addr: 0x60f3, Values: []uint8{0x54}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb8",
		af:      0x8eae,
		bc:      0x4a53,
		de:      0xbfa1,
		hl:      0x5e7e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0bf6,
		iy:      0x1e35,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x13, 0xb8}},
			mock.Slice{Addr: 0x0c09, Values: []uint8{0x87}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbb9",
		af:      0x5fb7,
		bc:      0xa81e,
		de:      0xe2d2,
		hl:      0x4117,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0564,
		iy:      0x48a1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x56, 0xb9}},
			mock.Slice{Addr: 0x05ba, Values: []uint8{0xc8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbba",
		af:      0x7f6a,
		bc:      0x47fe,
		de:      0xce45,
		hl:      0x75de,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf5e0,
		iy:      0x032c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x86, 0xba}},
			mock.Slice{Addr: 0xf566, Values: []uint8{0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbbb",
		af:      0xc7e3,
		bc:      0xe49e,
		de:      0x9ec5,
		hl:      0x07e7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbd31,
		iy:      0x9d5f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xef, 0xbb}},
			mock.Slice{Addr: 0xbd20, Values: []uint8{0xc9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbbc",
		af:      0xb430,
		bc:      0x7ac7,
		de:      0xb45f,
		hl:      0xfbf7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x638e,
		iy:      0x3173,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc0, 0xbc}},
			mock.Slice{Addr: 0x634e, Values: []uint8{0x28}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbbd",
		af:      0x4e71,
		bc:      0x6ffa,
		de:      0xa3f9,
		hl:      0xa2e5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe3c4,
		iy:      0x02d4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xb9, 0xbd}},
			mock.Slice{Addr: 0xe37d, Values: []uint8{0xdd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbbe",
		af:      0x4af8,
		bc:      0x99a5,
		de:      0xd6fd,
		hl:      0x7a16,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x58d3,
		iy:      0xce54,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x4d, 0xbe}},
			mock.Slice{Addr: 0x5920, Values: []uint8{0xe8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbbf",
		af:      0x6e31,
		bc:      0x0320,
		de:      0x134b,
		hl:      0x77c3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1734,
		iy:      0xbc2d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x26, 0xbf}},
			mock.Slice{Addr: 0x175a, Values: []uint8{0xe2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc0",
		af:      0x75be,
		bc:      0x2b93,
		de:      0x093d,
		hl:      0x1128,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x792e,
		iy:      0x31f7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x00, 0xc0}},
			mock.Slice{Addr: 0x792e, Values: []uint8{0x92}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc1",
		af:      0x313f,
		bc:      0x8223,
		de:      0x5fcc,
		hl:      0x42c8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdccc,
		iy:      0xd87b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf7, 0xc1}},
			mock.Slice{Addr: 0xdcc3, Values: []uint8{0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc2",
		af:      0xa7e3,
		bc:      0xbf55,
		de:      0xd27b,
		hl:      0x0a9d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0cfa,
		iy:      0xea4e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x85, 0xc2}},
			mock.Slice{Addr: 0x0c7f, Values: []uint8{0x30}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc3",
		af:      0xe076,
		bc:      0x2760,
		de:      0x1eec,
		hl:      0x9968,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5426,
		iy:      0xa1a0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x32, 0xc3}},
			mock.Slice{Addr: 0x5458, Values: []uint8{0xdd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc4",
		af:      0xa679,
		bc:      0xcc05,
		de:      0x3f4d,
		hl:      0xc899,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7acd,
		iy:      0x48d7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xae, 0xc4}},
			mock.Slice{Addr: 0x7a7b, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc5",
		af:      0xddfd,
		bc:      0x64d4,
		de:      0x2671,
		hl:      0x35e7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xba99,
		iy:      0xbd98,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9c, 0xc5}},
			mock.Slice{Addr: 0xba35, Values: []uint8{0x20}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc6",
		af:      0xb324,
		bc:      0xdc0c,
		de:      0x1e35,
		hl:      0x8cd5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xab2c,
		iy:      0xb6f3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc4, 0xc6}},
			mock.Slice{Addr: 0xaaf0, Values: []uint8{0xb8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc7",
		af:      0xa254,
		bc:      0x9e56,
		de:      0x6828,
		hl:      0x3189,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x64cb,
		iy:      0xdfad,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf8, 0xc7}},
			mock.Slice{Addr: 0x64c3, Values: []uint8{0x94}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc8",
		af:      0x8aca,
		bc:      0x139e,
		de:      0xe652,
		hl:      0x248b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6e7a,
		iy:      0x189a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x65, 0xc8}},
			mock.Slice{Addr: 0x6edf, Values: []uint8{0x8f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbc9",
		af:      0xf15f,
		bc:      0x856e,
		de:      0xa21f,
		hl:      0x8a59,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb670,
		iy:      0x4f79,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xfb, 0xc9}},
			mock.Slice{Addr: 0xb66b, Values: []uint8{0xb9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbca",
		af:      0xdfab,
		bc:      0xa031,
		de:      0x1d78,
		hl:      0xad3a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa887,
		iy:      0x7334,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x8a, 0xca}},
			mock.Slice{Addr: 0xa811, Values: []uint8{0x7e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbcb",
		af:      0xebd6,
		bc:      0x376e,
		de:      0xc346,
		hl:      0xb10c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa447,
		iy:      0x31d6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xa4, 0xcb}},
			mock.Slice{Addr: 0xa3eb, Values: []uint8{0x73}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbcc",
		af:      0x0212,
		bc:      0xdc46,
		de:      0x8f41,
		hl:      0x854e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1f5a,
		iy:      0x07ca,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x65, 0xcc}},
			mock.Slice{Addr: 0x1fbf, Values: []uint8{0x72}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbcd",
		af:      0x3344,
		bc:      0xd73c,
		de:      0xd6b8,
		hl:      0x929d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5376,
		iy:      0x6d3a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe9, 0xcd}},
			mock.Slice{Addr: 0x535f, Values: []uint8{0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbce",
		af:      0x9e47,
		bc:      0xfc93,
		de:      0x9ffc,
		hl:      0xaace,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0313,
		iy:      0x7f66,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x85, 0xce}},
			mock.Slice{Addr: 0x0298, Values: []uint8{0x10}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbcf",
		af:      0x53e8,
		bc:      0xd379,
		de:      0x87d5,
		hl:      0x10b0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc5d0,
		iy:      0x4f7f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xe2, 0xcf}},
			mock.Slice{Addr: 0xc5b2, Values: []uint8{0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd0",
		af:      0x3278,
		bc:      0x6114,
		de:      0xd25d,
		hl:      0x1cf8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xad43,
		iy:      0x99fc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x7f, 0xd0}},
			mock.Slice{Addr: 0xadc2, Values: []uint8{0x51}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd1",
		af:      0xc0b8,
		bc:      0x371a,
		de:      0x6472,
		hl:      0xd92d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x10b2,
		iy:      0x3074,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xa6, 0xd1}},
			mock.Slice{Addr: 0x1058, Values: []uint8{0x2c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd2",
		af:      0x5bb6,
		bc:      0xcaa8,
		de:      0xe0db,
		hl:      0xaf84,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb9a1,
		iy:      0x7b5f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x9c, 0xd2}},
			mock.Slice{Addr: 0xb93d, Values: []uint8{0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd3",
		af:      0xdb6a,
		bc:      0x4fe2,
		de:      0x9e52,
		hl:      0xa034,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xda36,
		iy:      0x88a0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbd, 0xd3}},
			mock.Slice{Addr: 0xd9f3, Values: []uint8{0x60}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd4",
		af:      0xcc1c,
		bc:      0xb884,
		de:      0x6ad2,
		hl:      0x1621,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xef26,
		iy:      0x41de,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x58, 0xd4}},
			mock.Slice{Addr: 0xef7e, Values: []uint8{0x5e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd5",
		af:      0xc41d,
		bc:      0xc8b0,
		de:      0xcacb,
		hl:      0x7687,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8dbc,
		iy:      0xcc25,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x41, 0xd5}},
			mock.Slice{Addr: 0x8dfd, Values: []uint8{0x71}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd6",
		af:      0x09eb,
		bc:      0x769d,
		de:      0x7e07,
		hl:      0x51f9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5f03,
		iy:      0x6280,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xea, 0xd6}},
			mock.Slice{Addr: 0x5eed, Values: []uint8{0x73}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd7",
		af:      0x241b,
		bc:      0xee10,
		de:      0xc152,
		hl:      0x2f6d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe725,
		iy:      0xc0d7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x80, 0xd7}},
			mock.Slice{Addr: 0xe6a5, Values: []uint8{0x60}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd8",
		af:      0xe3dc,
		bc:      0x1981,
		de:      0xc97b,
		hl:      0xcb42,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb30f,
		iy:      0xb32a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x4c, 0xd8}},
			mock.Slice{Addr: 0xb35b, Values: []uint8{0x96}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbd9",
		af:      0xe9a0,
		bc:      0xa7c7,
		de:      0xa476,
		hl:      0x6057,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2642,
		iy:      0x58a0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x52, 0xd9}},
			mock.Slice{Addr: 0x2694, Values: []uint8{0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbda",
		af:      0x6787,
		bc:      0x26a7,
		de:      0xa194,
		hl:      0x11d3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2d76,
		iy:      0x7f80,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xea, 0xda}},
			mock.Slice{Addr: 0x2d60, Values: []uint8{0x82}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbdb",
		af:      0xf986,
		bc:      0x6a4b,
		de:      0x6588,
		hl:      0xd2c8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2b7d,
		iy:      0x5847,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x4d, 0xdb}},
			mock.Slice{Addr: 0x2bca, Values: []uint8{0x10}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbdc",
		af:      0x4c9e,
		bc:      0xd94d,
		de:      0x9760,
		hl:      0xb707,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7ed4,
		iy:      0x5cc5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd3, 0xdc}},
			mock.Slice{Addr: 0x7ea7, Values: []uint8{0x45}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbdd",
		af:      0x4b3b,
		bc:      0xd351,
		de:      0x9be9,
		hl:      0x2310,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x58c1,
		iy:      0xe430,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x6f, 0xdd}},
			mock.Slice{Addr: 0x5930, Values: []uint8{0x20}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbde",
		af:      0x3b62,
		bc:      0xca1e,
		de:      0xa41a,
		hl:      0x227a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x89d2,
		iy:      0x7011,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x14, 0xde}},
			mock.Slice{Addr: 0x89e6, Values: []uint8{0x5e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbdf",
		af:      0x4c8a,
		bc:      0x5b42,
		de:      0x50dd,
		hl:      0x4be0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd227,
		iy:      0x4913,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xef, 0xdf}},
			mock.Slice{Addr: 0xd216, Values: []uint8{0x72}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe0",
		af:      0x440a,
		bc:      0x713d,
		de:      0xacfc,
		hl:      0xf762,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1c4b,
		iy:      0xb6ba,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x62, 0xe0}},
			mock.Slice{Addr: 0x1cad, Values: []uint8{0x46}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe1",
		af:      0xc219,
		bc:      0xaa6b,
		de:      0xdfbf,
		hl:      0x6f10,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb931,
		iy:      0xd3d6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x2e, 0xe1}},
			mock.Slice{Addr: 0xb95f, Values: []uint8{0x75}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe2",
		af:      0x66d7,
		bc:      0xabd0,
		de:      0xcb48,
		hl:      0x8054,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xef50,
		iy:      0x9997,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x85, 0xe2}},
			mock.Slice{Addr: 0xeed5, Values: []uint8{0x72}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe3",
		af:      0x7013,
		bc:      0xe7ed,
		de:      0x7e1c,
		hl:      0x57fb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7ec6,
		iy:      0x75eb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf4, 0xe3}},
			mock.Slice{Addr: 0x7eba, Values: []uint8{0x34}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe4",
		af:      0x1108,
		bc:      0x6e70,
		de:      0xf0af,
		hl:      0x2f0c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x95c7,
		iy:      0x6501,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbf, 0xe4}},
			mock.Slice{Addr: 0x9586, Values: []uint8{0x34}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe5",
		af:      0x57cc,
		bc:      0x5511,
		de:      0x2696,
		hl:      0xb83d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6ab0,
		iy:      0x0e90,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf2, 0xe5}},
			mock.Slice{Addr: 0x6aa2, Values: []uint8{0x2e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe6",
		af:      0x207a,
		bc:      0xa441,
		de:      0x1e03,
		hl:      0xac60,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd866,
		iy:      0x5fdc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x25, 0xe6}},
			mock.Slice{Addr: 0xd88b, Values: []uint8{0x4c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe7",
		af:      0xc3c5,
		bc:      0x7fa9,
		de:      0x4e07,
		hl:      0xe02d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2a1b,
		iy:      0x55b7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf3, 0xe7}},
			mock.Slice{Addr: 0x2a0e, Values: []uint8{0xeb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe8",
		af:      0x6d1c,
		bc:      0xa0c4,
		de:      0x93f0,
		hl:      0xa0b4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4bda,
		iy:      0x7761,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xf2, 0xe8}},
			mock.Slice{Addr: 0x4bcc, Values: []uint8{0xba}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbe9",
		af:      0xebe5,
		bc:      0x0c2c,
		de:      0x1a2a,
		hl:      0x2720,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x72dd,
		iy:      0xa354,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x8a, 0xe9}},
			mock.Slice{Addr: 0x7267, Values: []uint8{0x0a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbea",
		af:      0x42d2,
		bc:      0xda7a,
		de:      0x757f,
		hl:      0x6da6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa7e9,
		iy:      0xb933,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x04, 0xea}},
			mock.Slice{Addr: 0xa7ed, Values: []uint8{0x5f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbeb",
		af:      0xe945,
		bc:      0x10aa,
		de:      0xf5f8,
		hl:      0x7647,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x16df,
		iy:      0x93fb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x24, 0xeb}},
			mock.Slice{Addr: 0x1703, Values: []uint8{0xf3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbec",
		af:      0x7180,
		bc:      0xbc85,
		de:      0x7dd3,
		hl:      0xf467,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdd88,
		iy:      0x6a41,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x60, 0xec}},
			mock.Slice{Addr: 0xdde8, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbed",
		af:      0x6b2f,
		bc:      0x9762,
		de:      0x1f0a,
		hl:      0xdb61,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf772,
		iy:      0x33e3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xbe, 0xed}},
			mock.Slice{Addr: 0xf730, Values: []uint8{0x6b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbee",
		af:      0x79ea,
		bc:      0xdc8a,
		de:      0x7887,
		hl:      0x3baa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6c28,
		iy:      0xabbc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xde, 0xee}},
			mock.Slice{Addr: 0x6c06, Values: []uint8{0xbd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbef",
		af:      0x46c3,
		bc:      0x2fc2,
		de:      0x8690,
		hl:      0xa836,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcc68,
		iy:      0xa8ce,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x30, 0xef}},
			mock.Slice{Addr: 0xcc98, Values: []uint8{0x11}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf0",
		af:      0xb330,
		bc:      0x4469,
		de:      0x362b,
		hl:      0xb515,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x13c0,
		iy:      0x6479,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x2f, 0xf0}},
			mock.Slice{Addr: 0x13ef, Values: []uint8{0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf1",
		af:      0x94c0,
		bc:      0x9ab0,
		de:      0xa0fd,
		hl:      0x7c1d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x47ba,
		iy:      0x8c81,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x40, 0xf1}},
			mock.Slice{Addr: 0x47fa, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf2",
		af:      0x5302,
		bc:      0x9204,
		de:      0x20ec,
		hl:      0xd640,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc947,
		iy:      0x4ef1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x0f, 0xf2}},
			mock.Slice{Addr: 0xc956, Values: []uint8{0x21}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf3",
		af:      0x9950,
		bc:      0xa3d2,
		de:      0x5058,
		hl:      0x5ccc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1d96,
		iy:      0x7c75,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x06, 0xf3}},
			mock.Slice{Addr: 0x1d9c, Values: []uint8{0xe4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf4",
		af:      0x3712,
		bc:      0x1f99,
		de:      0x4863,
		hl:      0x47de,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1702,
		iy:      0xc042,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x3b, 0xf4}},
			mock.Slice{Addr: 0x173d, Values: []uint8{0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf5",
		af:      0xd83f,
		bc:      0x1ec9,
		de:      0xd0da,
		hl:      0x4173,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xeb3f,
		iy:      0x1ead,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x64, 0xf5}},
			mock.Slice{Addr: 0xeba3, Values: []uint8{0xc5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf6",
		af:      0x4d6c,
		bc:      0x93ac,
		de:      0x810d,
		hl:      0xcfe1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdc5a,
		iy:      0xc33c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x7b, 0xf6}},
			mock.Slice{Addr: 0xdcd5, Values: []uint8{0xa2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf7",
		af:      0xfe40,
		bc:      0x7887,
		de:      0xb9de,
		hl:      0xc013,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x301e,
		iy:      0x9710,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xc3, 0xf7}},
			mock.Slice{Addr: 0x2fe1, Values: []uint8{0xa9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf8",
		af:      0x8278,
		bc:      0x21a4,
		de:      0x1e5c,
		hl:      0x4952,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x427f,
		iy:      0x41e1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x59, 0xf8}},
			mock.Slice{Addr: 0x42d8, Values: []uint8{0x28}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbf9",
		af:      0xb2df,
		bc:      0xe9b8,
		de:      0x56c3,
		hl:      0x16ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd88f,
		iy:      0x0bab,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x55, 0xf9}},
			mock.Slice{Addr: 0xd8e4, Values: []uint8{0x14}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbfa",
		af:      0x01f1,
		bc:      0xbc0d,
		de:      0xd476,
		hl:      0x1510,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9420,
		iy:      0x93a3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x74, 0xfa}},
			mock.Slice{Addr: 0x9494, Values: []uint8{0xfe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbfb",
		af:      0x709b,
		bc:      0x14eb,
		de:      0xec1c,
		hl:      0xb844,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3453,
		iy:      0xf2b0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xaf, 0xfb}},
			mock.Slice{Addr: 0x3402, Values: []uint8{0x02}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbfc",
		af:      0x6c89,
		bc:      0xa96e,
		de:      0xd27b,
		hl:      0xd6a7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6139,
		iy:      0xb4c1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xa1, 0xfc}},
			mock.Slice{Addr: 0x60da, Values: []uint8{0x10}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbfd",
		af:      0xfb3f,
		bc:      0x83f6,
		de:      0x2094,
		hl:      0x3349,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3ed0,
		iy:      0x6f0e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0x28, 0xfd}},
			mock.Slice{Addr: 0x3ef8, Values: []uint8{0xc2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbfe",
		af:      0xfc42,
		bc:      0x50b7,
		de:      0xe98d,
		hl:      0x3e45,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x41b5,
		iy:      0x3410,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xec, 0xfe}},
			mock.Slice{Addr: 0x41a1, Values: []uint8{0xa1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddcbff",
		af:      0xe666,
		bc:      0x94d2,
		de:      0xac90,
		hl:      0x8f45,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0655,
		iy:      0xba29,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xcb, 0xd3, 0xff}},
			mock.Slice{Addr: 0x0628, Values: []uint8{0x2b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dde1",
		af:      0x8a15,
		bc:      0x6bf0,
		de:      0x0106,
		hl:      0x3dd0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5da4,
		iy:      0x8716,
		sp:      0x595f,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xe1}},
			mock.Slice{Addr: 0x595f, Values: []uint8{0x9a, 0x09}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dde3",
		af:      0x068e,
		bc:      0x58e6,
		de:      0x2713,
		hl:      0x500f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbe05,
		iy:      0x4308,
		sp:      0x57bd,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xe3}},
			mock.Slice{Addr: 0x57bd, Values: []uint8{0x15, 0x3f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dde5",
		af:      0x7462,
		bc:      0x9b6c,
		de:      0xbfe5,
		hl:      0x0330,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb282,
		iy:      0xe272,
		sp:      0x0761,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xe5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "dde9",
		af:      0x75a7,
		bc:      0x139b,
		de:      0xf9a3,
		hl:      0x94bb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x64f0,
		iy:      0x3433,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xe9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddf9",
		af:      0x8709,
		bc:      0x15dd,
		de:      0x7fa6,
		hl:      0x3c5c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd3a7,
		iy:      0x1d7b,
		sp:      0xf67c,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xf9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ddfd00",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 13,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xdd, 0xfd, 0x00, 0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "de",
		af:      0xe78d,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xde, 0xa1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "df",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xdf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e0_1",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e0_2",
		af:      0x009c,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e1",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x4143,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe1}},
			mock.Slice{Addr: 0x4143, Values: []uint8{0xce, 0xe8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e2_1",
		af:      0x0083,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e2_2",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e3",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x4d22,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0373,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe3}},
			mock.Slice{Addr: 0x0373, Values: []uint8{0x8e, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e4_1",
		af:      0x000a,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e4_2",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e5",
		af:      0x53e3,
		bc:      0x1459,
		de:      0x775f,
		hl:      0x1a2f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xec12,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e6",
		af:      0x7500,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe6, 0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e7",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xe7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e8_1",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e8_2",
		af:      0x009c,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "e9",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0xcaba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xe9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ea_1",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xea, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ea_2",
		af:      0x0083,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xea, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eb",
		af:      0x0000,
		bc:      0x0000,
		de:      0xb879,
		hl:      0x942e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xeb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ec_1",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xec, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ec_2",
		af:      0x000a,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xec, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed40",
		af:      0x83f9,
		bc:      0x296b,
		de:      0x7034,
		hl:      0x1f2f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x40}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed41",
		af:      0x29a2,
		bc:      0x0881,
		de:      0xd7dd,
		hl:      0xff4e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x41}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed42",
		af:      0xcbd3,
		bc:      0x1c8f,
		de:      0xd456,
		hl:      0x315e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x42}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed43",
		af:      0xda36,
		bc:      0x2732,
		de:      0x91cc,
		hl:      0x9798,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5f73,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x43, 0xc6, 0x54}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed44",
		af:      0xfe2b,
		bc:      0x040f,
		de:      0xdeb6,
		hl:      0xafc3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5ca8,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed45",
		af:      0x001d,
		bc:      0x5b63,
		de:      0xa586,
		hl:      0x1451,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x3100,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    1,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x45}},
			mock.Slice{Addr: 0x3100, Values: []uint8{0x1f, 0x22}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed46",
		af:      0xb6ec,
		bc:      0x8afb,
		de:      0xce09,
		hl:      0x70a1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x8dea,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x46}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed47",
		af:      0x9a99,
		bc:      0x9e5a,
		de:      0x9913,
		hl:      0xcacc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed48",
		af:      0xdbdd,
		bc:      0x7d1b,
		de:      0x141d,
		hl:      0x5fb4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x48}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed49",
		af:      0x07a5,
		bc:      0x59ec,
		de:      0xf459,
		hl:      0x4316,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed4a",
		af:      0x5741,
		bc:      0x24b5,
		de:      0x83d2,
		hl:      0x9ac8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x4a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed4b",
		af:      0x650c,
		bc:      0xd74d,
		de:      0x0448,
		hl:      0xa3b9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xb554,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x4b, 0x1a, 0xa4}},
			mock.Slice{Addr: 0xa41a, Values: []uint8{0xf3, 0xd4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed4c",
		af:      0x5682,
		bc:      0x7dde,
		de:      0xb049,
		hl:      0x939d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xc7bb,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x4c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed4d",
		af:      0x1bed,
		bc:      0xc358,
		de:      0x5fd5,
		hl:      0x6093,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x680e,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x4d}},
			mock.Slice{Addr: 0x680e, Values: []uint8{0x03, 0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed4e",
		af:      0x8e01,
		bc:      0xe7c6,
		de:      0x880f,
		hl:      0xd2a2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x85da,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      1,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x4e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed4f",
		af:      0x2ae3,
		bc:      0xc115,
		de:      0xeff8,
		hl:      0x9f6d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed50",
		af:      0x85ae,
		bc:      0xbbcc,
		de:      0xe2a8,
		hl:      0xf219,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed51",
		af:      0x2c4c,
		bc:      0xc0a4,
		de:      0x5303,
		hl:      0xbc25,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x51}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed52",
		af:      0xfc57,
		bc:      0x1fc8,
		de:      0x47b6,
		hl:      0xda7c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x52}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed53",
		af:      0x1f88,
		bc:      0x4692,
		de:      0x5cb2,
		hl:      0x4915,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x7d8c,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x53, 0xff, 0x21}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed54",
		af:      0xadf9,
		bc:      0x5661,
		de:      0x547c,
		hl:      0xc322,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xd9eb,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x54}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed55",
		af:      0xb05b,
		bc:      0x5e84,
		de:      0xd6e9,
		hl:      0xcb3e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xd4b4,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    1,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x55}},
			mock.Slice{Addr: 0xd4b4, Values: []uint8{0xea, 0xc9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed56",
		af:      0x5cc0,
		bc:      0x9100,
		de:      0x356b,
		hl:      0x4bfd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x2c93,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      1,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x56}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed57",
		af:      0xbcfe,
		bc:      0xdfc7,
		de:      0xa621,
		hl:      0x1022,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x1e,
		r:       0x17,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x57}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed58",
		af:      0xc9ee,
		bc:      0x4091,
		de:      0x9e46,
		hl:      0x873a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x58}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed59",
		af:      0x388a,
		bc:      0xd512,
		de:      0xecc5,
		hl:      0x93af,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x59}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed5a",
		af:      0xa41f,
		bc:      0x751c,
		de:      0x19ce,
		hl:      0x0493,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x5a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed5b",
		af:      0x5df1,
		bc:      0x982e,
		de:      0x002f,
		hl:      0xadb9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xf398,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x5b, 0x04, 0x9f}},
			mock.Slice{Addr: 0x9f04, Values: []uint8{0x84, 0x4d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed5c",
		af:      0x11c3,
		bc:      0xb86c,
		de:      0x2042,
		hl:      0xc958,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x93dc,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x5c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed5d",
		af:      0x1152,
		bc:      0x1d20,
		de:      0x3f86,
		hl:      0x64fc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5308,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x5d}},
			mock.Slice{Addr: 0x5308, Values: []uint8{0x26, 0xe0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed5e",
		af:      0x611a,
		bc:      0xc8cf,
		de:      0xf215,
		hl:      0xd92b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x4d86,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      1,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x5e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed5f",
		af:      0x1bb5,
		bc:      0xfc09,
		de:      0x2dfa,
		hl:      0xbab9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0xd7,
		r:       0xf3,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x5f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed60",
		af:      0x2c9c,
		bc:      0x0dae,
		de:      0x621e,
		hl:      0x2f66,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x60}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed61",
		af:      0xffa8,
		bc:      0x90ca,
		de:      0x0340,
		hl:      0xd847,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed62",
		af:      0xa60b,
		bc:      0xd9aa,
		de:      0x6623,
		hl:      0x0b1a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x62}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed63",
		af:      0x5222,
		bc:      0x88f9,
		de:      0x9d9a,
		hl:      0xe4d3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xa2f0,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x63, 0x67, 0x65}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed64",
		af:      0x2127,
		bc:      0xe425,
		de:      0x66ac,
		hl:      0xb2a3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f2,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x64}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed65",
		af:      0x63d2,
		bc:      0x1fa1,
		de:      0x0788,
		hl:      0x881c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xf207,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    1,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x65}},
			mock.Slice{Addr: 0xf207, Values: []uint8{0xeb, 0x0e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed66",
		af:      0x4088,
		bc:      0xa7e1,
		de:      0x3ffd,
		hl:      0x919b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xd193,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      1,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x66}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed67",
		af:      0x3624,
		bc:      0xb16a,
		de:      0xa4db,
		hl:      0xb9de,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x67}},
			mock.Slice{Addr: 0xb9de, Values: []uint8{0x93}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed68",
		af:      0x5316,
		bc:      0x624b,
		de:      0x7311,
		hl:      0x3106,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x68}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed69",
		af:      0xabd8,
		bc:      0x8d2f,
		de:      0x89c7,
		hl:      0xc3d6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x69}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed6a",
		af:      0xbb5a,
		bc:      0x6fed,
		de:      0x59bb,
		hl:      0x4e40,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x6a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed6b",
		af:      0x9e35,
		bc:      0xd240,
		de:      0x1998,
		hl:      0xab19,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x9275,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x6b, 0x98, 0x61}},
			mock.Slice{Addr: 0x6198, Values: []uint8{0x3f, 0xbe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed6c",
		af:      0x0fb1,
		bc:      0x7d5b,
		de:      0xcadb,
		hl:      0x0893,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xd983,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x6c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed6d",
		af:      0x3860,
		bc:      0x42da,
		de:      0x5935,
		hl:      0xdc10,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5cd3,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x6d}},
			mock.Slice{Addr: 0x5cd3, Values: []uint8{0xa9, 0x73}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed6e",
		af:      0x7752,
		bc:      0xbec3,
		de:      0x0457,
		hl:      0x8c95,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xa787,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x6e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed6f",
		af:      0x658b,
		bc:      0x7a7a,
		de:      0xecf0,
		hl:      0x403c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x6f}},
			mock.Slice{Addr: 0x403c, Values: []uint8{0xc4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed70",
		af:      0xc6a1,
		bc:      0xf7d6,
		de:      0xa3cb,
		hl:      0x288d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x70}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed71",
		af:      0xafa0,
		bc:      0x20b3,
		de:      0x7b33,
		hl:      0x4ac1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x71}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed72",
		af:      0x5fd9,
		bc:      0x05cb,
		de:      0x0c6c,
		hl:      0xd18b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x53db,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x72}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed73",
		af:      0x41c4,
		bc:      0x763a,
		de:      0xecb0,
		hl:      0xee62,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xaed5,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x73, 0x2a, 0x79}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed74",
		af:      0x4454,
		bc:      0xf2d2,
		de:      0x8340,
		hl:      0x7e76,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0323,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x74}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed75",
		af:      0x7ca4,
		bc:      0x1615,
		de:      0x5d2a,
		hl:      0xa95b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x7d00,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    1,
		iff2:    1,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x75}},
			mock.Slice{Addr: 0x7d00, Values: []uint8{0xfd, 0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed76",
		af:      0xcabf,
		bc:      0xff9a,
		de:      0xb98c,
		hl:      0xa8e6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xfe8e,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      2,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x76}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed78",
		af:      0x58dd,
		bc:      0xf206,
		de:      0x2d6a,
		hl:      0xaf16,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed79",
		af:      0xe000,
		bc:      0x4243,
		de:      0x8f7f,
		hl:      0xed90,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x79}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed7a",
		af:      0x32fd,
		bc:      0xd819,
		de:      0xd873,
		hl:      0x8dcf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5d22,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x7a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed7b",
		af:      0x4f97,
		bc:      0x24b7,
		de:      0xe105,
		hl:      0x1bf2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5e17,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x7b, 0x50, 0x8c}},
			mock.Slice{Addr: 0x8c50, Values: []uint8{0xd8, 0x48}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed7c",
		af:      0xd333,
		bc:      0x29ca,
		de:      0x9622,
		hl:      0xb452,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0be6,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed7d",
		af:      0xecb6,
		bc:      0x073e,
		de:      0xdc1e,
		hl:      0x38d9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x66f0,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    1,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x7d}},
			mock.Slice{Addr: 0x66f0, Values: []uint8{0x4f, 0xfb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ed7e",
		af:      0xb246,
		bc:      0x1a1a,
		de:      0x933a,
		hl:      0x4b8b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x2242,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0x7e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda0",
		af:      0x1bc9,
		bc:      0x3d11,
		de:      0x95c1,
		hl:      0xd097,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa0}},
			mock.Slice{Addr: 0xd097, Values: []uint8{0xb7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda1",
		af:      0xecdb,
		bc:      0x7666,
		de:      0x537f,
		hl:      0x3bc3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa1}},
			mock.Slice{Addr: 0x3bc3, Values: []uint8{0xb4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda2",
		af:      0x0121,
		bc:      0x9a82,
		de:      0x5bbd,
		hl:      0x2666,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda2_01",
		af:      0x0000,
		bc:      0x0200,
		de:      0x0000,
		hl:      0x8000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda2_02",
		af:      0x0000,
		bc:      0x569a,
		de:      0x0000,
		hl:      0x8000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda2_03",
		af:      0x0000,
		bc:      0xabcc,
		de:      0x0000,
		hl:      0x8000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3",
		af:      0x42c5,
		bc:      0x6334,
		de:      0x1e28,
		hl:      0x32fa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x32fa, Values: []uint8{0xb3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_01",
		af:      0x0000,
		bc:      0x0100,
		de:      0x0000,
		hl:      0x01ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01ff, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_02",
		af:      0x0000,
		bc:      0x0100,
		de:      0x0000,
		hl:      0x0100,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x0100, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_03",
		af:      0x0000,
		bc:      0x0100,
		de:      0x0000,
		hl:      0x0107,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x0107, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_04",
		af:      0x0000,
		bc:      0x0100,
		de:      0x0000,
		hl:      0x01ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01ff, Values: []uint8{0x80}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_05",
		af:      0x0000,
		bc:      0x0100,
		de:      0x0000,
		hl:      0x01fd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01fd, Values: []uint8{0x12}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_06",
		af:      0x0000,
		bc:      0x0100,
		de:      0x0000,
		hl:      0x01fe,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01fe, Values: []uint8{0x12}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_07",
		af:      0x0000,
		bc:      0x0200,
		de:      0x0000,
		hl:      0x01ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01ff, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_08",
		af:      0x0000,
		bc:      0x0800,
		de:      0x0000,
		hl:      0x01fe,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01fe, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_09",
		af:      0x0000,
		bc:      0x8100,
		de:      0x0000,
		hl:      0x01ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01ff, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_10",
		af:      0x0000,
		bc:      0x8200,
		de:      0x0000,
		hl:      0x01ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01ff, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda3_11",
		af:      0x0000,
		bc:      0xa900,
		de:      0x0000,
		hl:      0x01ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa3}},
			mock.Slice{Addr: 0x01ff, Values: []uint8{0x00}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda8",
		af:      0x2a8e,
		bc:      0x1607,
		de:      0x5938,
		hl:      0x12e8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa8}},
			mock.Slice{Addr: 0x12e8, Values: []uint8{0xd8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "eda9",
		af:      0x1495,
		bc:      0xfb42,
		de:      0x0466,
		hl:      0x0dbe,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xa9}},
			mock.Slice{Addr: 0x0dbe, Values: []uint8{0x89}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edaa",
		af:      0x2042,
		bc:      0xd791,
		de:      0xa912,
		hl:      0xa533,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edaa_01",
		af:      0x0000,
		bc:      0x0101,
		de:      0x0000,
		hl:      0x8000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edaa_02",
		af:      0x0000,
		bc:      0x56aa,
		de:      0x0000,
		hl:      0x8000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edaa_03",
		af:      0x0000,
		bc:      0xabcc,
		de:      0x0000,
		hl:      0x8000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edab",
		af:      0x0037,
		bc:      0xf334,
		de:      0xd3e1,
		hl:      0x199f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xab}},
			mock.Slice{Addr: 0x199f, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edab_01",
		af:      0x0000,
		bc:      0x5800,
		de:      0x0000,
		hl:      0x007a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xab}},
			mock.Slice{Addr: 0x007a, Values: []uint8{0x7f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edab_02",
		af:      0x0000,
		bc:      0xab00,
		de:      0x0000,
		hl:      0x00f1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xab}},
			mock.Slice{Addr: 0x00f1, Values: []uint8{0xcd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edb0",
		af:      0x1045,
		bc:      0x0010,
		de:      0xaad8,
		hl:      0x558e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 331,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xb0}},
			mock.Slice{Addr: 0x558e, Values: []uint8{0x53, 0x94, 0x30, 0x05, 0x44, 0x24, 0x22, 0xb9, 0xe9, 0x77, 0x23, 0x71, 0xe2, 0x5c, 0xfb, 0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edb1",
		af:      0xf4dd,
		bc:      0x0008,
		de:      0xe4e0,
		hl:      0x9825,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 79,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xb1}},
			mock.Slice{Addr: 0x9825, Values: []uint8{0x50, 0xe5, 0x41, 0xf4, 0x01, 0x9f, 0x11, 0x85}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edb2",
		af:      0x8a34,
		bc:      0x0a40,
		de:      0xd98c,
		hl:      0x37ce,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 205,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xb2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edb3",
		af:      0x34ab,
		bc:      0x03e0,
		de:      0x41b9,
		hl:      0x1d7c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 58,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xb3}},
			mock.Slice{Addr: 0x1d7c, Values: []uint8{0x9d, 0x24, 0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edb8",
		af:      0xe553,
		bc:      0x0008,
		de:      0x68e8,
		hl:      0x4dcf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 163,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xb8}},
			mock.Slice{Addr: 0x4dc8, Values: []uint8{0x29, 0x85, 0xa7, 0xc3, 0x55, 0x74, 0x23, 0x0a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edb9",
		af:      0xffcd,
		bc:      0x0008,
		de:      0xa171,
		hl:      0xc749,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 163,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xb9}},
			mock.Slice{Addr: 0xc742, Values: []uint8{0xc6, 0x09, 0x85, 0xec, 0x5a, 0x01, 0x4e, 0x6c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edba",
		af:      0x2567,
		bc:      0x069f,
		de:      0xd40d,
		hl:      0x6b55,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 121,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xba}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "edbb",
		af:      0x09c4,
		bc:      0x043b,
		de:      0xbe49,
		hl:      0x1dd0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 79,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xed, 0xbb}},
			mock.Slice{Addr: 0x1dcd, Values: []uint8{0xf9, 0x71, 0xc5, 0xb6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ee",
		af:      0x3e00,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xee, 0xd0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ef",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f0_1",
		af:      0x0018,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f0_2",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf0}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f1",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x4143,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf1}},
			mock.Slice{Addr: 0x4143, Values: []uint8{0xce, 0xe8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f2_1",
		af:      0x0007,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f2_2",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf2, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f3",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    1,
		iff2:    1,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f4_1",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f4_2",
		af:      0x008e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf4, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f5",
		af:      0x53e3,
		bc:      0x1459,
		de:      0x775f,
		hl:      0x1a2f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0xec12,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f6",
		af:      0x0600,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf6, 0xa7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f7",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xf7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f8_1",
		af:      0x0018,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f8_2",
		af:      0x0098,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x43f7,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf8}},
			mock.Slice{Addr: 0x43f7, Values: []uint8{0xe9, 0xaf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "f9",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0xce32,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xf9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fa_1",
		af:      0x0087,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfa, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fa_2",
		af:      0x0007,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfa, 0x1b, 0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fb",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fc_1",
		af:      0x008e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfc, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fc_2",
		af:      0x000e,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5698,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfc, 0x61, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd09",
		af:      0x466a,
		bc:      0xa623,
		de:      0xbab2,
		hl:      0xd788,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc9e8,
		iy:      0xf698,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x09}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd19",
		af:      0xb3e5,
		bc:      0x5336,
		de:      0x76cb,
		hl:      0x54e2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb9ce,
		iy:      0x8624,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x19}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd21",
		af:      0xc924,
		bc:      0x5c83,
		de:      0xe0e2,
		hl:      0xeddb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6e9f,
		iy:      0xba55,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x21, 0x46, 0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd22",
		af:      0x1235,
		bc:      0xf0b6,
		de:      0xb74c,
		hl:      0xcc9f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8b00,
		iy:      0x81e4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x22, 0x9a, 0xe2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd23",
		af:      0x69f2,
		bc:      0xc1d3,
		de:      0x0f6f,
		hl:      0x2169,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe39e,
		iy:      0x2605,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x23}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd24",
		af:      0x5554,
		bc:      0x9684,
		de:      0xd36a,
		hl:      0xdac3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7803,
		iy:      0x6434,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x24}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd25",
		af:      0xcd0b,
		bc:      0xb5e4,
		de:      0xa754,
		hl:      0x9526,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3dcb,
		iy:      0x03b2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x25}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd26",
		af:      0x2452,
		bc:      0x300b,
		de:      0xb4a1,
		hl:      0x929d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc259,
		iy:      0x3f30,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x26, 0x77}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd29",
		af:      0x5812,
		bc:      0x49d0,
		de:      0xec95,
		hl:      0x011c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xec6c,
		iy:      0x594c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x29}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd2a",
		af:      0x0f82,
		bc:      0x3198,
		de:      0x87e3,
		hl:      0x7c1c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1bb4,
		iy:      0xeb1a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x2a, 0x91, 0xf9}},
			mock.Slice{Addr: 0xf991, Values: []uint8{0x92, 0xbf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd2b",
		af:      0xab27,
		bc:      0x942f,
		de:      0x82fa,
		hl:      0x6f2f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9438,
		iy:      0xebbc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x2b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd2c",
		af:      0x665d,
		bc:      0x0ab1,
		de:      0x5656,
		hl:      0xe5a9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5fb9,
		iy:      0x4df7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x2c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd2d",
		af:      0x32fb,
		bc:      0xf78a,
		de:      0xb906,
		hl:      0x31d0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc72a,
		iy:      0xe91c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x2d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd2e",
		af:      0x2114,
		bc:      0x4923,
		de:      0x6e65,
		hl:      0x006c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xda39,
		iy:      0xc0cb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x2e, 0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd34",
		af:      0xd56a,
		bc:      0x6f24,
		de:      0x7df7,
		hl:      0x74f0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x365a,
		iy:      0xefc4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x34, 0xb8}},
			mock.Slice{Addr: 0xef7c, Values: []uint8{0xe0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd35",
		af:      0x8cda,
		bc:      0x35d8,
		de:      0x7c1a,
		hl:      0x1c0a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x62bb,
		iy:      0xaec6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x35, 0xab}},
			mock.Slice{Addr: 0xae71, Values: []uint8{0xa6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd36",
		af:      0xe0f9,
		bc:      0xae1f,
		de:      0x4aef,
		hl:      0xc9d5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc0db,
		iy:      0xbdd4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x36, 0x81, 0xc5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd39",
		af:      0x2603,
		bc:      0x726f,
		de:      0x9c7f,
		hl:      0xcd46,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdc45,
		iy:      0x54d5,
		sp:      0xdc57,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x39}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd44",
		af:      0x0e58,
		bc:      0x7192,
		de:      0x3580,
		hl:      0x9be4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1b79,
		iy:      0x685e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd45",
		af:      0x6555,
		bc:      0xa488,
		de:      0x5ae8,
		hl:      0xc948,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd7b8,
		iy:      0xa177,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x45}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd46",
		af:      0x87f3,
		bc:      0x17d5,
		de:      0x5eea,
		hl:      0x830b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdcee,
		iy:      0x3afc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x46, 0x4d}},
			mock.Slice{Addr: 0x3b49, Values: []uint8{0xc9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd4c",
		af:      0x7e6b,
		bc:      0xbd4b,
		de:      0x24b6,
		hl:      0xff94,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x862d,
		iy:      0x01d0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x4c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd4d",
		af:      0x50cf,
		bc:      0xe3fe,
		de:      0x998e,
		hl:      0xdba2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc4f5,
		iy:      0xc7c9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x4d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd4e",
		af:      0x2c0f,
		bc:      0x69d7,
		de:      0x748a,
		hl:      0x9290,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x904f,
		iy:      0xbb9a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x4e, 0x67}},
			mock.Slice{Addr: 0xbc01, Values: []uint8{0x9d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd54",
		af:      0xd7f9,
		bc:      0xf65b,
		de:      0xb001,
		hl:      0xd4c4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4b8e,
		iy:      0xd437,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x54}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd55",
		af:      0xab98,
		bc:      0xfdab,
		de:      0x254a,
		hl:      0x010e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x126b,
		iy:      0x13a9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x55}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd56",
		af:      0xd3e8,
		bc:      0xdf10,
		de:      0x5442,
		hl:      0xb641,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa5a0,
		iy:      0xfda2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x56, 0xce}},
			mock.Slice{Addr: 0xfd70, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd5c",
		af:      0x11d5,
		bc:      0xc489,
		de:      0xe220,
		hl:      0x434e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3244,
		iy:      0xd8bb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x5c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd5d",
		af:      0xe945,
		bc:      0xdbae,
		de:      0x32ea,
		hl:      0x4f7e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfa56,
		iy:      0x074e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x5d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd5e",
		af:      0x6f3b,
		bc:      0xe9dc,
		de:      0x7a06,
		hl:      0x14f3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xec76,
		iy:      0x8aaa,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x5e, 0xc6}},
			mock.Slice{Addr: 0x8a70, Values: []uint8{0x8c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd60",
		af:      0x8579,
		bc:      0x005d,
		de:      0xd9ee,
		hl:      0xfaee,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x382d,
		iy:      0x2f95,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x60}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd61",
		af:      0x5682,
		bc:      0xdbc3,
		de:      0xb495,
		hl:      0x9799,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x85b2,
		iy:      0x3c1e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd62",
		af:      0x906b,
		bc:      0xf52e,
		de:      0xf3d8,
		hl:      0x1e8c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xddba,
		iy:      0x9a02,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x62}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd63",
		af:      0x9d59,
		bc:      0xbeb9,
		de:      0xd826,
		hl:      0x0eaa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4290,
		iy:      0xa4b9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x63}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd64",
		af:      0x7b0e,
		bc:      0xe394,
		de:      0x8a25,
		hl:      0xcddf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9784,
		iy:      0x2116,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x64}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd65",
		af:      0xb827,
		bc:      0xeb4f,
		de:      0xf666,
		hl:      0xc52a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6206,
		iy:      0x831f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x65}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd66",
		af:      0x9129,
		bc:      0xe4ee,
		de:      0xe3a3,
		hl:      0x86ca,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4d93,
		iy:      0x5b24,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x66, 0x80}},
			mock.Slice{Addr: 0x5aa4, Values: []uint8{0x77}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd67",
		af:      0xdb7a,
		bc:      0xb40b,
		de:      0x7b58,
		hl:      0x49fd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x266f,
		iy:      0x9e7b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x67}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd68",
		af:      0x4d1d,
		bc:      0x4fd9,
		de:      0x783e,
		hl:      0x0745,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0c3d,
		iy:      0x82b5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x68}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd69",
		af:      0x1589,
		bc:      0x5ceb,
		de:      0xb5db,
		hl:      0x922a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3c3a,
		iy:      0xdc98,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x69}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd6a",
		af:      0x607a,
		bc:      0xe035,
		de:      0x5bb9,
		hl:      0xdac0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfc04,
		iy:      0xb5b7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x6a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd6b",
		af:      0xdb2a,
		bc:      0xe244,
		de:      0x1182,
		hl:      0x096f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x198e,
		iy:      0x91a6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x6b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd6c",
		af:      0xa0be,
		bc:      0x34ef,
		de:      0x8fcd,
		hl:      0x40a7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4481,
		iy:      0xc215,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x6c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd6d",
		af:      0xfdfc,
		bc:      0x727a,
		de:      0xb839,
		hl:      0x50a6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe782,
		iy:      0x02e5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x6d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd6e",
		af:      0xcfd4,
		bc:      0x6ef1,
		de:      0xc07d,
		hl:      0xeb96,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb0f9,
		iy:      0xb0a3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x6e, 0x78}},
			mock.Slice{Addr: 0xb11b, Values: []uint8{0xf8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd6f",
		af:      0x8e1d,
		bc:      0xa138,
		de:      0xf20a,
		hl:      0x298e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb600,
		iy:      0x0cf7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x6f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd70",
		af:      0x2677,
		bc:      0x33c5,
		de:      0xc0dc,
		hl:      0x262f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd3dc,
		iy:      0x23a1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x70, 0x53}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd71",
		af:      0x892e,
		bc:      0x04ae,
		de:      0xd67f,
		hl:      0x81ec,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7757,
		iy:      0xbfab,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x71, 0xb4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd72",
		af:      0xd2dc,
		bc:      0xc23c,
		de:      0xdd54,
		hl:      0x6559,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb32b,
		iy:      0x7c80,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x72, 0xe3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd73",
		af:      0x49ef,
		bc:      0xbff2,
		de:      0x8409,
		hl:      0x02dd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xaf95,
		iy:      0x8762,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x73, 0x17}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd74",
		af:      0x9479,
		bc:      0x9817,
		de:      0xfa2e,
		hl:      0x1fe0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa395,
		iy:      0x92db,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x74, 0xf6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd75",
		af:      0xc8d6,
		bc:      0x6aa4,
		de:      0x180e,
		hl:      0xe37b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x02cf,
		iy:      0x1724,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x75, 0xab}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd77",
		af:      0x6f9e,
		bc:      0x7475,
		de:      0x78ad,
		hl:      0x2b8c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc6b7,
		iy:      0x6b4d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x77, 0xf7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd7c",
		af:      0xf228,
		bc:      0x93fc,
		de:      0xa3d4,
		hl:      0xdc9e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x21ac,
		iy:      0xc617,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd7d",
		af:      0x93e5,
		bc:      0x3cbe,
		de:      0x02c3,
		hl:      0x26c2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xca81,
		iy:      0x92b9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x7d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd7e",
		af:      0x1596,
		bc:      0xdaba,
		de:      0x147b,
		hl:      0xf362,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7110,
		iy:      0xd45f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x7e, 0xe4}},
			mock.Slice{Addr: 0xd443, Values: []uint8{0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd84",
		af:      0xbfba,
		bc:      0x7cae,
		de:      0xc4da,
		hl:      0x7aee,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x43ee,
		iy:      0xc08e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x84}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd85",
		af:      0x52dd,
		bc:      0x1dea,
		de:      0x324f,
		hl:      0x84e7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe7a8,
		iy:      0xf799,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x85}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd86",
		af:      0xfc9c,
		bc:      0xb882,
		de:      0x43f9,
		hl:      0x3e15,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9781,
		iy:      0x8b33,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x86, 0xce}},
			mock.Slice{Addr: 0x8b01, Values: []uint8{0xe1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd8c",
		af:      0xfd9c,
		bc:      0x42b1,
		de:      0x5e8a,
		hl:      0x081c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcb58,
		iy:      0x3b4e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x8c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd8d",
		af:      0x9301,
		bc:      0x7750,
		de:      0x8ad6,
		hl:      0x295c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x695c,
		iy:      0x99fb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd8e",
		af:      0x41ee,
		bc:      0x398f,
		de:      0xf6dc,
		hl:      0x06f3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf34a,
		iy:      0x1aa2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x8e, 0x78}},
			mock.Slice{Addr: 0x1b1a, Values: []uint8{0xc0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd94",
		af:      0x0431,
		bc:      0xd255,
		de:      0xb9d6,
		hl:      0x20bb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1e6a,
		iy:      0xd5ef,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x94}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd95",
		af:      0x8b5d,
		bc:      0xb455,
		de:      0x2388,
		hl:      0xec1e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7637,
		iy:      0xcb97,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x95}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd96",
		af:      0xa0c6,
		bc:      0x22ac,
		de:      0x0413,
		hl:      0x4b13,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb44e,
		iy:      0xc08b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x96, 0x55}},
			mock.Slice{Addr: 0xc0e0, Values: []uint8{0x7b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd9c",
		af:      0xa44a,
		bc:      0x3ecf,
		de:      0xced3,
		hl:      0x66ec,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4bff,
		iy:      0xb133,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd9d",
		af:      0x06c0,
		bc:      0x8bd0,
		de:      0x131b,
		hl:      0x3094,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xafc3,
		iy:      0x7409,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x9d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fd9e",
		af:      0xb983,
		bc:      0x981f,
		de:      0xbb8e,
		hl:      0xd6d5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5c3b,
		iy:      0xf66c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0x9e, 0xf9}},
			mock.Slice{Addr: 0xf665, Values: []uint8{0xf3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fda4",
		af:      0xb079,
		bc:      0x79c0,
		de:      0x2c7c,
		hl:      0x3e06,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7399,
		iy:      0x037a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xa4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fda5",
		af:      0x01d2,
		bc:      0x654d,
		de:      0x9653,
		hl:      0x2b33,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x61a4,
		iy:      0x8f88,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xa5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fda6",
		af:      0xddb8,
		bc:      0x40bb,
		de:      0x3742,
		hl:      0x6ff1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xad28,
		iy:      0x659b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xa6, 0x53}},
			mock.Slice{Addr: 0x65ee, Values: []uint8{0x95}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdac",
		af:      0x7a43,
		bc:      0x72e3,
		de:      0xdd4d,
		hl:      0x1b62,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4753,
		iy:      0x5d63,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xac}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdad",
		af:      0x7d8e,
		bc:      0x2573,
		de:      0x19cc,
		hl:      0x78fb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5248,
		iy:      0x8391,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdae",
		af:      0xa0da,
		bc:      0xbc27,
		de:      0x257b,
		hl:      0x5489,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfa59,
		iy:      0x81f8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xae, 0x09}},
			mock.Slice{Addr: 0x8201, Values: []uint8{0xcb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdb4",
		af:      0x4f95,
		bc:      0x3461,
		de:      0xf173,
		hl:      0x8ad3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc1a2,
		iy:      0x8265,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xb4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdb5",
		af:      0x17f6,
		bc:      0xe6ea,
		de:      0xf919,
		hl:      0x327c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4299,
		iy:      0x9733,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdb6",
		af:      0xdb37,
		bc:      0x3509,
		de:      0xd6ca,
		hl:      0xb16a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa099,
		iy:      0xdf6d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xb6, 0x4b}},
			mock.Slice{Addr: 0xdfb8, Values: []uint8{0x64}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdbc",
		af:      0xb4fc,
		bc:      0x9302,
		de:      0xe35d,
		hl:      0x31bc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5c12,
		iy:      0x1c92,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdbd",
		af:      0x391c,
		bc:      0x7b82,
		de:      0xdfeb,
		hl:      0x03ee,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbe7b,
		iy:      0xb30f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xbd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdbe",
		af:      0x0970,
		bc:      0x0b31,
		de:      0xf4ad,
		hl:      0x9d4c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb95a,
		iy:      0xa96b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xbe, 0x6b}},
			mock.Slice{Addr: 0xa9d6, Values: []uint8{0xc0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb00",
		af:      0x85ac,
		bc:      0x46d0,
		de:      0xa135,
		hl:      0x20c5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb8de,
		iy:      0x2776,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0b, 0x00}},
			mock.Slice{Addr: 0x2781, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb01",
		af:      0x577c,
		bc:      0x2b76,
		de:      0x3576,
		hl:      0x280a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xae22,
		iy:      0x5c35,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc8, 0x01}},
			mock.Slice{Addr: 0x5bfd, Values: []uint8{0xcb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb02",
		af:      0xdc23,
		bc:      0x2b37,
		de:      0x83c8,
		hl:      0x5dd9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb2d2,
		iy:      0x3df2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x14, 0x02}},
			mock.Slice{Addr: 0x3e06, Values: []uint8{0x58}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb03",
		af:      0x57ee,
		bc:      0xc179,
		de:      0xb2b6,
		hl:      0x7058,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3f2e,
		iy:      0x57e7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x3a, 0x03}},
			mock.Slice{Addr: 0x5821, Values: []uint8{0x1a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb04",
		af:      0xed18,
		bc:      0x3f03,
		de:      0x3327,
		hl:      0xf35a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcbf2,
		iy:      0x5071,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x67, 0x04}},
			mock.Slice{Addr: 0x50d8, Values: []uint8{0x92}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb05",
		af:      0x7a39,
		bc:      0x0858,
		de:      0xdb6c,
		hl:      0xdbe0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x157a,
		iy:      0xb25b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x1e, 0x05}},
			mock.Slice{Addr: 0xb279, Values: []uint8{0x66}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb06",
		af:      0xf285,
		bc:      0x89a2,
		de:      0xe78f,
		hl:      0xef74,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x140d,
		iy:      0xff27,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x72, 0x06}},
			mock.Slice{Addr: 0xff99, Values: []uint8{0xf1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb07",
		af:      0x8cce,
		bc:      0xf3a7,
		de:      0x3a6e,
		hl:      0x8f0a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8423,
		iy:      0x07eb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x24, 0x07}},
			mock.Slice{Addr: 0x080f, Values: []uint8{0xae}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb08",
		af:      0xa611,
		bc:      0xe8ec,
		de:      0xc958,
		hl:      0x7bda,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x194d,
		iy:      0x6137,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x25, 0x08}},
			mock.Slice{Addr: 0x615c, Values: []uint8{0x83}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb09",
		af:      0x54b1,
		bc:      0xfa1a,
		de:      0x84e8,
		hl:      0x4fa5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1ad3,
		iy:      0x19da,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa0, 0x09}},
			mock.Slice{Addr: 0x197a, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb0a",
		af:      0xb3ef,
		bc:      0xa2bb,
		de:      0xe5d6,
		hl:      0x9617,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf946,
		iy:      0xeef6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe1, 0x0a}},
			mock.Slice{Addr: 0xeed7, Values: []uint8{0x19}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb0b",
		af:      0xae10,
		bc:      0x8c4e,
		de:      0xe159,
		hl:      0x1c54,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe108,
		iy:      0xc68f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0c, 0x0b}},
			mock.Slice{Addr: 0xc69b, Values: []uint8{0xf2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb0c",
		af:      0x8719,
		bc:      0x6b16,
		de:      0x4c3b,
		hl:      0x180a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x175a,
		iy:      0x8c9d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd7, 0x0c}},
			mock.Slice{Addr: 0x8c74, Values: []uint8{0xae}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb0d",
		af:      0x1204,
		bc:      0xe0cb,
		de:      0x3ab1,
		hl:      0x2416,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1de4,
		iy:      0xfe2d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x11, 0x0d}},
			mock.Slice{Addr: 0xfe3e, Values: []uint8{0x1b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb0e",
		af:      0x8da4,
		bc:      0x8f91,
		de:      0xfc5a,
		hl:      0x5e2c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb2f2,
		iy:      0xf223,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0c, 0x0e}},
			mock.Slice{Addr: 0xf22f, Values: []uint8{0xf7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb0f",
		af:      0xfbb0,
		bc:      0x2ac9,
		de:      0xec6b,
		hl:      0x6511,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc93a,
		iy:      0xce38,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x15, 0x0f}},
			mock.Slice{Addr: 0xce4d, Values: []uint8{0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb10",
		af:      0x259d,
		bc:      0x3852,
		de:      0x590d,
		hl:      0xac66,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x144f,
		iy:      0x42a2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7a, 0x10}},
			mock.Slice{Addr: 0x431c, Values: []uint8{0x1c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb11",
		af:      0xbc60,
		bc:      0x61c1,
		de:      0xf5f8,
		hl:      0xaf24,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4019,
		iy:      0x9c90,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7b, 0x11}},
			mock.Slice{Addr: 0x9d0b, Values: []uint8{0x5e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb12",
		af:      0x4e45,
		bc:      0x3a25,
		de:      0x3417,
		hl:      0xbcc7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0d7e,
		iy:      0x8537,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x61, 0x12}},
			mock.Slice{Addr: 0x8598, Values: []uint8{0xa7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb13",
		af:      0xb224,
		bc:      0xb79b,
		de:      0x84f1,
		hl:      0xff7d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x414c,
		iy:      0xe798,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xb3, 0x13}},
			mock.Slice{Addr: 0xe74b, Values: []uint8{0xb3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb14",
		af:      0xabbb,
		bc:      0x451a,
		de:      0xfc65,
		hl:      0x14a1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0f4d,
		iy:      0xd93c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc4, 0x14}},
			mock.Slice{Addr: 0xd900, Values: []uint8{0x06}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb15",
		af:      0x2864,
		bc:      0x9532,
		de:      0x8631,
		hl:      0x751c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe327,
		iy:      0x2d7b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x17, 0x15}},
			mock.Slice{Addr: 0x2d92, Values: []uint8{0x12}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb16",
		af:      0x0c3c,
		bc:      0xdcd7,
		de:      0xadcc,
		hl:      0x196d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x87e2,
		iy:      0xf0b4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x23, 0x16}},
			mock.Slice{Addr: 0xf0d7, Values: []uint8{0x89}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb17",
		af:      0xaf5b,
		bc:      0xd016,
		de:      0x066e,
		hl:      0x6638,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5e92,
		iy:      0x2013,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x8a, 0x17}},
			mock.Slice{Addr: 0x1f9d, Values: []uint8{0xb8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb18",
		af:      0x23f3,
		bc:      0x4517,
		de:      0x16e0,
		hl:      0x6894,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb908,
		iy:      0x3216,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc0, 0x18}},
			mock.Slice{Addr: 0x31d6, Values: []uint8{0xfa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb19",
		af:      0x11ed,
		bc:      0xc2b8,
		de:      0xa9f3,
		hl:      0x2014,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6db0,
		iy:      0x4d2e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa2, 0x19}},
			mock.Slice{Addr: 0x4cd0, Values: []uint8{0x4b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb1a",
		af:      0xbc5c,
		bc:      0x6168,
		de:      0xe541,
		hl:      0xb630,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0207,
		iy:      0x40d3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x78, 0x1a}},
			mock.Slice{Addr: 0x414b, Values: []uint8{0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb1b",
		af:      0x7a28,
		bc:      0x1286,
		de:      0xfe50,
		hl:      0xc42d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe290,
		iy:      0x71b0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x16, 0x1b}},
			mock.Slice{Addr: 0x71c6, Values: []uint8{0xb8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb1c",
		af:      0x932b,
		bc:      0x097b,
		de:      0x6928,
		hl:      0x83a3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xff2d,
		iy:      0xdf62,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x86, 0x1c}},
			mock.Slice{Addr: 0xdee8, Values: []uint8{0x8f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb1d",
		af:      0x97b1,
		bc:      0x2b30,
		de:      0x2645,
		hl:      0x04ef,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x186a,
		iy:      0xd667,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x27, 0x1d}},
			mock.Slice{Addr: 0xd68e, Values: []uint8{0xb7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb1e",
		af:      0x2f39,
		bc:      0x2470,
		de:      0xb521,
		hl:      0x6ca3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1066,
		iy:      0xda38,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x3a, 0x1e}},
			mock.Slice{Addr: 0xda72, Values: []uint8{0x25}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb1f",
		af:      0x4cdd,
		bc:      0x49a3,
		de:      0xda18,
		hl:      0x3afd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa4f1,
		iy:      0x2095,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7b, 0x1f}},
			mock.Slice{Addr: 0x2110, Values: []uint8{0x04}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb20",
		af:      0x3d74,
		bc:      0x3a8f,
		de:      0x206f,
		hl:      0x8894,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xddab,
		iy:      0xda25,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7a, 0x20}},
			mock.Slice{Addr: 0xda9f, Values: []uint8{0x89}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb21",
		af:      0x1674,
		bc:      0x6025,
		de:      0x641a,
		hl:      0x6598,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x473b,
		iy:      0xde36,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7b, 0x21}},
			mock.Slice{Addr: 0xdeb1, Values: []uint8{0x23}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb22",
		af:      0xada9,
		bc:      0xefb2,
		de:      0x6f03,
		hl:      0xe732,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc11d,
		iy:      0x8926,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9a, 0x22}},
			mock.Slice{Addr: 0x88c0, Values: []uint8{0xd4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb23",
		af:      0x21e9,
		bc:      0xd678,
		de:      0xa71b,
		hl:      0x25d7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4ca8,
		iy:      0x5255,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf5, 0x23}},
			mock.Slice{Addr: 0x524a, Values: []uint8{0x65}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb24",
		af:      0x1c51,
		bc:      0xda3e,
		de:      0xcc7c,
		hl:      0xcb19,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x572c,
		iy:      0xaffe,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xb4, 0x24}},
			mock.Slice{Addr: 0xafb2, Values: []uint8{0x7e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb25",
		af:      0x954e,
		bc:      0x097c,
		de:      0xa341,
		hl:      0x89e0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x435d,
		iy:      0x23e9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa6, 0x25}},
			mock.Slice{Addr: 0x238f, Values: []uint8{0x26}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb26",
		af:      0x5844,
		bc:      0x0e19,
		de:      0xd277,
		hl:      0xbf7f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6504,
		iy:      0xd4e4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xbd, 0x26}},
			mock.Slice{Addr: 0xd4a1, Values: []uint8{0xbf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb27",
		af:      0x8e0d,
		bc:      0x8c06,
		de:      0x2c4c,
		hl:      0xd7c8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9239,
		iy:      0x8d42,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x59, 0x27}},
			mock.Slice{Addr: 0x8d9b, Values: []uint8{0xa7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb28",
		af:      0x4122,
		bc:      0xaf9b,
		de:      0x7745,
		hl:      0x76f5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa1bb,
		iy:      0xab43,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x83, 0x28}},
			mock.Slice{Addr: 0xaac6, Values: []uint8{0x5d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb29",
		af:      0x0b21,
		bc:      0xaffd,
		de:      0xfea6,
		hl:      0x9478,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x32bb,
		iy:      0x0343,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7d, 0x29}},
			mock.Slice{Addr: 0x03c0, Values: []uint8{0x84}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb2a",
		af:      0xf236,
		bc:      0x8c31,
		de:      0x5932,
		hl:      0x7feb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7db7,
		iy:      0xabe7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf9, 0x2a}},
			mock.Slice{Addr: 0xabe0, Values: []uint8{0xdd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb2b",
		af:      0x2450,
		bc:      0x6945,
		de:      0xdcfc,
		hl:      0xd643,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5be1,
		iy:      0x4a94,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x4b, 0x2b}},
			mock.Slice{Addr: 0x4adf, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb2c",
		af:      0x117f,
		bc:      0xb32b,
		de:      0xe530,
		hl:      0x255a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2416,
		iy:      0xccd1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe6, 0x2c}},
			mock.Slice{Addr: 0xccb7, Values: []uint8{0x3c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb2d",
		af:      0xd0c3,
		bc:      0x344b,
		de:      0x1bb0,
		hl:      0x3eab,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfe11,
		iy:      0xe4e6,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x5f, 0x2d}},
			mock.Slice{Addr: 0xe545, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb2e",
		af:      0xf4ee,
		bc:      0xb832,
		de:      0x4b7f,
		hl:      0xe2b7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9386,
		iy:      0x42fd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x06, 0x2e}},
			mock.Slice{Addr: 0x4303, Values: []uint8{0xad}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb2f",
		af:      0xff86,
		bc:      0xf2c2,
		de:      0x9f2f,
		hl:      0xc946,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5fe0,
		iy:      0x16b8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x29, 0x2f}},
			mock.Slice{Addr: 0x16e1, Values: []uint8{0x18}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb30",
		af:      0xacf6,
		bc:      0xe832,
		de:      0xf9ed,
		hl:      0xcabc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfabd,
		iy:      0xd646,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x1b, 0x30}},
			mock.Slice{Addr: 0xd661, Values: []uint8{0xa5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb31",
		af:      0x2b96,
		bc:      0x5134,
		de:      0x83a7,
		hl:      0x7eee,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7750,
		iy:      0xbfe0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf0, 0x31}},
			mock.Slice{Addr: 0xbfd0, Values: []uint8{0xf1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb32",
		af:      0xb2bc,
		bc:      0xa4b1,
		de:      0xb685,
		hl:      0xf66e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa9a1,
		iy:      0x5ade,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc5, 0x32}},
			mock.Slice{Addr: 0x5aa3, Values: []uint8{0x59}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb33",
		af:      0x9c6d,
		bc:      0x2c90,
		de:      0xd0a9,
		hl:      0x2be3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2691,
		iy:      0x1964,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7f, 0x33}},
			mock.Slice{Addr: 0x19e3, Values: []uint8{0xda}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb34",
		af:      0x6029,
		bc:      0xfbcd,
		de:      0x5348,
		hl:      0xf947,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5338,
		iy:      0x5696,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd2, 0x34}},
			mock.Slice{Addr: 0x5668, Values: []uint8{0xd4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb35",
		af:      0x96a9,
		bc:      0x21c6,
		de:      0x4cb6,
		hl:      0xb40b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x673a,
		iy:      0x00f8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x71, 0x35}},
			mock.Slice{Addr: 0x0169, Values: []uint8{0x0b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb36",
		af:      0xdc6f,
		bc:      0x0892,
		de:      0x3cc7,
		hl:      0x1494,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8598,
		iy:      0x1ade,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xda, 0x36}},
			mock.Slice{Addr: 0x1ab8, Values: []uint8{0x3c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb37",
		af:      0xd2b3,
		bc:      0x4524,
		de:      0x208f,
		hl:      0x076f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xad10,
		iy:      0xe7ec,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xcb, 0x37}},
			mock.Slice{Addr: 0xe7b7, Values: []uint8{0x9f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb38",
		af:      0x4f07,
		bc:      0x0050,
		de:      0x40c6,
		hl:      0x4fb7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf37e,
		iy:      0xd096,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x8e, 0x38}},
			mock.Slice{Addr: 0xd024, Values: []uint8{0x0d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb39",
		af:      0xbcc2,
		bc:      0xf5b5,
		de:      0x8dee,
		hl:      0xe514,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x48bc,
		iy:      0xf433,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7f, 0x39}},
			mock.Slice{Addr: 0xf4b2, Values: []uint8{0xf5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb3a",
		af:      0xd012,
		bc:      0x2ef5,
		de:      0x2910,
		hl:      0x9ca5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb155,
		iy:      0xcb03,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x1d, 0x3a}},
			mock.Slice{Addr: 0xcb20, Values: []uint8{0xa8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb3b",
		af:      0x503d,
		bc:      0xa85b,
		de:      0xcfbb,
		hl:      0xde8c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9c5b,
		iy:      0xd263,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x05, 0x3b}},
			mock.Slice{Addr: 0xd268, Values: []uint8{0xb2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb3c",
		af:      0x97f0,
		bc:      0x4456,
		de:      0x0b52,
		hl:      0xfdad,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6d2a,
		iy:      0xa80f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xae, 0x3c}},
			mock.Slice{Addr: 0xa7bd, Values: []uint8{0x96}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb3d",
		af:      0x7d44,
		bc:      0x9303,
		de:      0xe12b,
		hl:      0xbff6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4c0f,
		iy:      0xe52a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x13, 0x3d}},
			mock.Slice{Addr: 0xe53d, Values: []uint8{0xfb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb3e",
		af:      0x0d95,
		bc:      0x3e02,
		de:      0x8f74,
		hl:      0x0f82,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x85df,
		iy:      0xb2d1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x2e, 0x3e}},
			mock.Slice{Addr: 0xb2ff, Values: []uint8{0x50}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb3f",
		af:      0x89e3,
		bc:      0x12f6,
		de:      0x426c,
		hl:      0x52d4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd9f7,
		iy:      0xc1ac,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x21, 0x3f}},
			mock.Slice{Addr: 0xc1cd, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb40",
		af:      0x5408,
		bc:      0x2c34,
		de:      0x6784,
		hl:      0xb376,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8ff9,
		iy:      0x4195,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x3b, 0x40}},
			mock.Slice{Addr: 0x41d0, Values: []uint8{0x0d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb41",
		af:      0x8c35,
		bc:      0x5a58,
		de:      0xb71c,
		hl:      0x6777,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdeca,
		iy:      0x03cb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xcc, 0x41}},
			mock.Slice{Addr: 0x0397, Values: []uint8{0xe9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb42",
		af:      0x5535,
		bc:      0x9c29,
		de:      0x2feb,
		hl:      0x97ff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7f17,
		iy:      0x9f56,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x01, 0x42}},
			mock.Slice{Addr: 0x9f57, Values: []uint8{0xa8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb43",
		af:      0xb404,
		bc:      0xe58c,
		de:      0xe62e,
		hl:      0x2a32,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7130,
		iy:      0x1fd1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x08, 0x43}},
			mock.Slice{Addr: 0x1fd9, Values: []uint8{0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb44",
		af:      0xa954,
		bc:      0x68f4,
		de:      0x9fa4,
		hl:      0x7f66,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0209,
		iy:      0xf4f3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x03, 0x44}},
			mock.Slice{Addr: 0xf4f6, Values: []uint8{0x89}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb45",
		af:      0x73e5,
		bc:      0x8dde,
		de:      0x5e4f,
		hl:      0x84a7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4e24,
		iy:      0x93ed,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x8d, 0x45}},
			mock.Slice{Addr: 0x937a, Values: []uint8{0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb46",
		af:      0x0e5a,
		bc:      0xb1f9,
		de:      0x475f,
		hl:      0xebfc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7765,
		iy:      0x63b1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x8c, 0x46}},
			mock.Slice{Addr: 0x633d, Values: []uint8{0xfe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb47",
		af:      0x9b3d,
		bc:      0x7f38,
		de:      0x0753,
		hl:      0xd5e7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb9c3,
		iy:      0x6e0e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x96, 0x47}},
			mock.Slice{Addr: 0x6da4, Values: []uint8{0xd6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb48",
		af:      0x7d94,
		bc:      0x50a9,
		de:      0x2511,
		hl:      0x8f9f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb612,
		iy:      0xaba9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x44, 0x48}},
			mock.Slice{Addr: 0xabed, Values: []uint8{0xb0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb49",
		af:      0x691e,
		bc:      0x3a39,
		de:      0xb834,
		hl:      0x74b6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0eb7,
		iy:      0x3e21,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x4e, 0x49}},
			mock.Slice{Addr: 0x3e6f, Values: []uint8{0xa9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb4a",
		af:      0x31e3,
		bc:      0x68e0,
		de:      0xfe2f,
		hl:      0xa2c4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xac96,
		iy:      0xe7db,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x52, 0x4a}},
			mock.Slice{Addr: 0xe82d, Values: []uint8{0xda}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb4b",
		af:      0x09a1,
		bc:      0x2453,
		de:      0x9186,
		hl:      0xa32a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x71af,
		iy:      0x883f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xea, 0x4b}},
			mock.Slice{Addr: 0x8829, Values: []uint8{0x4e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb4c",
		af:      0x4a52,
		bc:      0x1e5b,
		de:      0xbe2e,
		hl:      0x3ee4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xaf79,
		iy:      0x7f22,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xee, 0x4c}},
			mock.Slice{Addr: 0x7f10, Values: []uint8{0x70}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb4d",
		af:      0x9f87,
		bc:      0x6c8f,
		de:      0x34f4,
		hl:      0x5a79,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd3cc,
		iy:      0xa770,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x29, 0x4d}},
			mock.Slice{Addr: 0xa799, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb4e",
		af:      0x30cb,
		bc:      0x5626,
		de:      0x52bc,
		hl:      0x5503,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x303b,
		iy:      0xe1c8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x20, 0x4e}},
			mock.Slice{Addr: 0xe1e8, Values: []uint8{0xaa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb4f",
		af:      0x6088,
		bc:      0xe079,
		de:      0x7152,
		hl:      0x671f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8c22,
		iy:      0x1cf8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9d, 0x4f}},
			mock.Slice{Addr: 0x1c95, Values: []uint8{0x18}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb50",
		af:      0x8cde,
		bc:      0x1409,
		de:      0x6d69,
		hl:      0xe5b2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4a0c,
		iy:      0xc75f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x6b, 0x50}},
			mock.Slice{Addr: 0xc7ca, Values: []uint8{0xfe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb51",
		af:      0x8f59,
		bc:      0x40cb,
		de:      0x9543,
		hl:      0x9b3a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1942,
		iy:      0x3495,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x86, 0x51}},
			mock.Slice{Addr: 0x341b, Values: []uint8{0x13}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb52",
		af:      0x8905,
		bc:      0x3e41,
		de:      0x7ab4,
		hl:      0x37f6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf82d,
		iy:      0x8b0d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe6, 0x52}},
			mock.Slice{Addr: 0x8af3, Values: []uint8{0x87}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb53",
		af:      0xefde,
		bc:      0xe345,
		de:      0x09a3,
		hl:      0xf0b2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc378,
		iy:      0x7ee1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd1, 0x53}},
			mock.Slice{Addr: 0x7eb2, Values: []uint8{0xe4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb54",
		af:      0x72a6,
		bc:      0xcb82,
		de:      0xd966,
		hl:      0x2fc6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3c00,
		iy:      0x5b6b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x08, 0x54}},
			mock.Slice{Addr: 0x5b73, Values: []uint8{0x07}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb55",
		af:      0x855c,
		bc:      0xc23b,
		de:      0x6aab,
		hl:      0x9b00,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfe93,
		iy:      0xb4b2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x54, 0x55}},
			mock.Slice{Addr: 0xb506, Values: []uint8{0x46}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb56",
		af:      0xf5ad,
		bc:      0xf9f6,
		de:      0x1e8c,
		hl:      0x9e08,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x716a,
		iy:      0x6932,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x6f, 0x56}},
			mock.Slice{Addr: 0x69a1, Values: []uint8{0xdf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb57",
		af:      0x37d7,
		bc:      0xb7dc,
		de:      0xbe1c,
		hl:      0x38ea,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5e82,
		iy:      0xa3bb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x3c, 0x57}},
			mock.Slice{Addr: 0xa3f7, Values: []uint8{0x6c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb58",
		af:      0x752c,
		bc:      0x7296,
		de:      0x3ea5,
		hl:      0x1143,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd7cc,
		iy:      0x1e94,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x4e, 0x58}},
			mock.Slice{Addr: 0x1ee2, Values: []uint8{0xf6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb59",
		af:      0x8056,
		bc:      0xbf2a,
		de:      0x1809,
		hl:      0xed31,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfe2b,
		iy:      0xfad3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x2e, 0x59}},
			mock.Slice{Addr: 0xfb01, Values: []uint8{0x6f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb5a",
		af:      0xcc74,
		bc:      0xa108,
		de:      0x65d4,
		hl:      0x6f66,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0008,
		iy:      0x7bb8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x88, 0x5a}},
			mock.Slice{Addr: 0x7b40, Values: []uint8{0x6e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb5b",
		af:      0x5cf1,
		bc:      0xb3bd,
		de:      0x25bd,
		hl:      0x98cf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2ba1,
		iy:      0x315c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe7, 0x5b}},
			mock.Slice{Addr: 0x3143, Values: []uint8{0xb1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb5c",
		af:      0xb3e0,
		bc:      0xd43d,
		de:      0xd9c0,
		hl:      0xb04d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x21a9,
		iy:      0x543e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x74, 0x5c}},
			mock.Slice{Addr: 0x54b2, Values: []uint8{0xe3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb5d",
		af:      0x9f49,
		bc:      0x43dd,
		de:      0xccb3,
		hl:      0x085a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf130,
		iy:      0x3b84,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xdc, 0x5d}},
			mock.Slice{Addr: 0x3b60, Values: []uint8{0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb5e",
		af:      0x6f89,
		bc:      0xeff5,
		de:      0x993b,
		hl:      0x22b5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0f30,
		iy:      0xe165,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe2, 0x5e}},
			mock.Slice{Addr: 0xe147, Values: []uint8{0x17}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb5f",
		af:      0xd72a,
		bc:      0xa57a,
		de:      0xaca6,
		hl:      0x667e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5c33,
		iy:      0xf81b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xab, 0x5f}},
			mock.Slice{Addr: 0xf7c6, Values: []uint8{0xe2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb60",
		af:      0x15e9,
		bc:      0x8d30,
		de:      0x43f4,
		hl:      0xc65e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1e34,
		iy:      0x8c44,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x85, 0x60}},
			mock.Slice{Addr: 0x8bc9, Values: []uint8{0xb9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb61",
		af:      0x7bd1,
		bc:      0xd421,
		de:      0x5570,
		hl:      0xcb85,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x32ec,
		iy:      0x92e4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xbe, 0x61}},
			mock.Slice{Addr: 0x92a2, Values: []uint8{0x28}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb62",
		af:      0xba2f,
		bc:      0x4fbb,
		de:      0x67a7,
		hl:      0xc5db,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x470b,
		iy:      0x7eb1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9d, 0x62}},
			mock.Slice{Addr: 0x7e4e, Values: []uint8{0x1a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb63",
		af:      0xc0a1,
		bc:      0x2cc2,
		de:      0xce12,
		hl:      0xe77c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x71c5,
		iy:      0x1713,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf4, 0x63}},
			mock.Slice{Addr: 0x1707, Values: []uint8{0x3b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb64",
		af:      0x0c1f,
		bc:      0x7847,
		de:      0x2494,
		hl:      0x71eb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x315c,
		iy:      0xb336,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x35, 0x64}},
			mock.Slice{Addr: 0xb36b, Values: []uint8{0x8c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb65",
		af:      0x5245,
		bc:      0xa82d,
		de:      0x1112,
		hl:      0x8f09,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x672a,
		iy:      0x89f4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x37, 0x65}},
			mock.Slice{Addr: 0x8a2b, Values: []uint8{0x08}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb66",
		af:      0x583f,
		bc:      0xc13e,
		de:      0xb136,
		hl:      0x6bc5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3ef9,
		iy:      0x6948,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9d, 0x66}},
			mock.Slice{Addr: 0x68e5, Values: []uint8{0x90}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb67",
		af:      0x31b6,
		bc:      0x0f7d,
		de:      0x48b5,
		hl:      0xcc5f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2103,
		iy:      0x6572,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xcb, 0x67}},
			mock.Slice{Addr: 0x653d, Values: []uint8{0x15}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb68",
		af:      0xe330,
		bc:      0x39fb,
		de:      0xa03a,
		hl:      0x59bc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe04a,
		iy:      0x03be,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xca, 0x68}},
			mock.Slice{Addr: 0x0388, Values: []uint8{0x83}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb69",
		af:      0x1896,
		bc:      0x5bc2,
		de:      0xd4d9,
		hl:      0x4e8a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3716,
		iy:      0xa603,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe2, 0x69}},
			mock.Slice{Addr: 0xa5e5, Values: []uint8{0x01}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb6a",
		af:      0x5bc9,
		bc:      0x0099,
		de:      0x34f8,
		hl:      0x3e96,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf251,
		iy:      0x93be,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xae, 0x6a}},
			mock.Slice{Addr: 0x936c, Values: []uint8{0x33}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb6b",
		af:      0xbbe5,
		bc:      0x9e6c,
		de:      0xabd1,
		hl:      0x515f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x73db,
		iy:      0xaa2f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x1f, 0x6b}},
			mock.Slice{Addr: 0xaa4e, Values: []uint8{0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb6c",
		af:      0x144b,
		bc:      0x3af2,
		de:      0x8f80,
		hl:      0x7be5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc379,
		iy:      0x86ba,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0d, 0x6c}},
			mock.Slice{Addr: 0x86c7, Values: []uint8{0x25}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb6d",
		af:      0x6392,
		bc:      0xd077,
		de:      0x668d,
		hl:      0x6e4a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb0a8,
		iy:      0x62c8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf0, 0x6d}},
			mock.Slice{Addr: 0x62b8, Values: []uint8{0xe3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb6e",
		af:      0x2da0,
		bc:      0xf872,
		de:      0x692d,
		hl:      0x92c4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x36b5,
		iy:      0x4210,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x93, 0x6e}},
			mock.Slice{Addr: 0x41a3, Values: []uint8{0x1e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb6f",
		af:      0xdf7b,
		bc:      0xc7aa,
		de:      0x9002,
		hl:      0x86b8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1347,
		iy:      0x004e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x20, 0x6f}},
			mock.Slice{Addr: 0x006e, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb70",
		af:      0x6ea9,
		bc:      0x018d,
		de:      0x5075,
		hl:      0xcf4e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcd2b,
		iy:      0x3e68,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd9, 0x70}},
			mock.Slice{Addr: 0x3e41, Values: []uint8{0xc9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb71",
		af:      0x1b48,
		bc:      0xe3af,
		de:      0x94d5,
		hl:      0x0996,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcad5,
		iy:      0x999a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x27, 0x71}},
			mock.Slice{Addr: 0x99c1, Values: []uint8{0x3e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb72",
		af:      0xe83b,
		bc:      0x26b1,
		de:      0x8608,
		hl:      0xf3cb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6323,
		iy:      0xfd31,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x98, 0x72}},
			mock.Slice{Addr: 0xfcc9, Values: []uint8{0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb73",
		af:      0x101b,
		bc:      0x446c,
		de:      0xc2f9,
		hl:      0xb9b1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0820,
		iy:      0xf5d8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7a, 0x73}},
			mock.Slice{Addr: 0xf652, Values: []uint8{0x31}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb74",
		af:      0x6847,
		bc:      0x38c2,
		de:      0x0ea4,
		hl:      0x0825,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd255,
		iy:      0x5e4a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x4b, 0x74}},
			mock.Slice{Addr: 0x5e95, Values: []uint8{0xfe}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb75",
		af:      0x56f2,
		bc:      0xc034,
		de:      0x6e11,
		hl:      0xd35e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe702,
		iy:      0x60be,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x57, 0x75}},
			mock.Slice{Addr: 0x6115, Values: []uint8{0x21}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb76",
		af:      0x7375,
		bc:      0xcaff,
		de:      0xdd80,
		hl:      0xc8ed,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7e39,
		iy:      0x6623,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x53, 0x76}},
			mock.Slice{Addr: 0x6676, Values: []uint8{0x3a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb77",
		af:      0xab10,
		bc:      0x983e,
		de:      0x0bdc,
		hl:      0x3b46,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xae51,
		iy:      0x8841,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x02, 0x77}},
			mock.Slice{Addr: 0x8843, Values: []uint8{0xd8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb78",
		af:      0x2765,
		bc:      0xce2f,
		de:      0x4824,
		hl:      0x6930,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xae69,
		iy:      0xfecb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7d, 0x78}},
			mock.Slice{Addr: 0xff48, Values: []uint8{0xec}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb79",
		af:      0xb428,
		bc:      0x6355,
		de:      0x7896,
		hl:      0x8a7c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9090,
		iy:      0x1cae,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x23, 0x79}},
			mock.Slice{Addr: 0x1cd1, Values: []uint8{0x87}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb7a",
		af:      0x59f4,
		bc:      0xca21,
		de:      0x1482,
		hl:      0x3fae,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc6c9,
		iy:      0xd923,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x42, 0x7a}},
			mock.Slice{Addr: 0xd965, Values: []uint8{0xb3}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb7b",
		af:      0x6314,
		bc:      0x0240,
		de:      0x5efa,
		hl:      0x5e7b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3e50,
		iy:      0x0a83,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x17, 0x7b}},
			mock.Slice{Addr: 0x0a9a, Values: []uint8{0xbd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb7c",
		af:      0x22a6,
		bc:      0xaff4,
		de:      0xb89b,
		hl:      0x4dca,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0ac2,
		iy:      0xd371,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf1, 0x7c}},
			mock.Slice{Addr: 0xd362, Values: []uint8{0x1b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb7d",
		af:      0x1c95,
		bc:      0xd615,
		de:      0x825a,
		hl:      0x5e64,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x32fb,
		iy:      0xac3b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9f, 0x7d}},
			mock.Slice{Addr: 0xabda, Values: []uint8{0x8a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb7e",
		af:      0x503c,
		bc:      0x8dfe,
		de:      0x1019,
		hl:      0x6778,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf7df,
		iy:      0x9484,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x40, 0x7e}},
			mock.Slice{Addr: 0x94c4, Values: []uint8{0x9e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb7f",
		af:      0x1b07,
		bc:      0x9ec3,
		de:      0x14be,
		hl:      0x5ebe,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1178,
		iy:      0xce69,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa2, 0x7f}},
			mock.Slice{Addr: 0xce0b, Values: []uint8{0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb80",
		af:      0xe196,
		bc:      0x72ea,
		de:      0x507e,
		hl:      0x6457,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xab75,
		iy:      0x920d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x8b, 0x80}},
			mock.Slice{Addr: 0x9198, Values: []uint8{0xa9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb81",
		af:      0x3d3d,
		bc:      0xb255,
		de:      0x8759,
		hl:      0x0cb0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe078,
		iy:      0x82a5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x55, 0x81}},
			mock.Slice{Addr: 0x82fa, Values: []uint8{0xfa}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb82",
		af:      0x4e10,
		bc:      0x5d8d,
		de:      0x27a0,
		hl:      0xffff,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xee0a,
		iy:      0x5dd8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9c, 0x82}},
			mock.Slice{Addr: 0x5d74, Values: []uint8{0x9d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb83",
		af:      0x3c7f,
		bc:      0xfd81,
		de:      0x47fb,
		hl:      0x9f12,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcbf9,
		iy:      0x374a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x28, 0x83}},
			mock.Slice{Addr: 0x3772, Values: []uint8{0xd5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb84",
		af:      0x6872,
		bc:      0x81b1,
		de:      0x1e7a,
		hl:      0xe37e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9b4c,
		iy:      0xf1c3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xaa, 0x84}},
			mock.Slice{Addr: 0xf16d, Values: []uint8{0xea}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb85",
		af:      0x25b3,
		bc:      0x5694,
		de:      0x57cd,
		hl:      0xf34d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8ed2,
		iy:      0x0433,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x6c, 0x85}},
			mock.Slice{Addr: 0x049f, Values: []uint8{0xe0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb86",
		af:      0x152b,
		bc:      0x8ce1,
		de:      0x818d,
		hl:      0x40f2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9b7a,
		iy:      0x2a50,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7e, 0x86}},
			mock.Slice{Addr: 0x2ace, Values: []uint8{0x36}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb87",
		af:      0xfe1d,
		bc:      0x5353,
		de:      0x618d,
		hl:      0x3266,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1a53,
		iy:      0x246a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x59, 0x87}},
			mock.Slice{Addr: 0x24c3, Values: []uint8{0x65}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb88",
		af:      0x7d14,
		bc:      0xa0ec,
		de:      0x1e47,
		hl:      0x76e1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3871,
		iy:      0xc60d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd4, 0x88}},
			mock.Slice{Addr: 0xc5e1, Values: []uint8{0xd6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb89",
		af:      0x86c3,
		bc:      0x50a6,
		de:      0x8592,
		hl:      0xd6ca,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x947b,
		iy:      0x0a01,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc3, 0x89}},
			mock.Slice{Addr: 0x09c4, Values: []uint8{0xb0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb8a",
		af:      0x599c,
		bc:      0x961a,
		de:      0x55f9,
		hl:      0x8470,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd2a5,
		iy:      0xd4d2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf9, 0x8a}},
			mock.Slice{Addr: 0xd4cb, Values: []uint8{0xd8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb8b",
		af:      0x2715,
		bc:      0xa209,
		de:      0xab47,
		hl:      0x3eac,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf352,
		iy:      0xc71e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xed, 0x8b}},
			mock.Slice{Addr: 0xc70b, Values: []uint8{0xdc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb8c",
		af:      0x2818,
		bc:      0x4259,
		de:      0xa9b0,
		hl:      0xe7a0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6471,
		iy:      0xa202,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x97, 0x8c}},
			mock.Slice{Addr: 0xa199, Values: []uint8{0x67}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb8d",
		af:      0x14e3,
		bc:      0xc330,
		de:      0x9aa2,
		hl:      0x8418,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0d4f,
		iy:      0x5669,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc9, 0x8d}},
			mock.Slice{Addr: 0x5632, Values: []uint8{0x9a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb8e",
		af:      0xcb79,
		bc:      0x0fff,
		de:      0xb244,
		hl:      0xc902,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6246,
		iy:      0x4c81,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc2, 0x8e}},
			mock.Slice{Addr: 0x4c43, Values: []uint8{0x7f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb8f",
		af:      0x66b4,
		bc:      0x5fbb,
		de:      0x6c9b,
		hl:      0xd0e3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xac5a,
		iy:      0x6b51,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd4, 0x8f}},
			mock.Slice{Addr: 0x6b25, Values: []uint8{0x59}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb90",
		af:      0x1305,
		bc:      0x1ce1,
		de:      0xd627,
		hl:      0x7402,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb470,
		iy:      0xd7f5,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xfd, 0x90}},
			mock.Slice{Addr: 0xd7f2, Values: []uint8{0x70}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb91",
		af:      0x10df,
		bc:      0xc48f,
		de:      0x0213,
		hl:      0xfc7e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbfab,
		iy:      0x47d2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xbf, 0x91}},
			mock.Slice{Addr: 0x4791, Values: []uint8{0x0e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb92",
		af:      0x6a11,
		bc:      0xf89e,
		de:      0xf49d,
		hl:      0xc115,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbc5d,
		iy:      0x313a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0b, 0x92}},
			mock.Slice{Addr: 0x3145, Values: []uint8{0xf6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb93",
		af:      0x61e5,
		bc:      0xcc2c,
		de:      0x959a,
		hl:      0xb52b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfa64,
		iy:      0x2940,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x52, 0x93}},
			mock.Slice{Addr: 0x2992, Values: []uint8{0x38}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb94",
		af:      0x31b4,
		bc:      0x3e5a,
		de:      0xfb3d,
		hl:      0xab83,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa801,
		iy:      0xfe1c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x95, 0x94}},
			mock.Slice{Addr: 0xfdb1, Values: []uint8{0x48}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb95",
		af:      0x337e,
		bc:      0x63a7,
		de:      0x2918,
		hl:      0xed6b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb12c,
		iy:      0xe776,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x90, 0x95}},
			mock.Slice{Addr: 0xe706, Values: []uint8{0xeb}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb96",
		af:      0x5d99,
		bc:      0xd9ec,
		de:      0xb6d0,
		hl:      0x5ed5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5d9d,
		iy:      0xe6cf,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9e, 0x96}},
			mock.Slice{Addr: 0xe66d, Values: []uint8{0xfc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb97",
		af:      0xccb6,
		bc:      0x8406,
		de:      0x72c6,
		hl:      0x1ba7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6dca,
		iy:      0x187f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x64, 0x97}},
			mock.Slice{Addr: 0x18e3, Values: []uint8{0x9d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb98",
		af:      0x0495,
		bc:      0x312f,
		de:      0x8000,
		hl:      0xb749,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe9cb,
		iy:      0x43b8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xda, 0x98}},
			mock.Slice{Addr: 0x4392, Values: []uint8{0x15}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb99",
		af:      0x2824,
		bc:      0xa485,
		de:      0xa30b,
		hl:      0xb286,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x10b0,
		iy:      0xd86c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x78, 0x99}},
			mock.Slice{Addr: 0xd8e4, Values: []uint8{0xb5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb9a",
		af:      0xb0cc,
		bc:      0xc40c,
		de:      0xdc1a,
		hl:      0x014a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2ff9,
		iy:      0xd717,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9c, 0x9a}},
			mock.Slice{Addr: 0xd6b3, Values: []uint8{0x9d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb9b",
		af:      0xd092,
		bc:      0xa6c2,
		de:      0x7900,
		hl:      0x5448,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfab0,
		iy:      0xcb1e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x83, 0x9b}},
			mock.Slice{Addr: 0xcaa1, Values: []uint8{0x95}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb9c",
		af:      0xb58d,
		bc:      0x1ed1,
		de:      0xe93b,
		hl:      0x9e0c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5605,
		iy:      0x03b3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x1e, 0x9c}},
			mock.Slice{Addr: 0x03d1, Values: []uint8{0x78}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb9d",
		af:      0xc7e9,
		bc:      0x18d3,
		de:      0x8eed,
		hl:      0xbd7d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9a7f,
		iy:      0xc087,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe6, 0x9d}},
			mock.Slice{Addr: 0xc06d, Values: []uint8{0x53}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb9e",
		af:      0x81c7,
		bc:      0x71df,
		de:      0x45d5,
		hl:      0x0ca7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x648f,
		iy:      0x41bd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xeb, 0x9e}},
			mock.Slice{Addr: 0x41a8, Values: []uint8{0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcb9f",
		af:      0xebf5,
		bc:      0xdc9f,
		de:      0xd490,
		hl:      0x15be,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0e12,
		iy:      0x9d49,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x50, 0x9f}},
			mock.Slice{Addr: 0x9d99, Values: []uint8{0x89}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba0",
		af:      0x8ccb,
		bc:      0x0057,
		de:      0xbc19,
		hl:      0xe543,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8c5d,
		iy:      0xd68d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x76, 0xa0}},
			mock.Slice{Addr: 0xd703, Values: []uint8{0xd4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba1",
		af:      0xeee6,
		bc:      0x6da4,
		de:      0x3a20,
		hl:      0x8bba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1de7,
		iy:      0x66c8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x31, 0xa1}},
			mock.Slice{Addr: 0x66f9, Values: []uint8{0xec}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba2",
		af:      0x3f89,
		bc:      0x5120,
		de:      0x0bd1,
		hl:      0xe669,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2993,
		iy:      0x04bf,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0e, 0xa2}},
			mock.Slice{Addr: 0x04cd, Values: []uint8{0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba3",
		af:      0x4439,
		bc:      0x6b8b,
		de:      0x6178,
		hl:      0x1246,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4cdb,
		iy:      0xad77,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x05, 0xa3}},
			mock.Slice{Addr: 0xad7c, Values: []uint8{0x59}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba4",
		af:      0x3385,
		bc:      0x261e,
		de:      0xa487,
		hl:      0xb3bd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4b8f,
		iy:      0xc0cd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x66, 0xa4}},
			mock.Slice{Addr: 0xc133, Values: []uint8{0xc5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba5",
		af:      0x6e70,
		bc:      0xb7ed,
		de:      0x22cd,
		hl:      0xaedc,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x46de,
		iy:      0xf1a1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa0, 0xa5}},
			mock.Slice{Addr: 0xf141, Values: []uint8{0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba6",
		af:      0x814b,
		bc:      0x6408,
		de:      0x3dcb,
		hl:      0x971f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5716,
		iy:      0x93f3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x76, 0xa6}},
			mock.Slice{Addr: 0x9469, Values: []uint8{0xbc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba7",
		af:      0xa4c2,
		bc:      0x679e,
		de:      0xc313,
		hl:      0x61df,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x67e6,
		iy:      0x79c4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x66, 0xa7}},
			mock.Slice{Addr: 0x7a2a, Values: []uint8{0x2e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba8",
		af:      0x537c,
		bc:      0x1fed,
		de:      0x6cbb,
		hl:      0xbd26,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc638,
		iy:      0x0d46,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa9, 0xa8}},
			mock.Slice{Addr: 0x0cef, Values: []uint8{0xb7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcba9",
		af:      0xba5a,
		bc:      0x3076,
		de:      0xcdd7,
		hl:      0x298d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x59ab,
		iy:      0x0f54,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x2b, 0xa9}},
			mock.Slice{Addr: 0x0f7f, Values: []uint8{0x8f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbaa",
		af:      0x406a,
		bc:      0x2ed6,
		de:      0xfa8c,
		hl:      0xc633,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x87cb,
		iy:      0xb3d1,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0b, 0xaa}},
			mock.Slice{Addr: 0xb3dc, Values: []uint8{0x3a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbab",
		af:      0xda61,
		bc:      0x0521,
		de:      0xa123,
		hl:      0xc7fa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb71a,
		iy:      0x8ece,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa9, 0xab}},
			mock.Slice{Addr: 0x8e77, Values: []uint8{0x1f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbac",
		af:      0x34a3,
		bc:      0x81ce,
		de:      0x07d6,
		hl:      0xf3a4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x430b,
		iy:      0x0525,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x23, 0xac}},
			mock.Slice{Addr: 0x0548, Values: []uint8{0x9c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbad",
		af:      0x5010,
		bc:      0x918e,
		de:      0xddbc,
		hl:      0x4f89,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x88c5,
		iy:      0x948f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x4e, 0xad}},
			mock.Slice{Addr: 0x94dd, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbae",
		af:      0xec0d,
		bc:      0xb57e,
		de:      0x18c6,
		hl:      0x7b01,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbac6,
		iy:      0x0c1d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0c, 0xae}},
			mock.Slice{Addr: 0x0c29, Values: []uint8{0xa9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbaf",
		af:      0xb322,
		bc:      0x6731,
		de:      0xdaad,
		hl:      0x8d38,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xdd8f,
		iy:      0x26eb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0d, 0xaf}},
			mock.Slice{Addr: 0x26f8, Values: []uint8{0x44}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb0",
		af:      0xb984,
		bc:      0x796c,
		de:      0x44b1,
		hl:      0xfef9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4069,
		iy:      0xa0cb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x5a, 0xb0}},
			mock.Slice{Addr: 0xa125, Values: []uint8{0x76}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb1",
		af:      0x59c3,
		bc:      0xab13,
		de:      0x42ee,
		hl:      0xb764,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8f7f,
		iy:      0xf398,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x82, 0xb1}},
			mock.Slice{Addr: 0xf31a, Values: []uint8{0x79}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb2",
		af:      0xf310,
		bc:      0xceec,
		de:      0xbbfb,
		hl:      0x3569,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4a6f,
		iy:      0x33f9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x23, 0xb2}},
			mock.Slice{Addr: 0x341c, Values: []uint8{0x7b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb3",
		af:      0x9c05,
		bc:      0x0f92,
		de:      0xbd3b,
		hl:      0x553d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc75e,
		iy:      0x51d2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x6c, 0xb3}},
			mock.Slice{Addr: 0x523e, Values: []uint8{0x37}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb4",
		af:      0x3e55,
		bc:      0x1338,
		de:      0x638d,
		hl:      0x353c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x44ad,
		iy:      0x4d17,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc5, 0xb4}},
			mock.Slice{Addr: 0x4cdc, Values: []uint8{0xe9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb5",
		af:      0x2f3a,
		bc:      0xb709,
		de:      0x4167,
		hl:      0x57be,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb543,
		iy:      0x8edd,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x50, 0xb5}},
			mock.Slice{Addr: 0x8f2d, Values: []uint8{0x0f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb6",
		af:      0xa887,
		bc:      0x519b,
		de:      0xc91b,
		hl:      0xcc91,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa416,
		iy:      0x1e16,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x3a, 0xb6}},
			mock.Slice{Addr: 0x1e50, Values: []uint8{0x13}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb7",
		af:      0x1335,
		bc:      0xa599,
		de:      0x9fbf,
		hl:      0xc111,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8bc5,
		iy:      0x00a9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc0, 0xb7}},
			mock.Slice{Addr: 0x0069, Values: []uint8{0x38}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb8",
		af:      0xd146,
		bc:      0x1138,
		de:      0x1a45,
		hl:      0x8259,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6a03,
		iy:      0xd087,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x31, 0xb8}},
			mock.Slice{Addr: 0xd0b8, Values: []uint8{0x17}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbb9",
		af:      0x757b,
		bc:      0x0b9e,
		de:      0x767b,
		hl:      0x2ad1,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1498,
		iy:      0xb84e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x3b, 0xb9}},
			mock.Slice{Addr: 0xb889, Values: []uint8{0xb4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbba",
		af:      0x43ef,
		bc:      0x1c58,
		de:      0xdda3,
		hl:      0x4519,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xb67b,
		iy:      0x383f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x38, 0xba}},
			mock.Slice{Addr: 0x3877, Values: []uint8{0xd6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbbb",
		af:      0xdccb,
		bc:      0x7ab3,
		de:      0x7615,
		hl:      0x4161,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2942,
		iy:      0xe2fe,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x07, 0xbb}},
			mock.Slice{Addr: 0xe305, Values: []uint8{0x6e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbbc",
		af:      0x0e07,
		bc:      0x34f5,
		de:      0x0995,
		hl:      0xcc42,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9d42,
		iy:      0xaf0c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf8, 0xbc}},
			mock.Slice{Addr: 0xaf04, Values: []uint8{0xcf}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbbd",
		af:      0x30ef,
		bc:      0xe60c,
		de:      0x9bf0,
		hl:      0xa1bf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xbd1c,
		iy:      0xdf0d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xaa, 0xbd}},
			mock.Slice{Addr: 0xdeb7, Values: []uint8{0x8d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbbe",
		af:      0x1133,
		bc:      0xbef6,
		de:      0x5059,
		hl:      0x1089,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd558,
		iy:      0x3d0f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc8, 0xbe}},
			mock.Slice{Addr: 0x3cd7, Values: []uint8{0xa1}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbbf",
		af:      0x83d6,
		bc:      0xc893,
		de:      0x8db8,
		hl:      0x716b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0956,
		iy:      0xbde7,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xfd, 0xbf}},
			mock.Slice{Addr: 0xbde4, Values: []uint8{0xac}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc0",
		af:      0x3666,
		bc:      0x676c,
		de:      0x35e5,
		hl:      0xdb0a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xea93,
		iy:      0x2b31,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x0a, 0xc0}},
			mock.Slice{Addr: 0x2b3b, Values: []uint8{0xec}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc1",
		af:      0x3902,
		bc:      0xd498,
		de:      0xaf62,
		hl:      0x9821,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x48b8,
		iy:      0xbd67,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x87, 0xc1}},
			mock.Slice{Addr: 0xbcee, Values: []uint8{0xee}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc2",
		af:      0xad26,
		bc:      0x5a6d,
		de:      0x6762,
		hl:      0x16c9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x495a,
		iy:      0x5b2c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x8d, 0xc2}},
			mock.Slice{Addr: 0x5ab9, Values: []uint8{0xc2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc3",
		af:      0x3e6c,
		bc:      0x9a74,
		de:      0xa2ee,
		hl:      0x9838,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xeafa,
		iy:      0xe666,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x5a, 0xc3}},
			mock.Slice{Addr: 0xe6c0, Values: []uint8{0x4f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc4",
		af:      0xbf68,
		bc:      0xd00b,
		de:      0x5283,
		hl:      0x51c2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x517c,
		iy:      0x5d10,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x89, 0xc4}},
			mock.Slice{Addr: 0x5c99, Values: []uint8{0x61}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc5",
		af:      0x127b,
		bc:      0xdb6a,
		de:      0x00b9,
		hl:      0x5138,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x98f6,
		iy:      0x02bb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa9, 0xc5}},
			mock.Slice{Addr: 0x0264, Values: []uint8{0xcd}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc6",
		af:      0x35da,
		bc:      0x98c2,
		de:      0x3f57,
		hl:      0x44a4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2771,
		iy:      0x76c4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xee, 0xc6}},
			mock.Slice{Addr: 0x76b2, Values: []uint8{0x82}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc7",
		af:      0x763f,
		bc:      0xb86f,
		de:      0x12d3,
		hl:      0x7e2d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd870,
		iy:      0xf30b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9e, 0xc7}},
			mock.Slice{Addr: 0xf2a9, Values: []uint8{0xd7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc8",
		af:      0x1f81,
		bc:      0xc7c0,
		de:      0x85da,
		hl:      0x3cdd,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd854,
		iy:      0xc412,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x10, 0xc8}},
			mock.Slice{Addr: 0xc422, Values: []uint8{0xe9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbc9",
		af:      0xed19,
		bc:      0x3f88,
		de:      0x1370,
		hl:      0xe084,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4fdd,
		iy:      0x8b42,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x61, 0xc9}},
			mock.Slice{Addr: 0x8ba3, Values: []uint8{0xb7}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbca",
		af:      0xc7e5,
		bc:      0x233b,
		de:      0x2312,
		hl:      0xf7f9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe417,
		iy:      0x5190,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x1a, 0xca}},
			mock.Slice{Addr: 0x51aa, Values: []uint8{0x90}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbcb",
		af:      0xbdba,
		bc:      0xa964,
		de:      0xea38,
		hl:      0x9422,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfca3,
		iy:      0x9a72,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x5e, 0xcb}},
			mock.Slice{Addr: 0x9ad0, Values: []uint8{0x70}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbcc",
		af:      0x0f4f,
		bc:      0x0261,
		de:      0x21b0,
		hl:      0x2097,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x575d,
		iy:      0x14f9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x2d, 0xcc}},
			mock.Slice{Addr: 0x1526, Values: []uint8{0x4e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbcd",
		af:      0x1b79,
		bc:      0x8f9f,
		de:      0x31bf,
		hl:      0x9ca6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7ecb,
		iy:      0xbbe9,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xa1, 0xcd}},
			mock.Slice{Addr: 0xbb8a, Values: []uint8{0x66}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbce",
		af:      0x8e13,
		bc:      0x968e,
		de:      0x1784,
		hl:      0x0a0a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1e87,
		iy:      0xb8a2,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x36, 0xce}},
			mock.Slice{Addr: 0xb8d8, Values: []uint8{0x45}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbcf",
		af:      0x8d0a,
		bc:      0xa073,
		de:      0xc4ba,
		hl:      0x5b69,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3b47,
		iy:      0xc29c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x70, 0xcf}},
			mock.Slice{Addr: 0xc30c, Values: []uint8{0x7a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd0",
		af:      0xe2bb,
		bc:      0x8635,
		de:      0x650c,
		hl:      0x689a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1294,
		iy:      0x3beb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xbc, 0xd0}},
			mock.Slice{Addr: 0x3ba7, Values: []uint8{0x20}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd1",
		af:      0x5df8,
		bc:      0xf701,
		de:      0x9494,
		hl:      0x4967,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xad00,
		iy:      0x8c65,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x11, 0xd1}},
			mock.Slice{Addr: 0x8c76, Values: []uint8{0xb9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd2",
		af:      0x9876,
		bc:      0x4bd9,
		de:      0x3148,
		hl:      0x665a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7eac,
		iy:      0xc051,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xfb, 0xd2}},
			mock.Slice{Addr: 0xc04c, Values: []uint8{0x51}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd3",
		af:      0x8f90,
		bc:      0xbacd,
		de:      0xe87a,
		hl:      0x538f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfe5a,
		iy:      0x0a87,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x3e, 0xd3}},
			mock.Slice{Addr: 0x0ac5, Values: []uint8{0xe0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd4",
		af:      0x15e2,
		bc:      0x1820,
		de:      0x5588,
		hl:      0xe67f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x7193,
		iy:      0x9478,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x36, 0xd4}},
			mock.Slice{Addr: 0x94ae, Values: []uint8{0x7d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd5",
		af:      0x1409,
		bc:      0x6535,
		de:      0xc371,
		hl:      0xabe2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2e10,
		iy:      0x8608,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x48, 0xd5}},
			mock.Slice{Addr: 0x8650, Values: []uint8{0x98}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd6",
		af:      0x7801,
		bc:      0x78b6,
		de:      0xd191,
		hl:      0x054a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2065,
		iy:      0x6aa3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xc9, 0xd6}},
			mock.Slice{Addr: 0x6a6c, Values: []uint8{0x7c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd7",
		af:      0x1b6a,
		bc:      0x266e,
		de:      0x387f,
		hl:      0x7fcb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1941,
		iy:      0x36ab,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xbe, 0xd7}},
			mock.Slice{Addr: 0x3669, Values: []uint8{0x95}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd8",
		af:      0x7b1b,
		bc:      0xa191,
		de:      0xefee,
		hl:      0x55b9,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf789,
		iy:      0x43f8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xbc, 0xd8}},
			mock.Slice{Addr: 0x43b4, Values: []uint8{0xd8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbd9",
		af:      0x0faf,
		bc:      0x4eda,
		de:      0xc556,
		hl:      0x6ed3,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x3fc3,
		iy:      0x0a66,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x16, 0xd9}},
			mock.Slice{Addr: 0x0a7c, Values: []uint8{0xf4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbda",
		af:      0x9ea1,
		bc:      0x8186,
		de:      0xc045,
		hl:      0xd6e0,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x34d3,
		iy:      0xd0f0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe8, 0xda}},
			mock.Slice{Addr: 0xd0d8, Values: []uint8{0x6b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbdb",
		af:      0x5ee0,
		bc:      0xbdea,
		de:      0xd00e,
		hl:      0x513f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x690a,
		iy:      0x8c29,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x7a, 0xdb}},
			mock.Slice{Addr: 0x8ca3, Values: []uint8{0x15}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbdc",
		af:      0x5cfa,
		bc:      0x2e2b,
		de:      0x1d17,
		hl:      0xdbf6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa4f2,
		iy:      0x593a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x64, 0xdc}},
			mock.Slice{Addr: 0x599e, Values: []uint8{0x15}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbdd",
		af:      0x8773,
		bc:      0x70a6,
		de:      0x83ce,
		hl:      0x52b8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x35da,
		iy:      0x1d94,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x75, 0xdd}},
			mock.Slice{Addr: 0x1e09, Values: []uint8{0x28}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbde",
		af:      0x8310,
		bc:      0xfa01,
		de:      0x6c69,
		hl:      0x252a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x5291,
		iy:      0xc9e0,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x17, 0xde}},
			mock.Slice{Addr: 0xc9f7, Values: []uint8{0x41}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbdf",
		af:      0x780d,
		bc:      0xa722,
		de:      0xe78e,
		hl:      0x50ba,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x9d67,
		iy:      0xeac3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x93, 0xdf}},
			mock.Slice{Addr: 0xea56, Values: []uint8{0xef}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe0",
		af:      0x10ef,
		bc:      0x4101,
		de:      0x2ca5,
		hl:      0xf752,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4747,
		iy:      0x1507,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x56, 0xe0}},
			mock.Slice{Addr: 0x155d, Values: []uint8{0xb9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe1",
		af:      0xe4cb,
		bc:      0x6f72,
		de:      0x1c11,
		hl:      0x1426,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x189b,
		iy:      0x0e0d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd1, 0xe1}},
			mock.Slice{Addr: 0x0dde, Values: []uint8{0x16}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe2",
		af:      0x11a9,
		bc:      0xbae8,
		de:      0x938b,
		hl:      0xbac4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd8ed,
		iy:      0xe49c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x50, 0xe2}},
			mock.Slice{Addr: 0xe4ec, Values: []uint8{0xc2}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe3",
		af:      0x8832,
		bc:      0x952b,
		de:      0x02b2,
		hl:      0x26ef,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xfb55,
		iy:      0xada8,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xca, 0xe3}},
			mock.Slice{Addr: 0xad72, Values: []uint8{0xba}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe4",
		af:      0x3989,
		bc:      0x4142,
		de:      0x89e2,
		hl:      0x785b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0bf7,
		iy:      0x5474,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x62, 0xe4}},
			mock.Slice{Addr: 0x54d6, Values: []uint8{0x7b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe5",
		af:      0xe5c5,
		bc:      0xb86d,
		de:      0x41bb,
		hl:      0x315e,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x1a78,
		iy:      0xa52d,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xda, 0xe5}},
			mock.Slice{Addr: 0xa507, Values: []uint8{0x4c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe6",
		af:      0xfd89,
		bc:      0xd888,
		de:      0x1e2f,
		hl:      0xddf5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x42f5,
		iy:      0x8b06,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x76, 0xe6}},
			mock.Slice{Addr: 0x8b7c, Values: []uint8{0x45}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe7",
		af:      0x2025,
		bc:      0xd3e9,
		de:      0xd4b6,
		hl:      0xaa30,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x88bd,
		iy:      0xb597,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x11, 0xe7}},
			mock.Slice{Addr: 0xb5a8, Values: []uint8{0xa6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe8",
		af:      0x514d,
		bc:      0xc2ab,
		de:      0x37b5,
		hl:      0x57de,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xa4ec,
		iy:      0x0a77,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xed, 0xe8}},
			mock.Slice{Addr: 0x0a64, Values: []uint8{0xd0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbe9",
		af:      0x974e,
		bc:      0xd28e,
		de:      0xd5cb,
		hl:      0x6bd4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x158a,
		iy:      0xa84e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x35, 0xe9}},
			mock.Slice{Addr: 0xa883, Values: []uint8{0x2f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbea",
		af:      0x3ef4,
		bc:      0x3fc6,
		de:      0x4a44,
		hl:      0xe9a4,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc877,
		iy:      0x7593,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x93, 0xea}},
			mock.Slice{Addr: 0x7526, Values: []uint8{0x1b}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbeb",
		af:      0x798f,
		bc:      0x5e9b,
		de:      0x940e,
		hl:      0x2e52,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd6ad,
		iy:      0x2411,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd0, 0xeb}},
			mock.Slice{Addr: 0x23e1, Values: []uint8{0x47}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbec",
		af:      0x38a4,
		bc:      0x07c0,
		de:      0x6cee,
		hl:      0xe715,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf160,
		iy:      0xd2eb,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xf3, 0xec}},
			mock.Slice{Addr: 0xd2de, Values: []uint8{0x49}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbed",
		af:      0xe0bc,
		bc:      0x70c1,
		de:      0xde35,
		hl:      0x81c5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xd57f,
		iy:      0x0eab,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x58, 0xed}},
			mock.Slice{Addr: 0x0f03, Values: []uint8{0x10}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbee",
		af:      0x5fcb,
		bc:      0x9007,
		de:      0x1736,
		hl:      0xaca8,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4bab,
		iy:      0x42bc,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x02, 0xee}},
			mock.Slice{Addr: 0x42be, Values: []uint8{0xd0}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbef",
		af:      0x4ee3,
		bc:      0xd344,
		de:      0xcb5b,
		hl:      0xaeb5,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xde5f,
		iy:      0x2272,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x58, 0xef}},
			mock.Slice{Addr: 0x22ca, Values: []uint8{0x09}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf0",
		af:      0x1080,
		bc:      0xb270,
		de:      0x1b5b,
		hl:      0xa9b7,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe89d,
		iy:      0xee9e,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x45, 0xf0}},
			mock.Slice{Addr: 0xeee3, Values: []uint8{0x2c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf1",
		af:      0x1702,
		bc:      0xc43b,
		de:      0xd138,
		hl:      0x316f,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8067,
		iy:      0x4783,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x2f, 0xf1}},
			mock.Slice{Addr: 0x47b2, Values: []uint8{0xdc}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf2",
		af:      0x732a,
		bc:      0x4cd1,
		de:      0x77fe,
		hl:      0x4814,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x42f1,
		iy:      0xea97,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x2c, 0xf2}},
			mock.Slice{Addr: 0xeac3, Values: []uint8{0x5e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf3",
		af:      0x6b97,
		bc:      0x59d3,
		de:      0xf546,
		hl:      0x7530,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x6670,
		iy:      0x7d90,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x38, 0xf3}},
			mock.Slice{Addr: 0x7dc8, Values: []uint8{0x0c}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf4",
		af:      0x7af0,
		bc:      0xa81f,
		de:      0x5d3a,
		hl:      0x799b,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe12b,
		iy:      0x309c,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xd0, 0xf4}},
			mock.Slice{Addr: 0x306c, Values: []uint8{0x0e}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf5",
		af:      0x1370,
		bc:      0xf6b2,
		de:      0xaaa2,
		hl:      0x7f0a,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc9f6,
		iy:      0x6b1f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x55, 0xf5}},
			mock.Slice{Addr: 0x6b74, Values: []uint8{0xf8}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf6",
		af:      0x7c43,
		bc:      0xfcd1,
		de:      0x34bd,
		hl:      0xf4ab,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xef33,
		iy:      0xc61a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x56, 0xf6}},
			mock.Slice{Addr: 0xc670, Values: []uint8{0x5d}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf7",
		af:      0xe6da,
		bc:      0x231a,
		de:      0x7bb1,
		hl:      0x800d,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe37e,
		iy:      0x5789,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x9e, 0xf7}},
			mock.Slice{Addr: 0x5727, Values: []uint8{0x66}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf8",
		af:      0xfa29,
		bc:      0xee74,
		de:      0xd7c4,
		hl:      0xafaf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x512c,
		iy:      0xde7a,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x54, 0xf8}},
			mock.Slice{Addr: 0xdece, Values: []uint8{0x7a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbf9",
		af:      0x4662,
		bc:      0xa71b,
		de:      0x5065,
		hl:      0xed06,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x279e,
		iy:      0x99e3,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x30, 0xf9}},
			mock.Slice{Addr: 0x9a13, Values: []uint8{0xc6}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbfa",
		af:      0x9426,
		bc:      0x53ec,
		de:      0x5016,
		hl:      0x6c99,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x8b99,
		iy:      0xbd79,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x09, 0xfa}},
			mock.Slice{Addr: 0xbd82, Values: []uint8{0xf4}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbfb",
		af:      0x5343,
		bc:      0xb212,
		de:      0x09ca,
		hl:      0xe3c6,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xcd2b,
		iy:      0xf875,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xba, 0xfb}},
			mock.Slice{Addr: 0xf82f, Values: []uint8{0xed}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbfc",
		af:      0x0965,
		bc:      0x4392,
		de:      0xca25,
		hl:      0x2baa,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xf023,
		iy:      0x6623,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x56, 0xfc}},
			mock.Slice{Addr: 0x6679, Values: []uint8{0x65}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbfd",
		af:      0x1751,
		bc:      0x233c,
		de:      0x6214,
		hl:      0xd119,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xc415,
		iy:      0x5d2b,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x25, 0xfd}},
			mock.Slice{Addr: 0x5d50, Values: []uint8{0x27}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbfe",
		af:      0xb4cf,
		bc:      0x5639,
		de:      0x677b,
		hl:      0x0ca2,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xddc5,
		iy:      0x4e4f,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0x88, 0xfe}},
			mock.Slice{Addr: 0x4dd7, Values: []uint8{0x4a}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdcbff",
		af:      0xf151,
		bc:      0x13da,
		de:      0x7c56,
		hl:      0xf025,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x2b36,
		iy:      0x2aed,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xcb, 0xe4, 0xff}},
			mock.Slice{Addr: 0x2ad1, Values: []uint8{0x97}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fde1",
		af:      0x828e,
		bc:      0x078b,
		de:      0x1e35,
		hl:      0x8f1c,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x4827,
		iy:      0xb742,
		sp:      0x716e,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xe1}},
			mock.Slice{Addr: 0x716e, Values: []uint8{0xd5, 0x92}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fde3",
		af:      0x4298,
		bc:      0xc805,
		de:      0x6030,
		hl:      0x4292,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x473b,
		iy:      0x9510,
		sp:      0x1a38,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xe3}},
			mock.Slice{Addr: 0x1a38, Values: []uint8{0xe0, 0x0f}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fde5",
		af:      0xd139,
		bc:      0xaa0d,
		de:      0xbf2b,
		hl:      0x2a56,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xe138,
		iy:      0xd4da,
		sp:      0xa8e1,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xe5}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fde9",
		af:      0xc14f,
		bc:      0x2eb6,
		de:      0xedf0,
		hl:      0x27cf,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x09ee,
		iy:      0xa2a4,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xe9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fdf9",
		af:      0xc260,
		bc:      0x992e,
		de:      0xd544,
		hl:      0x67fb,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0xba5e,
		iy:      0x3596,
		sp:      0x353f,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfd, 0xf9}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "fe",
		af:      0x6900,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x0000,
		pc:      0x0000,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x0000, Values: []uint8{0xfe, 0x82}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
	fuseTest{
		name:    "ff",
		af:      0x0000,
		bc:      0x0000,
		de:      0x0000,
		hl:      0x0000,
		af1:     0x0000,
		bc1:     0x0000,
		de1:     0x0000,
		hl1:     0x0000,
		ix:      0x0000,
		iy:      0x0000,
		sp:      0x5507,
		pc:      0x6d33,
		i:       0x00,
		r:       0x00,
		iff1:    0,
		iff2:    0,
		im:      0,
		halt:    0,
		tstates: 1,
		memory: []mock.Slice{
			mock.Slice{Addr: 0x6d33, Values: []uint8{0xff}},
		},
		portReads:  []mock.Slice{},
		portWrites: []mock.Slice{},
	},
}
